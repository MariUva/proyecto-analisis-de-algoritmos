ISSN,Volume,DOI,Issue,Publisher,Abstract,Publication Title,Title,Author
18657923,18,10.3991/ijim.v18i13.47711,13,International Journal of Interactive Mobile Technologies,"In the rapidly evolving digital age, the need for computational thinking (CT) skills is answered with the introduction of CT-Mobile, an innovative Android-based graphic design application. The app integrates basic computational concepts with graphic design principles, providing a unique platform for users to improve problem-solving, algorithmic thinking, and logical reasoning skills. This study used a research and development (R&D) approach with the 4-D Model (define, design, develop, and disseminate) as a guide. The validity test with experts categorized CT-Mobile as ""valid"" with values of 0.85 and 0.88 from media experts and material experts. The practicality of this application was rated as ""very practical"" by teachers (89.67%) and students (86.34%). These findings confirm the significant benefits of CT-Mobile in graphic design learning, both for educators and students. The analysis showed a positive impact on users' CT ability, reflected by improved problem-solving efficiency and a deeper understanding of algorithmic processes. This study provides valuable insights into the relationship between mobile application development, graphic design education, and the development of CT skills. CT-Mobile emerges as a promising tool to bridge technology, creativity, and cognitive skill development in the digital age. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,CT-Mobile: Enhancing Computational Thinking via Android Graphic Design App.,"Hakiki, Muhammad; Halomoan; Fadli, Radinal; Hidayah, Yayuk; Zunarti, Rita; Yanti, Vivi Yosefri"
20763417,14,10.3390/app14125261,12,MDPI,"Featured Application: Altogether, UniCTCheck, a method for measuring the main components of computational thinking of CS university students, was employed by using the following two instruments: firstly, a web application, CTScore, to precisely measure seven of the main components of computational thinking (pattern recognition, creative thinking, algorithmic thinking, problem solving, critical thinking, decomposition, and abstraction); secondly, a psychometric scale, CTProg, to measure CT programming concepts skills (basic directions and sequences, conditionals, loops, functions, and data structures). The measurement of computational thinking ability among computer science (CS) university students is of paramount importance. This study introduces UniCTCheck, a novel method designed to assess the main components of computational thinking in CS students. Utilising two key instruments, namely, the web application CTScore and the psychometric scale CTProg, this research aims to precisely evaluate seven core components of computational thinking and six programming concepts skills essential for CS students. The study, conducted at Rey Juan Carlos University and Atlantic Technological University Galway, involved a diverse sample of students from different year levels and programme specialisations. Through a rigorous research design, including sampling strategies and data collection tools, this study seeks to address critical research questions related to the measurement of variations in students' computational thinking and programming skills by gender, university level, and location. By shedding light on the significance of computational thinking and programming in the educational realm, this research contributes to the existing literature and underscores the essential role of computational skills in the modern era. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),Computational Thinking Measurement of CS University Students.,"Hijón-Neira, Raquel; Pizarro, Celeste; French, John; Palacios-Alonso, Daniel; Çoban, Emre"
18657923,18,10.3991/ijim.v18i11.49097,11,International Journal of Interactive Mobile Technologies,"This study focuses on investigating the integration of project-based learning with computational thinking (PjBL-CT) skills to enhance students' proficiency in learning mobile programming. The findings of the model provide an evaluation of cognitive aspects, affective aspects in the form of 4C soft skills, and psychomotor aspects. To measure the effectiveness of the model, we will test the differences in the quality of student learning outcomes between two groups: the control group and the experimental group. The cognitive test results showed a value of 80.85 for the experimental class and 73.21 for the control class. For the assessment of soft skill 4C, student creativity aspects are superior to other aspects. Whereas for aspects of enhancing the project's value, an important finding from the results obtained is the signifi- cant improvement in the quality of learning by incorporating computational thinking into the problem-based learning (PBL) model. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,Implementation of Project-Based Learning Computational Thinking Models in Mobile Programming Courses.,"Ismael; Jalinus, Nizwardi; Putra, Rusnardi Rahmat"
24144088,8,10.3390/mti8050039,5,MDPI,"Computational thinking (CT) has garnered significant interest in both computer science and education sciences as it delineates a set of skills that emerge during the problem-solving process. Consequently, numerous assessment instruments aimed at measuring CT have been developed in the recent years. However, a scarce part of the existing CT measurement instruments has been dedicated to early school ages, and few have undergone rigorous validation or reliability testing. Therefore, this work introduces a new instrument for measuring CT in the early grades of elementary education: the Computational Thinking Test for Children (CTTC). To this end, in this work, we provide the design and validation of the CTTC, which is constructed around spatial, sequential, and logical thinking and encompasses abstraction, decomposition, pattern recognition, and coding items organized in five question blocks. The validation and standardization process employs the Kuder–Richardson statistic (KR-20) and expert judgment using V-Aiken for consistency. Additionally, item difficulty indices were utilized to gauge the difficulty level of each question in the CTTC. The study concludes that the CTTC demonstrates consistency and suitability for children in the first cycle of primary education (encompassing the first to third grades). [ABSTRACT FROM AUTHOR] Copyright of Multimodal Technologies & Interaction is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Multimodal Technologies & Interaction,Design and Validation of a Computational Thinking Test for Children in the First Grades of Elementary Education.,"Aristizábal Zapata, Jorge Hernán; Gutiérrez Posada, Julián Esteban; Diago, Pascual D."
20888708,14,10.11591/ijece.v14i2.pp2088-2099,2,Institute of Advanced Engineering & Science,"Computational thinking skills (CTS) play a crucial role across diverse domains, involving a thinking process that allows the execution of solutions by information processing agents. Measuring the level of CTS becomes essential to ensure that administrators effectively leverage technology. However, finding suitable instruments to measure and justify CTS levels in administration can be challenging. The selection of situational judgement test (SJT) is supported by its validity and reliability in assessing attributes, including professionalism. The instrument's development includes face validity, discriminant validity (using Pearson correlation and Cronbach's alpha), and exploratory factor analysis (EFA). The study involved 111 undergraduate administration students from various Indonesian universities, and data were collected in 2023. Following a discriminant validity analysis, ten items were eliminated, while 23 met the criteria with p<0.050 and r>0.185. Subsequently, EFA yielded 16 items forming seven components, covering algorithmic thinking, problem-solving, technology literacy, problem abstraction, problem reformulation, data management in administration technology, and administrative data presentation with loading factor variations (0.421-0.868). The final instrument, consisting of 16 valid items and seven components, effectively evaluates the level of administrator computational thinking skills (ACTS) among administration students. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Electrical & Computer Engineering (2088-8708) is the property of Institute of Advanced Engineering & Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Electrical & Computer Engineering (2088-8708),Situational judgment test measures administrator computational thinking with factor analysis.,"Indrawati, Cicilia Dyah Sulistyaningrum; Permansah, Sigit; Ninghardjanti, Patni; Subarno, Anton; Winarno; Rusmana, Dede"
22558942,12,10.22364/bjmc.2024.12.2.05,2,University of Latvia,"Many European countries have revised their curricula in recent years, introducing basic computer science concepts. This has paved the way for developing students' computational thinking (CT) skills. Despite increasing uptake, several issues and challenges are emerging for the effective integration of CT skills in compulsory education. The purpose of this paper is to examine the rationale for integrating CT skills in the European primary and lower secondary education curricula and the enablers and barriers to teaching and assessing these skills. A wide range of evidence was collected through three multiple-case studies involving 40 semi-structured interviews with experts, policymakers, school leaders and teachers, and 10 focus groups with students. Thematic analysis was conducted on 3,424 excerpts through NVivo to identify recurring codes and themes regarding implementation of CT skills within the curriculum in nine European countries and to explore commonalities and patterns across the cases. A common enabler is adopting appropriate measures for creating guidelines, learning materials and a large-scale professional development program. On the barrier side, the lack of qualified teachers, lack of quality materials and the challenges related to large-scale upskilling are shared. [ABSTRACT FROM AUTHOR] Copyright of Baltic Journal of Modern Computing is the property of University of Latvia and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Baltic Journal of Modern Computing,Fostering Computational Thinking in Compulsory Education in Europe: A Multiple Case Study.,"DAGIENĖ, Valentina; KAMPYLIS, Panagiotis; GIANNOUTSOU, Nikoleta; ENGELHARDT, Katja; MALAGOLI, Chiara; BOCCONI, Stefania"
25281410,9,10.17509/ijost.v9i1.67258,1,Indonesian Journal of Science & Technology,"The research problem centered around the need to enhance students' computational thinking (CT) ability, which is crucial for their success in the present and future. This study aims to examine the efficacy of Augmented Reality (AR) in improving the CT abilities of seventh-grade junior high school students. The study utilized a quasi-experimental design with a control group and an experimental group to meet the research aims. The control group was provided with conventional mathematical instruction through established teaching methods, while the experimental group was exposed to mathematics learning enhanced by AR media. The study involved 160 students from four junior high schools located in one of the cities in Indonesia. A five-question CT ability test was employed as the research instrument. The mean difference test was used to analyze the data and compare the performance of the control and experimental groups. The research findings indicated that the effective application of AR media significantly enhanced the CT skills of seventhgrade adolescents in middle school. The results aid in creating new teaching approaches and emphasize the possibilities of AR technology in math education. [ABSTRACT FROM AUTHOR] Copyright of Indonesian Journal of Science & Technology is the property of Indonesian Journal of Science & Technology and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Indonesian Journal of Science & Technology,"Augmented Reality for Cultivating Computational Thinking Skills in Mathematics Completed with Literature Review, Bibliometrics, and Experiments for Students.","Angraini, Lilis Marina; Susilawati, Aay; Noto, Muchamad Subali; Wahyuni, Reni; Andrian, Dedek"
21924880,14,10.3991/ijep.v14i5.49995,5,International Society of Engineering Education (IGIP),"This study aims to reveal the role of one of the artificial intelligence (AI) techniques, ""ChatGPT,"" in improving the educational process by following it as a teaching method for the subject of automatic analysis for students of the Chemistry Department and the subject of computer security for students of the Computer Science Department, from the fourth stage at the College of Education for Pure Science (Ibn Al-Haitham), and its impact on their computational thinking to have a good educational environment. The experimental approach was used, and the research samples were chosen intentionally by the research community. Research tools were prepared, which included a scale for CT that included 12 items and the achievement test in both scientific subjects for departments as the second tool. They reached a lot of conclusions. Accordingly, a set of recommendations were proposed. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Engineering Pedagogy is the property of International Society of Engineering Education (IGIP) and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Engineering Pedagogy,The Impact of Artificial Intelligence on Computational Thinking in Education at University.,"Ameen, Linda Talib; Yousif, Maysam Raad; Jasim Alnoori, Najwa Abdulmunem; Majeed, Ban Hassan"
29947111,1,,5,International Technology & Engineering Educators Association,"The article discusses the integration of robotics into early childhood education to enhance computational thinking (CT) skills and promote Science, Technology, Engineering, and Mathematics (STEM) knowledge. Topics discussed such as the role of robotics in early STEM education, practical examples of integrating robotics into language and math activities, and challenges and solutions for implementing robotics in kindergarten classrooms.",Technology & Engineering Education (TEE),Early Childhood Robotics: Igniting Innovation and Computational Thinking.,"YUJIRO FUJIWARA; EBARLE, AUDREY"
26734591,55,10.3390/engproc2023055040,,MDPI,"As information explosion and algorithms are proliferated in the digital age, computational thinking becomes more critical. Nevertheless, most activities that promote computational thinking are always presented in a programming or block language, which tends to horrify students. This study aimed to develop a series of non-programmed, computational-thinking training activities to demonstrate if they improve students' computational thinking skills without writing code. In the meantime, it is checked whether students' learning styles influence their outcomes. After an investigation consisting of a 16 h gamified learning session, we observed that students' computational thinking skills improved overall. Furthermore, the initial learning style of the students influenced the effect of different dimensions of computational thinking in the learning procedures. [ABSTRACT FROM AUTHOR] Copyright of Engineering Proceedings is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Engineering Proceedings,Effect of Learning Style on Non-Programmed Computational Thinking Activities †.,"Chen, Yen-Yun; Su, Shih-Wen; Chen, Li-Xian; Liao, Chia-Hung; Yuan, Shyan-Ming"
26734591,55,10.3390/engproc2023055031,,MDPI,"Due to the COVID-19 pandemic, courses for all ages in many countries moved online. The ability to use information technology fluently for learning has become a vital issue. Whether students can develop computational thinking (CT) literacy in online or offline learning environments is investigated. Two web games, Rummikub and Robozzle, are applied to teach computational thinking through Google Meet, Google Classroom, and offline live teaching. The results indicate that offline training activities are more appropriate for middle school students. [ABSTRACT FROM AUTHOR] Copyright of Engineering Proceedings is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Engineering Proceedings,A Comparison of Online and Offline Digital Gameplay Activities in Promoting Computational Thinking in K-12 Education †.,"Chen, Li-Xian; Su, Shih-Wen; Chen, Yen-Yun; Liao, Chia-Hung; Yuan, Shyan-Ming"
20763417,14,10.3390/app14030991,3,MDPI,"Background: The purpose of this study is to find the effects of the international training program for enhancing intelligent capabilities through blended learning on computational thinking, artificial intelligence (AI) competency, and core competencies for the future society in graduated students enrolled in the Smart Information Communication Technology (SMART ICT) course. The teaching model followed the ADDIE framework. Methods: This study is a quasi-experimental study based on nonequivalent control group design. Study subjects were assigned to an experimental (n = 20) or control group (n = 20). The experimental group participated in the international training program in the blended learning form, real-time online classes (60 min per session for a week, six sessions) and face-to-face classes (4–8 h per session for 9 days, six sessions). The variables were measured with a self-report questionnaire and were evaluated before, right after, and in the 12th week of the program. Results: The AI competency of the experimental group was observed to be significantly changed at the points of time (F = 6.76, p = 0.002), and in comparison with that of a different group (F = 9.77, p = 0.003). Conclusions: This study suggests applying an international training program based on blended learning to strengthen intelligence capabilities such as artificial intelligence capabilities. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),"Effects of the International Training Program for Enhancing Intelligent Capabilities through Blended Learning on Computational Thinking, Artificial Intelligence Competencies, and Core Competencies for the Future Society in Graduate Students.","Ahn, Yeong-Hwi; Oh, Eun-Young"
26734591,55,10.3390/engproc2023055062,,MDPI,"Computational thinking (CT) has become one of the critical goals of teaching CS programming courses. Computational skills consist of skills taken in a computational form in learning programming and dealing with daily life. More research adopted games to teach CT skills. This paper investigated two games, Little Alchemy 2 and Dr. Sudoku, to promote CS students' CT skills and applied international Bebras tests to measure their CT skills. The results showed that CT skills in problem decomposition and pattern recognition could be improved via digital games. Thus, this study contributes to computing education using available digital games to promote CS college students' CT abilities. [ABSTRACT FROM AUTHOR] Copyright of Engineering Proceedings is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Engineering Proceedings,Digital Game Approaches for Cultivating Computational Thinking Skills in College Students †.,"Chen, Li-Xian; Su, Shih-Wen; Liao, Chia-Hung; Hsiao, Mei-Jin; Yuan, Shyan-Ming"
25781863,2024,10.1155/2024/5044787,,Hindawi Limited,"Digital computers were invented in the 1940s. They are sophisticated and versatile machines whose functioning is grounded in elaborate theory. Advances in theory and the availability of computers helped computer science to develop as an academic discipline, and university departments for the same started coming up in the 1960s. Computer science covers all phenomenon related to computers and consists primarily of man-made laws governing building, programming, and using computers. Computational thinking is a way of thinking influenced by computers and computer science. There are two schools of thought on computational thinking. The first school sees computational thinking as the use of computers to explore the world, while the other sees computational thinking as the application of concepts from computer science to solve real-world problems. Scholars typically agree that computational thinking has four essential components, viz., abstraction, decomposition, algorithm design, and generalization. Computational thinking is often feted by computer scientists as a useful skill that can be used by anybody anywhere. However, it is necessary to find out ways for successfully using computational thinking in domains other than computer science before it can be declared a universal skill. [ABSTRACT FROM AUTHOR] Copyright of Human Behavior & Emerging Technologies is the property of Hindawi Limited and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Human Behavior & Emerging Technologies,"Computer, Computer Science, and Computational Thinking: Relationship between the Three Concepts.","Chakraborty, Pinaki"
21931127,13,10.1140/epjds/s13688-023-00443-0,1,Springer Nature,"Deductive and theory-driven research starts by asking questions. Finding tentative answers to these questions in the literature is next. It is followed by gathering, preparing and modelling relevant data to empirically test these tentative answers. Inductive research, on the other hand, starts with data representation and finding general patterns in data. Ahn suggested, in his keynote speech at the seventh International Conference on Computational Social Science (IC2S2) 2021, that the way this data is represented could shape our understanding and the type of answers we find for the questions. He discussed that specific representation learning approaches enable a meaningful embedding space and could allow spatial thinking and broaden computational imagination. In this commentary, I summarize Ahn's keynote and related publications, provide an overview of the use of spatial metaphor in sociology, discuss how such representation learning can help both inductive and deductive research, propose future avenues of research that could benefit from spatial thinking, and pose some still open questions. [ABSTRACT FROM AUTHOR] Copyright of EPJ Data Science is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",EPJ Data Science,"Thinking spatially in computational social science: Commentary on Yong-Yeol Ahn (2021): ""Representation learning for computational imagination"".","Akbaritabar, Aliakbar"
20885334,13,10.18517/ijaseit.13.5.19044,5,INSIGHT - Indonesian Society for Knowledge & Human Development,"Recent advances in artificial intelligence and Software have resulted in a paradigm shift in education, necessitating greater changes in educational methods and environments. Many countries worldwide have highlighted computational thinking as the core competence related to software education, leading to an increase in the number of studies focusing on computational thinking in Korea as well. Future demands must be analyzed, and curricula must be improved through in-depth education in computational thinking. Therefore, computational thinking curricula currently offered by universities for students majoring and not majoring in related fields must be reformed for precise educational goals. While research on computational thinking for non-major students has been consistently conducted, curricula for major students are inadequate, and there is a lack of learning opportunities because of the expectation that education on computational thinking for computer science major students will be naturally achieved. Thus, for the purpose of improving the computational thinking education for computer science major students, this study conducted a survey consisting of six questions on ""perception of computational thinking"" and 11 questions on ""need of computational thinking"" among 313 students majoring in computer science at a university in Korea. In the study results, 177 students (56.5%) answered ""I do not know"" for the question ""I know what computational thinking is well enough,"" indicating that computational thinking education must be expanded and considered not only for non-computer science majors but also for computer science major students. [ABSTRACT FROM AUTHOR] Copyright of International Journal on Advanced Science, Engineering & Information Technology is the property of INSIGHT - Indonesian Society for Knowledge & Human Development and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","International Journal on Advanced Science, Engineering & Information Technology",A Study on Computational Thinking for Major of Computer Science.,Hyo-joo Woo; Yeong-wook Yang; Jaechoon Jo
07356331,62,10.1177/07356331241236882,5,Sage Publications Inc.,"This research aimed to investigate the structural relationships among teachers' computational thinking (CT), design thinking (DT), robotics teaching beliefs, and robotics pedagogical content knowledge (RPCK). A total of 98 in-service and pre-service teachers who participated in a robotics teaching professional development workshop served as the sample of the study. A survey including the Computational Thinking Scale, the Design Thinking Disposition Scale, the Robotics Teaching Beliefs Scale and the Technological Pedagogical Content Knowledge–Robotics Scale was conducted after the workshop. A confirmatory factor analysis was employed to validate the measurement constructs, and Partial Least Squares - Structural Equation Modeling (PLS-SEM) analysis was utilized to examine the relationships among the factors. The results revealed that both CT and DT dispositions could positively predict teachers' robotics teaching beliefs, which subsequently predicted their RPCK. Moreover, a direct positive relationship between CT and RPCK was identified, while such a relationship was not evident for DT. The model demonstrates the critical role of CT in shaping teachers' beliefs and pedagogical strategies of robotics teaching, and provides insights into the indirect influence of DT. Finally, the Model of Robotics Teaching Professional Development (MRTPD) was proposed to profile how to promote teachers' pedagogical content knowledge of robotics teaching from their CT and DT dispositions. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Predicting Robotics Pedagogical Content Knowledge: The Role of Computational and Design Thinking Dispositions via Teaching Beliefs.,"Hsu, Chung-Yuan; Tsai, Meng-Jung"
02664909,40,10.1111/jcal.12996,4,Wiley-Blackwell,"Background: Artificial intelligence–generated content (AIGC) has stepped into the spotlight with the emergence of ChatGPT, making effective use of AIGC for education a hot topic. Objectives: This study seeks to explore the effectiveness of integrating AIGC into programming learning through debugging. First, the study presents three levels of AIGC integration based on varying levels of abstraction. Then, drawing on extended effective use theory, the study proposes the underlying mechanism of how AIGC integration impacts programming learning performance and computational thinking. Methods: Three debugging interfaces integrated with AIGC by ChatGPT were developed for this study according to three levels of AIGC integration design. The study conducts a between‐subject experiment with one control group and three experimental groups. Analysis of covariance and a structural equation model are employed to examine the effects. Results and Conclusions: The results show that the second and third levels of abstraction in AIGC integration yield better learning performance and computational thinking, but the first level shows no difference compared to traditional debugging. The underlying mechanism suggests that the second and third levels of abstraction promote transparent interaction, which enhances representational fidelity and consequently impacts learning performance and computational thinking, as evidenced in test of the mechanism. Moreover, the study finds that learning fidelity weakens the effect of transparent interaction on representational fidelity. Our research offers valuable theoretical and practical insights. Lay Description: What is currently known about the subject matter?: In the present information era, programming and computational thinking are important.AIGC has attracted remarkable attention from both academics and managers.If it is appropriately utilised, AIGC can facilitate education. What this paper adds: Three forms of AIGC integration based on the level of abstraction, which enhance programming learning and computational thinking.Application of extended effective use theory to propose an underlying mechanism for how AIGC integration affects learning performance and computational thinking.Concrete information on the utilisation of AIGC in the education domain.Evidence that shows the importance of interaction transparency and representational fidelity for leveraging information technologies in education. Implications of the study findings for practitioners: AIGC can be an effective tool for teachers, learners, and institutions.Platform designers and teachers should carefully design AICG integration.Platform designers and teachers could make use of various methods and other forms of AIGC integration to promote interaction transparency. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Empowering learners with AI‐generated content for programming learning and computational thinking: The lens of extended effective use theory.,"Shanshan, Shang; Sen, Geng"
07356331,62,10.1177/07356331241242435,5,Sage Publications Inc.,"Addressing cognitive disparities has become a paramount concern in computational thinking (CT) education. The intricate and nuanced relationships between CT and cognitive variations emphasize the needs to accommodate diverse cognitive profiles when fostering CT skills, recognizing that these cognitive functions can manifest as either strengths or limitations in different students. Consequently, understanding the connections between students' cognitive functions and CT skills assumes pivotal importance in the design of personalized instructional strategies for CT. Despite a general consideration of learning variability in CT education, empirical insights exploring the correlation between cognitive skills and CT competencies remain notably scarce. This study endeavors to bridge this research gap by investigating the links between executive functions and CT skills, as well as the associations between their sub-dimensions. The results reveal a statistically significant correlation coefficient of 0.452 between these two domains, underscoring the notable connection between executive functions and CT abilities. Furthermore, the sub-dimensional analysis offers a comprehensive understanding of how specific executive functions uniquely contribute to certain CT skills. In light of these findings, this research offers a promising pathway for the development of tailored CT education programs that can cater to the unique needs of each individual, ultimately facilitating inclusive CT programs and making significant contributions to broaden STEM education and future workforce. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Relationships Between Executive Functions and Computational Thinking.,"Liu, Tongxi"
07356331,62,10.1177/07356331241240670,5,Sage Publications Inc.,"This study employs meta-analysis to synthesize findings from 30 articles investigating gender differences in computational thinking (CT) among K-12 students. Encompassing 51 independent effect sizes, the meta-analysis involves a participant pool of 9181 individuals from various countries, comprising 4254 males and 4927 females. Results indicate statistically significant gender differences in CT (Hedges's g = 0.091, p <.05), albeit with a modest effect size, revealing higher CT scores among males compared to females. Further moderation analyses unveil the multifaceted nature of these gender differences. Specifically, while gender differences become significant during high school, recent studies suggest a gradual reduction in CT gender differences with societal progress among K-12 students. Moreover, findings illustrate variations in gender differences across geographical regions. Notably, while the overall gender disparity in CT is non-significant in the ""East Asia and Pacific"" region, it widens in ""North America"" and ""Europe"", with males scoring higher than females. Conversely, in ""Europe and Central Asia"", such gender differences present inconsistent outcomes, with females scoring higher than males. Importantly, assessment tool type does not significantly influence gender differences. Lastly, this study offers recommendations to address CT gender gaps, providing valuable insights for promoting gender equality in education. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Exploring Gender Differences in Computational Thinking Among K-12 Students: A Meta-Analysis Investigating Influential Factors.,"Hu, Linlin"
07356331,62,10.1177/07356331241236744,5,Sage Publications Inc.,"The interest in Computational Thinking (CT) development among young learners increases with the number of studies located in literature. In this study, a meta-analysis was conducted to address two main objectives: (a) the effectiveness of empirical interventions on the development of CT in children aged of 3–8 years; and (b) the variables that influence the effectiveness of the interventions. Following PRISMA procedures, we identified 17 empirical studies with 34 effect sizes and 1665 participants meeting the inclusion criteria from Web of Science database. Overall, we found a statistically significant large effect size (d =.83 [95% CI: 730,.890]; p <.001) on the CT development of 3–8 years old children, which provides empirical support for having young children to engage in CT experiences. The effect size was significantly influenced by moderating variables including gender, scaffolding, and education level. Intervention length showed a marginally significant effect. Therefore, educators could refer to the significant moderators when designing tailored interventions for CT development in early childhood education while a call for more empirical studies of CT development in young children is proposed. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Do 3–8 Years Old Children Benefit From Computational Thinking Development? A Meta-Analysis.,"Wang, Xiaowen; Chan, Kan Kan; Li, Qianru; Leung, Shing On"
10613773,32,10.1002/cae.22740,4,Wiley-Blackwell,"Computational Thinking (CT) can be defined as the thought processes involved in formulating problems so that their solutions can be represented as sequential steps and algorithms. It is a key skill for children in the 21st century. However, it is unclear how CT can be developed most effectively in children. Several pedagogical methodologies have been proposed and are being investigated. The main aim of this paper is to test the hypothesis which states that using three‐dimensional (3D) simulated robots helps in the learning of programming and CT concepts, such as directions, loops, conditionals, and functions. The research questions are: Does this hypothesis hold true? Are some concepts easier or better learned than others and to what extent? The goal is to measure and evaluate the effect of using as a learning tool a platform with 3D simulated robots and realistic physics, and compare it with the standard Scratch learning tool which does not use robotics but a two‐dimensional (2D) cartoon avatar they are already familiar with. For practical reasons, a quasiexperimental design with nonequivalent groups and 85 second‐year Secondary Education students (ages 12–13) was performed. They were separated into control and experimental groups and followed a seven‐session intervention with the baseline 2D Scratch and the 3D simulated robots platform, respectively. Both used a visual block programming language and the same activities. To have quantitative and reliable results, a widely accepted CT test has been used, pre‐ and postintervention. Also qualitative feedback is presented. The obtained results show that using the platform with simulated 3D robots significantly helps when developing students' CT. With it, the students do learn basic programming concepts and reach higher scores in the CT test. This improvement applies to all CT‐analyzed concepts except in functions where the grades are maintained. Furthermore, students manage to master the activities on the 3D simulated robots platform, which reflects on the empowerment the platform has got in them. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Fostering computational thinking with simulated 3D robots in secondary education.,"Martín, Luis Castro‐San; Hijón‐Neira, Raquel; Pizarro, Celeste; Cañas, José M."
07356331,62,10.1177/07356331241227793,4,Sage Publications Inc.,"Computational thinking (CT), an essential 21st century skill, incorporates key computer science concepts such as abstraction, algorithms, and debugging. Debugging is particularly underrepresented in the CT training literature. This multi-level meta-analysis focused on debugging as a core CT skill, and investigated the effects of various debugging interventions. Moderator analyses revealed which interventions were effective, in which situations, and for what kind of learner. A significant overall mean effect of debugging interventions ( g ¯ = 0.64, CI = (0.32, 0.96), p <.001), was found based on 62 effect sizes from 18 source articles. Significant between-studies variation indicated that true effects could range from −0.54 to 1.82. In addition, sensitivity analyses and checks on confounding provided further understandings of intervention features and their impacts. Interventions using enhanced debuggers and systematic instruction were particularly effective in fostering debugging skills. Debugging intervention effects varied by participant population and potentially by publication type. Moreover, debugging interventions had impact regardless of how debugging skills were measured, programming medium used, control-group type, and whether the study was randomized. Future studies should investigate the best practices for improving debugging abilities for whom and under what circumstances. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Debugging in Computational Thinking: A Meta-analysis on the Effects of Interventions on Debugging Skills.,"Sun, Chen; Yang, Stephanie; Becker, Betsy"
07356331,62,10.1177/07356331241226746,4,Sage Publications Inc.,"This study was grounded in the spatial computational thinking model developed by the 3D Weather project funded by the NSF STEM+C program. The model reflects a discipline-based perspective towards computational thinking and captures the spatial nature of computational thinking in meteorology and the reliance of computational thinking on spatial thinking for geospatial analysis. The research was conducted among nineteen teachers attending the summer workshop offered by the project in its third project year to prepare them for teaching spatial computational thinking with IDV (Integrated Data Viewer, downloadable at https://www.unidata.ucar.edu/software/idv/) visualization of weather data. Quantitative survey data were collected measuring these teachers' meteorology content knowledge, spatial computational thinking, self-efficacy for teaching spatial computational thinking, and epistemic cognition of teaching meteorology. The data were analyzed to examine the effects of the workshop in terms of these variables and the correlations among them were also explored. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Preparing Teachers for Teaching Spatial Computational Thinking With Integrated Data Viewer Visualization of Weather Data: A Discipline-Based Perspective of Computational Thinking.,"Sun, Yan; Dyer, Jamie; Harris, Jonathan"
07356331,62,10.1177/07356331231220313,3,Sage Publications Inc.,"The study examined the effect of teaching text-based programming with a physical programming tool on secondary school students' computational thinking skills and self-efficacy perceptions. The study was conducted according to a sequential explanatory design as a mixed method research. The study group consisted of 85 secondary school students. Within the scope of the study, a physical programming tool called Micro:bit was used to teach Python programming for a period of 6 weeks. Data were collected using the Self-Efficacy Perception Scale for Computational Thinking Skill, Bebras: International Challenge on Informatics and Computational Thinking Tasks, tests focused on programming tool, concepts, and processes, and through semi-structured interview questioning. According to the findings obtained from pretests and posttests, a significant and positive difference was found in the students' computational thinking skills and self-efficacy perceptions towards computational thinking skill. As a result of having received instruction in programming, the students satisfactorily learnt the required programming concepts and processes. Through learning Python programming with a physical programming tool, the students not only gained the skills required to write appropriate syntax, and to test and debug code, but they also learnt programming concepts such as variables, conditional expressions, loops, and functions. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,The Effect of Teaching Physical Programming on Computational Thinking Skills and Self-Efficacy Perceptions Towards Computational Thinking.,"Yurdakök, Ezgi Arzu; Kalelioğlu, Filiz"
,,,,International Association for Development of the Information Society (IADIS),"Games, particularly serious games (SGs), have long been embraced in education for their inherent engagement and motivational qualities, especially among younger learners. In the realm of STEM education, SGs have emerged as a technological strategy to enhance student engagement and performance. This paper addresses the growing interest in SG implementation for computational thinking (CT) development within STEM education. Through the introducing of a Game Learning Analytics (GLA) framework, this research explores the predictive potential of technological tools in assessing learners' performance. Focused on the creation of SGs, the GLA framework aims to elucidate the relationship between SG participation and CT skill development. The study proposes a methodological approach for implementing GLA to predict STEM learners' performance in SGs, contributing to the ongoing discourse on leveraging technology to enhance education outcomes. [ABSTRACT FROM AUTHOR] Copyright of International Conference Interfaces & Human Computer Interaction is the property of International Association for Development of the Information Society (IADIS) and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Conference Interfaces & Human Computer Interaction,PREDICTING STEM LEARNERS' PERFORMANCE IN SERIOUS GAMES FOR COMPUTATIONAL THINKING USING GAME LEARNING ANALYTICS FRAMEWORK.,"Razak, Fatin Nasuha Abdul; Kamsin, Amirrudin; Rahman, Hameedur"
02664909,40,10.1111/jcal.12972,4,Wiley-Blackwell,"Background: A resurgence in teaching coding in primary school classrooms has led to a pedagogical swing towards using physical computing and coding to develop students' use of algorithms, computational thinking, and problem‐solving skills. Two obstacles impede the optimal development of these objectives: the availability of a suitable pedagogy and an instructional sequencing model for primary school teachers to effectively present coding and computational thinking concepts and skills to students in alignment with their developmental stage. Objective: This study aims to address both obstacles by introducing the 3C Model, a newly developed instructional sequence grounded in established pedagogies and designed to effectively teach coding and computational thinking skills to primary school students based on their developmental stage. Methods: The qualitative study employed two data sources to triangulate findings, using: (1) semi‐structured interviews and thematic analysis to investigate 11 primary school students' perceptions of their learning experiences with the 3C Model, and (2) researcher observations along with reflections of the students' developed and demonstrated learning through the method of knowing‐in‐action, reflection‐in‐action, and reflection‐on‐action. Results and Conclusions: The findings of this study fill a gap in the existing literature by demonstrating that the pedagogical and sequential approach embedded in the 3C Model not only enhanced students' engagement levels but also resulted in improved curriculum learning outcomes. The 3C Model provides teachers with a coherent and age‐appropriate instructional structure. It uses physical computing devices and digital coding platforms to introduce coding concepts, furthering the development of computational thinking skills in primary school students beyond mere procedural and rote learning. Implications: The study holds important implications for practical applications, as it addresses an absence in the literature of an established pedagogy and instructional sequencing model for effectively teaching coding and computational thinking concepts and skills to primary school students. Drawing on established pedagogical and developmental learning theories, the 3C Model provides primary school teachers with an engaging, age‐appropriate instructional method that avoids decontextualised teaching and surface‐based learning. Instead, it encourages collaborative student work and contextualised learning, steering away from isolated and generic approaches. Lay Description: What is currently known about this topic: Teaching coding and computational thinking concepts and skills is complex due to their abstract nature.Teaching resources such as work samples, curriculum connections and tools are available to primary school teachers.There is no consensus on the most effective methods to teach these abstract concepts and skills.Primary school teachers default to applying general teaching strategies due to the lack of an age‐appropriate, specific activity sequencing model to use during coding instruction. What does this paper add: The study fills the existing gap by presenting a newly conceptualised instructional model, which considers the students' developmental stage of learning and pedagogical best practices.The study trialled the 3C Model with primary school students in a classroom setting.The study found that employing the pedagogical approach of the 3C Model increased students' engagement levels and resulted in enhanced curriculum learning outcomes. Implications for practitioners: Without an age‐appropriate instructional sequencing model students may not be grasping the underlying concepts.Simply focusing on the code without emphasising concepts such as decomposition and algorithmic thinking will result in shallow learning.Key considerations in using the 3C Model are ensuring that conceptual development occurs using physical computing devices and language students are familiar with prior to introducing coding language and its symbolic representations.Primary school teachers should consider incorporating physical interactive digital devices, physical movement, staged language development and subsequent coding procedures within the context of an engaging and authentic problem. This approach enables students to effectively grasp and represent coding and computational thinking concepts and skills, surpassing mere procedural and rote learning. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Primary school students' perceptions and developed artefacts and language from learning coding and computational thinking using the 3C model.,"Martin, David A.; Curtis, Peter; Redmond, Petrea"
2444250X,,10.51302/tce.2023.1440,25,Centro de Estudios Financieros SL,"The text addresses the result of the documentary analysis of studies on «computational thinking», «digital skills» and «STEAM skills» (science, technology, arts, engineering and mathematics), focused on a context of «society 5.0» and «digital ecosystems», as part of the background of a doctoral research. The analysis allowed to know the trends and research objectives in this educational field, the position of the authors (men and women) and their contribution to computational thinking. The methodology was based on the analysis of 112 investigations reported between 2015 and 2020 in databases. It was found that computational thinking is considered an emerging topic of great importance to solve problems in a society immersed in the technological and digital age; computational thinking should be promoted from an early age, through diverse pedagogies that additionally promote digital skills and STEAM in the context of a 5.0 society; on the other hand, the concept is not widely developed in the Ibero-American world and studies in Colombia are scarce. (English) [ABSTRACT FROM AUTHOR] El texto aborda el resultado del análisis documental de estudios sobre «pensamiento computacional », «competencias digitales» y «competencias STEAM» (science, technology, arts, engineering and mathematics/ciencia, tecnología, artes, ingeniería y matemáticas), centrado en un contexto de «sociedad 5.0» y de «ecosistemas digitales», como parte de los antecedentes de una investigación doctoral. El análisis permitió conocer las tendencias y los objetivos de investigación en este campo educativo, la postura de los autores (hombres y mujeres) y su contribución frente al pensamiento computacional. La metodología se fundamentó en el análisis de 112 investigaciones reportadas entre 2015 y 2020 en bases de datos. Se determinó que el pensamiento computacional es considerado un tema emergente y de gran importancia para resolver problemas en una sociedad inmersa en la era tecnológica y digital; que el pensamiento computacional se debe promover desde temprana edad a través de pedagogías diversas, las cuales, adicionalmente, promuevan las competencias digitales y las competencias STEAM en el contexto de una sociedad 5.0; y, por otro lado, que el concepto no está ampliamente desarrollado en el mundo Iberoamericano, siendo escasos los estudios en Colombia. (Spanish) [ABSTRACT FROM AUTHOR] Copyright of Revista Tecnología, Ciencia & Educación is the property of Centro de Estudios Financieros SL and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Revista Tecnología, Ciencia & Educación",Pensamiento computacional para una sociedad 5.0.,"Castañeda, Alexi Mono"
07356331,62,10.1177/07356331241226459,4,Sage Publications Inc.,"Computational Thinking (CT) is essential for developing creativity, problem-solving, and digital competence in the 21st century. Coding tools like robotic toys and tablet apps have become popular in early childhood education to support CT development, but there is a debate on which tool is more effective. Little evidence exists on the effect of coding on children's Social-Emotional Competence (SEC), which is crucial for lifelong development and extends beyond cognitive development. This experimental study aimed to compare the effectiveness of two 9-week programs on promoting 73 preschool children's CT and SEC, one using coding robots and the other using coding apps. The results showed that children who participated in the Coding Robot Program had higher CT scores than those in the Coding App Program, after controlling for age, gender, family socioeconomic status, and baseline CT scores. While the SEC scores showed no substantial disparities between the groups, it was revealed that the initial performance levels moderated the intervention effects on emotional regulation and overall SEC. This suggests that the Coding Robot Program could be especially advantageous for a subset of children who initially have difficulties with emotional regulation and social skills. Implications of this study are presented for research and practice. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Coding With Robots or Tablets? Effects of Technology-Enhanced Embodied Learning on Preschoolers' Computational Thinking and Social-Emotional Competence.,"Yang, Weipeng"
15391523,56,10.1080/15391523.2022.2121345,3,Taylor & Francis Ltd,"In this study, we attempted to curate a list of tools whose primary intent is to enable and teach children to code. From this list, we developed a framework for the classification of coding tools and reviewed current research to determine how tools are used to teach coding in elementary education. The catalog grew to over 300 specific tools intended to teach coding to children. We subsequently searched Google Scholar for studies of computational thinking in elementary or primary education. This resulted in an analysis of 161 research studies in which there was an intervention intended to teach computational thinking to young children. Through this analysis, we identified patterns in which tools have been used to teach elementary coding, to which audiences, and in what ways. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Trends in tools used to teach computational thinking through elementary coding.,"Rich, Peter J.; Bartholomew, Scott; Daniel, David; Dinsmoor, Kenzie; Nielsen, Meagan; Reynolds, Connor; Swanson, Meg; Winward, Ellyse; Yauney, Jessica"
10613773,32,10.1002/cae.22723,3,Wiley-Blackwell,"This article examines the effectiveness and interest generated among primary and secondary education students through activities aimed at developing Computational Thinking skills, in the context of the coronavirus disease 2019 pandemic. The shift to online or hybrid learning models posed a significant challenge for educators, particularly those lacking digital skills. The study sought to answer several research questions, including the impact of online versus in‐person teaching on preuniversity students and gender differences in Computer Science perception, and Computational Thinking skills performance. The study employed a four‐phase methodology, consisting of pre‐ and posttraining measurements of Computer Science perception and Computational Thinking skills development through specific activities delivered in‐person or online. The results indicate that in‐person training is more effective for developing Computational Thinking skills, particularly at the secondary education level. Furthermore, there is a need to focus on maintaining girls' interest in Computer Science during primary school, as interest levels tend to decline significantly in secondary school. These findings have significant implications for Engineering Education in the context of digital transformation and the increasing importance of Computational Thinking skills in various fields of engineering. This study highlights the importance of developing Computational Thinking skills among preuniversity students and the need for effective training methods to achieve this goal and underscore the significance of investing in Engineering Education to prepare the next generation of engineers for the rapidly changing digital landscape. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Training future engineers: Integrating Computational Thinking and effective learning methodologies into education.,"Herrero‐Álvarez, Rafael; León, Coromoto; Miranda, Gara; Segredo, Eduardo"
02664909,40,10.1111/jcal.12921,2,Wiley-Blackwell,"Background: Despite its obvious relevance to computer science, computational thinking (CT) is transdisciplinary with the potential of impacting one's analytical ability. Although countless efforts have been invested across K‐12 education, there is a paucity of research at the postsecondary level about the extent to which CT can contribute to sustainable learning outcomes. Objectives: The current study examines how a series of Arduino‐based robotics learning activities capture the fuller essence of concepts related to CT. Methods: College students (n = 50) completed a series of six robotics learning activities. Think‐alouds, student reflections and performance scores were used to assess students' CT through a robotics challenge in virtual and physical learning environments. Results and Conclusions: Students verbalized CT concepts related to algorithmic thinking much more than abstraction, problem decomposition and testing and debugging. Students exposed to active learning performed better in a virtual robotics challenge compared to their peers in a traditional‐oriented classroom. Students' scores on the physical robotics challenge increased as a function of the number of references they made to CT concepts during the think‐alouds. It is possible to design pedagogical experiences that tap into various dimensions of CT at incremental levels of complexity through a series of Arduino‐based robotics activities. With the integration of an online simulation, students can visualize and transfer their CT skills between a virtual and physical learning environment, thus leading to more sustainable learning outcomes. Lay Description: What is already known about this topic: Computational thinking (CT) is the conceptual foundation for problem‐solving.CT shifted from unplugged to plugged activities.CT concepts can be fostered through educational robotics. What this paper adds: A multi‐dimensional approach to assessing CT.Applications of CT provide insights into skill transfer.An integrative theoretical approach to study the 'how' and the 'what' of CT. Implications for practice: Educational robotics activities can cater to a fuller range of CT skills.Virtual simulations with constructive feedback are beneficial for students in traditional settings.Mixed learning environments contribute to making links between lectures and labs. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Experimenting with computational thinking for knowledge transfer in engineering robotics.,"Chichekian, Tanya; Trudeau, Joel; Jawhar, Tawfiq; Corliss, Dylan"
02664909,40,10.1111/jcal.12900,2,Wiley-Blackwell,"Background: Computational thinking (CT) has been broadly considered one of the 21st‐century competencies, and an emerging trend has been seen in integrating CT into primary education. Cumulative research was conducted to investigate the influencing factors of CT learning performance, and an ample range of factors has been identified, involving both cognitive and non‐cognitive facets. However, limited has been done in exploring the non‐cognitive factors, and even less at the primary education level. Objective: To address this gap, this study bridged CT with personality in the primary school context, and more importantly, it proposed a mediator in the personality‐CT relationship that is, attitudinal beliefs, which are amenable to change, thereby allowing further support for nurturing the traits. Method: Based on the Big Five model of personality, standard tests were administered to a sample of 434 primary school students (ages 8–11), and data were analysed using structural equation modelling via Mplus. To improve the robustness of the results, control variables (i.e., demographic features, coding experience) were added to the research model, and a bootstrap approach with 5000 resamples was used to examine the mediating effect. Result and Conclusion: Findings demonstrated that Conscientiousness had a positive effect on CT, and attitudinal beliefs mediated the effect of Open‐mindedness (positive) and Negative Emotionality (negative) on CT. The study contributes to the literature by enriching the CT network with non‐intellectual components and unravelling the mechanism of CT regarding how disposition traits turn into learning performance. The results implicate practitioners on the importance of encouraging conscientious behaviours and nurturing positive attitudinal beliefs in CT primary education. Lay Description: What is already known about this topic: Personality traits can play a role in students' learning performance.The relationship between personality and computational thinking (CT) has been verified in teenage cohorts.Simply studying personalities may have limited practical implications, as these traits tend to be stable features that practitioners have little control over. What this paper adds: This is the first study investigating the effect of personalities on CT performance at the primary education level.The study examined the association between conscientiousness and CT performance.This is the first study revealing the underlying mechanism of the personality‐CT relationship.The study identified the mediating role of attitudinal beliefs in the personality‐CT relationship. The implications of study findings for practitioners: The study enriched the nomological network of CT in the primary context with essential non‐cognitive components.The study unravelled the underlying mechanism of the personality‐CT relationship, helping explain how personality traits turn into learning performance.The study indicated the importance of encouraging conscientious behaviours and nurturing positive attitudinal beliefs in CT primary education. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Unravelling the underlying mechanism of computational thinking: The mediating role of attitudinal beliefs between personality and learning performance.,"Zhang, Shuhan; Wong, Gary K. W."
07356331,62,10.1177/07356331231225269,3,Sage Publications Inc.,"Computational thinking (CT), as a new future-oriented literacy, has gained attention at the basic education level. Graphical programming is the common way to develop CT in primary students, but this drag-and-drop programming may weaken students' understanding of programming's abstract concepts and code logic. Text-based programming approaches can solve the problems faced by graphical programming, but few studies have explored the impact of text-based programming on CT. Therefore, we conducted a quasi-experimental study with 98 6th graders to explore the impact of gamified Python programming on CT. The findings showed that CT skills, as well as abstraction and decomposition, pattern recognition and evaluation in CT sub-skills, were significantly higher with students in the experimental group than in the control group. Furthermore, we found that gamified Python programming enabled boys and girls to reach the same level of CT skills. However, in terms of CT sub-skills, we found that gamified Python programming was more beneficial to the development of pattern recognition and evaluation skills for boys and abstraction and decomposition skills for girls. This demonstrated the effectiveness of gamified Python programming to improve primary students' CT skills while clarifying the impact of gender and enriching research in the field of text-based programming. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Effects of Gamified Python Programming on Primary School Students' Computational Thinking Skills: A Differential Analysis of Gender.,"Sun, Lihui; Liu, Junjie"
09210296,110,10.1007/s10846-024-02082-7,2,Springer Nature,"Computational Thinking has been recognized as an essential skill to be developed in individuals of the 21st Century. Various initiatives worldwide have been proposed to establish the most effective educational strategies and resources to support the development of these skills. With the publication of the Standards for Computing in Basic Education in Brazil (Complement to the National Base Common Curricular), Computer Science is expected to be taught as a fundamental science from Early Childhood Education to High School. In this context, this study presents the results of the students’ learning and the usability evaluation of the ThinkCarpet: an interactive educational robotics artifact built using alternative materials and Arduino, with the purpose of aiding in the development of the concept of algorithms in students from Middle School. Regarding the students’ learning, an average of 93.75% of valid solutions was observed for the algorithms validated through the use of the ThinkCarpet. In contrast, only 62% of valid solutions were identified in activities outside the proposed resource. As for the results of the application of the System Usability Scale (SUS), the results show a score of 83.59, which classifies the ThinkCarpet as excellent in a realistic scenario. [ABSTRACT FROM AUTHOR] Copyright of Journal of Intelligent & Robotic Systems is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Intelligent & Robotic Systems,Developing Computational Thinking in Middle School with an Educational Robotics Resource.,"Costa Junior, Almir de O.; Guedes, Elloá B.; Lima e Silva, João Paulo F.; Rivera, José Anglada"
07356331,62,10.1177/07356331231211916,2,Sage Publications Inc.,"Science, Technology, Engineering, and Mathematics (STEM) education is essential for developing future-ready learners in both secondary and higher education levels. However, as students transition to higher education, many encounter challenges with independent learning and research. This can negatively impact their Higher-Order Thinking Skills (HOTS), engagement, and practical expertise. This study introduces a solution: Computational Thinking Scaffolding (CTS) in the Jupyter Notebook environment, designed to enhance STEM education at the tertiary level. CTS incorporates five phases: Decomposition, Pattern Recognition, Abstraction, Algorithm Design, and Evaluation. Utilizing a quasi-experimental method, we assessed the impact of CTS on the HOTS, engagement, and practical skills of undergraduate and postgraduate students. Our findings hold substantial relevance for university educators, academic advisors, and curriculum designers aiming to enhance students' HOTS and hands-on capabilities in STEM disciplines. The results validate the effectiveness of CTS in elevating tertiary STEM learning outcomes, and they spotlight the adaptability of the Jupyter Notebook as a valuable tool in higher education. In conclusion, our research underscores the merits of CTS for improving outcomes in higher STEM education and sets a benchmark for future endeavors in this domain. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,"Integrating Computational Thinking Into Scaffolding Learning: An Innovative Approach to Enhance Science, Technology, Engineering, and Mathematics Hands-On Learning.","Lee, Hsin-Yu; Wu, Ting-Ting; Lin, Chia-Ju; Wang, Wei-Sheng; Huang, Yueh-Min"
07356331,62,10.1177/07356331231210946,2,Sage Publications Inc.,"Educational technologists and practitioners have made substantial strides in developing affordable digital and tangible resources to support both formal and informal computer science instruction. However, there is a lack of research on practice-based assignments, such as Internet of Things (IoT) projects, that allow undergraduate students to design and demonstrate educational robots using digital or physical assistance, especially when it comes to computational thinking (CT) and programming skills development in association with their psycho-emotional experience. This study compares the impact of Scratch and LEGO® WeDo robotic kits on students' CT and programming skills development. A quasi-experimental approach was conducted, involving two hundred forty-six participants (n = 246), who were equally divided between Scratch and LEGO® WeDo groups. Results indicate that the LEGO® WeDo group showed greater improvement in CT and programming skills development, while designing and presenting IoT projects. Nevertheless, no significant association between motivation, grit, and CT skills was observed. The findings highlight the potential of tangible robotics in facilitating students' hands-on learning and enhancing motivation to foster CT and programming skills. This study provides a wide range of implications for instructional designers on how to use tangible robotics to support hands-on IoT projects in computer science courses. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,"Assessing Computational Thinking, Motivation, and Grit of Undergraduate Students Using Educational Robots.","Pellas, Nikolaos"
07356331,62,10.1177/07356331231210560,2,Sage Publications Inc.,"Pair programming (PP) can help improve students' computational thinking (CT), but the trajectory of CT skills and the differences between high-scoring and low-scoring students in PP are unknown and need further exploration. In this study, a total of 32 fifth graders worked on Scratch tasks in 16 pairs. The group discourse of three learning topics (comprising 9 projects) was collected. After the audio files were transcribed, 1,303 conversations were obtained. They were analyzed via Epistemic Network Analysis (ENA) Webkit, which can reveal the trajectory of students' CT development via analyzing codes of discourse related to CT in PP. Three Scratch learning topics were assessed based on the Dr. Scratch platform to acquire the level of students' CT and to determine the low- and high-scoring groups. Results indicated that CT concepts and CT practices were always closely related in PP and CT practices, and CT perspectives could be gradually and closely related after a long period of CT training. A significant difference between the two groups' CT structures was found. The high-scoring group had more fragments of CT practice and connecting of CT perspectives, while the low-scoring group showed more fragments of CT concepts and expressing of CT perspectives. This research provides insights into cultivating primary school students' CT using Scratch in the context of PP. The findings can provide suggestions for instructors to design instructional interventions to facilitate students' CT skills via PP learning. Instructors can improve CT skills by guiding students to constantly ask questions, and specifying the role swap between driver and navigator in PP. Besides, instructors could give more consideration to the development of CT perspectives, and especially the ability to question. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Using Epistemic Network Analysis to Explore Primary School Students' Computational Thinking in Pair Programming Learning.,"Su, Yu-Sheng; Wang, Shuwen; Liu, Xiaohong"
10494820,32,10.1080/10494820.2022.2088562,2,Taylor & Francis Ltd,"Creativity and computational thinking (CT) have been recognized as crucial skills for the twenty-first century and have been extensively researched in recent years. However, their connections have not yet been fully understood, and there is room to expand the body of knowledge. This study examines the impact of an intervention program to increase creativity on the acquisition of CT. Our findings highlight the contribution of the intervention on learning, particularly the unique contribution to students' acquisition of CT and computational creativity. Educators who want to promote CT should encourage creative thinking, whether through dedicated learning environments or by providing traditional thinking exercises. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Cultivating creativity improves middle school students' computational thinking skills.,"Israel-Fishelson, Rotem; Hershkovitz, Arnon"
10613773,32,10.1002/cae.22732,4,Wiley-Blackwell,"Computational thinking (CT) has been promoted worldwide by educational systems and is an essential skill for technological citizens. Various strategies have been planned and developed to help in introducing, improving, and delivering CT. One of the strategies is by creating and developing the supporting tools for CT learning. In this article, educational robotics (ER) is chosen as the focus tool to support CT learning. Each CT and ER has a massive field of study. There are various available reports determining the suitability of CT subject integrated with ER for students' learning. However, all students do not develop similar style of learning and thinking. There is difference in their personal traits. There is a lack of research that designed CT learning through ER specifically based on student's preferences. Besides, it resulted in a challenge to determine the suitability of CT and ER for different kind of preferences. Therefore, this study aimed to develop an adaptive learning (AL) framework for students to deliver learning of CT through ER. The framework consists of three submodels: domain model, student model, and adaptation model. One case study is defined, which is learning the introductory level of CT through ER (CTER). At the end of the study, it can be observed that the AL framework produced positive results in performance and perception for various student categories. It was noted that students utilizing the AL framework had superior understanding of CTER. Individually or collaboratively, all students who applied or did not apply the AL framework in studying the CTER introduction had positive learning outcomes. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Adaptive learning framework for learning computational thinking using educational robotics.,"Jamal, Nurul N.; Jawawi, Dayang N. A.; Hassan, Rohayanti; Mohamad, Radziah; Halim, Shahliza A.; Saadon, Nor A.; Isa, Mohd A.; Hamed, Haza N. A."
20763417,12,10.3390/app122111033,21,MDPI,"As research progresses, integrating computational thinking (CT) and designing interdisciplinary activities to teach various disciplines have gradually emerged as new ideas and important ways to develop the CT of students. This paper introduces the concept of design-based learning (DBL) and analyzes the internal connections between DBL and CT teaching. In this study, an interdisciplinary activity design model was constructed based on an analysis of existing design-based scientific cycle models and research into STEAM education, which is an approach to learning that uses science, technology, engineering, the arts, and mathematics as access points for guiding student inquiry, dialogue, and critical thinking. Next, specific activities with a focus on CT were designed to teach graphical programming to fifth grade students using Scratch. This quasi-experimental research was carried out to test the promotion effects of interdisciplinary activity design and traditional programming activities on the CT of students. Finally, the results showed that the proposed interdisciplinary activity design could develop the CT levels of students more effectively than traditional programming activities. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),Developing Computational Thinking: Design-Based Learning and Interdisciplinary Activity Design.,"Wang, Dongqing; Luo, Liqiang; Luo, Jing; Lin, Sihong; Ren, Guangjie"
18456421,19,10.24138/jcomss-2022-0169,1,Croatian Communications & Information Society,"In modern and personalised education, there is a growing interest in developing learners' competencies and accurately assessing them. In a previous work, we proposed a procedure for deriving a learner model for automatic skill assessment from a task-specific competence rubric, thus simplifying the implementation of automated assessment tools. The previous approach, however, suffered two main limitations: (i) the ordering between competencies defined by the assessment rubric was only indirectly modelled; (ii) supplementary skills, not under assessment but necessary for accomplishing the task, were not included in the model. In this work, we address issue (i) by introducing dummy observed nodes, strictly enforcing the skills ordering without changing the network's structure. In contrast, for point (ii), we design a network with two layers of gates, one performing disjunctive operations by noisy-OR gates and the other conjunctive operations through logical ANDs. Such changes improve the model outcomes' coherence and the modelling tool's flexibility without compromising the model's compact parametrisation, interpretability and simple experts' elicitation. We used this approach to develop a learner model for Computational Thinking (CT) skills assessment. The CT-cube skills assessment framework and the Cross Array Task (CAT) are used to exemplify it and demonstrate its feasibility. [ABSTRACT FROM AUTHOR] Copyright of Journal of Communications Software & Systems is the property of Croatian Communications & Information Society and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Communications Software & Systems,Rubric-based Learner Modelling via Noisy Gates Bayesian Networks for Computational Thinking Skills Assessment.,"Adorni, Giorgia; Mangili, Francesca; Piatti, Alberto; Bonesana, Claudio; Antonucci, Alessandro"
20798954,11,10.3390/systems11010025,1,MDPI,"This study integrated the augmented reality (AR) technology into the ""Coding Ocean"" board game to provide players with real-time simulation of ship paths and learning scaffolds. Combined with Scratch block-based programming, an interactive learning environment is developed to assist elementary school students in learning coding skills from the unplugged board game to enhance their computational thinking concepts. The AR board game is focused on the programming concepts of sequential, and/or and loop. Through the process of treasure hunting, the basic concepts of computational thinking can be developed, i.e., abstraction, problem decomposition, pattern recognition and algorithmic thinking. In order to investigate the learning effectiveness of the AR board game on computational thinking and programming skills, a number of 51 third graders from an elementary school were recruited as research samples. The experimental group (n = 26) used the AR board game and the control group (n = 25) used the traditional board game for game-based learning. The experimental results indicate: (1) the learning effectiveness of computational thinking for the experimental group was significantly higher than that of the control group; (2) the learning achievement of the block-based programming skills for the experimental group was significantly higher than that of the control group; (3) the cognitive load of the experimental group was significantly lower than that of the control group. The AR technology can combine the unplugged board games with plugged learning modules to assist students in game-based learning, which is useful for enhancing computational thinking abilities while reducing the cognitive load. [ABSTRACT FROM AUTHOR] Copyright of Systems is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Systems,Effectiveness of AR Board Game on Computational Thinking and Programming Skills for Elementary School Students.,"Huang, Shih-Yun; Tarng, Wernhuar; Ou, Kuo-Liang"
22111662,29,10.1007/s10758-022-09636-4,1,Springer Nature,"Theorists and educators increasingly highlight the importance of computational thinking in STEM education. While various scaffolding strategies describe how to best support this skillset (i.e., paired programming, worked examples), less research has focused on the design and development of these digital tools. One way to support computational thinking and data science is through block coding and other ways that visualize the coding process. However, less is known about the learning experience design of these tools. Based on this gap, this work-in-progress study compared the learning experience design of novices and those with more advanced understanding of computational thinking. Results found differences emerge in the perceived dynamic interaction and scaffolding constructs of learning experience design. Implications for theory and practice are discussed. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",Scaffolding Computational Thinking Through Block Coding: A Learner Experience Design Study.,"Tawfik, Andrew A.; Payne, Linda; Olney, Andrew M."
07356331,62,10.1177/07356331231205052,1,Sage Publications Inc.,"Computational thinking (CT) has gained considerable attention and in-depth discussion over the last two decades. Although the significance of CT has been highlighted, it could be challenging for educators to teach CT. Fortunately, adopting robots in education has been evidenced to be of benefit to promoting students' learning motivation, CT, and higher-order thinking skills. However, several significant factors affecting students' programming performances in robot-assisted learning activities have been identified, such as cognitive needs and organization. In this study, a CMR-BBP (concept map robot block-based programming) approach was designed by integrating concept maps into robot block-based programming to enhance students' programming learning. Moreover, a three-group experiment was carried out in an elementary school to evaluate their learning outcomes. The experimental results revealed that the CMR-BBP approach benefited the students' perceptions of their computational thinking and problem solving in comparison with the R-BBP (robot block-based programming) and C-BBP (conventional block-based programming) approaches. Furthermore, regarding cognitive load, both the CMR-BBP and R-BBP approaches enhanced the students' germane cognitive load, while the CMR-BBP approach effectively reduced their extrinsic cognitive load. This study could be a notable reference for designing other courses in conjunction with programming learning activities. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Fostering Computational Thinking and Problem-Solving in Programming: Integrating Concept Maps Into Robot Block-Based Programming.,"Chen, Chih-Hung; Chung, Hsiang-Yu"
07380569,41,10.1080/07380569.2023.2220696,1,Taylor & Francis Ltd,"The aim of this study is to examine the effects of high school students' perceptions of computational thinking skills and perceptions of logical and mathematical intelligence on their programming self-efficacy. Descriptive survey model as a quantitative research design was used in the research. The data were collected face to face on a voluntary basis from 506 students aged 14-16 studying at various high schools in Türkiye. Thirteen incorrect or missing data items were removed. The remaining 496 data items were analyzed. Three scales were completed by the students: ""Computational Thinking Scale,"" ""Logical and Mathematical Intelligence Perception Scale"" and ""Programming Self-Efficacy Scale."" Structural equation modeling was used to test the relationship between the variables. The results indicate that high school students' computational thinking skills and mathematical and logical thinking skills have an effect on their programming self-efficacy. In addition, students' mathematical and logical thinking skills predicted their computational thinking skills. [ABSTRACT FROM AUTHOR] Copyright of Computers in the Schools is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in the Schools,How Do Computational Thinking and Logical and Math Thinking Skills Predict Programming Self-Efficacy?,"Kayhan, Osman; Korkmaz, Özgen; Çakır, Recep"
26733951,3,10.3390/modelling3030022,3,MDPI,"Computational thinking (CT) is a critical skill needed for STEM professionals and educational interventions that emphasize CT are needed. In engineering, one potential pedagogical tool to build CT is modeling, an essential skill for engineering students where they apply their scientific knowledge to real-world problems involving planning, building, evaluating, and reflecting on created systems to simulate the real world. However, in-depth studies of how modeling is done in the class in relation to CT are limited. We used a case study methodology to evaluate a model-planning activity in a final-year undergraduate engineering classroom to elicit CT practices in students as they planned their modeling approach. Thematic analysis was used on student artifacts to triangulate and identify diverse ways that students used CT practices. We find that model-planning activities are useful for students to practice many aspects of CT, such as abstraction, algorithmic thinking, and generalization. We report implications for instructors wanting to implement model-planning activities into their classrooms. [ABSTRACT FROM AUTHOR] Copyright of Modelling is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Modelling,Characterizing Computational Thinking in the Context of Model-Planning Activities.,"Lyon, Joseph A.; Magana, Alejandra J.; Streveler, Ruth A."
18657923,17,10.3991/ijim.v16i14.30463,14,International Journal of Interactive Mobile Technologies,"The pandemic situation forces us to use technology in learning. Likewise, prospective teachers who do field practice must prepare themselves to learn to use technology. So to overcome this, research was carried out to analyze the validation process, practicality, and the improvement of teaching practice before and after using the Computational Thinking (CT) based teaching practice model. This study uses Research and Development (R&D) with the ADDIE model, validation sheets, and practicality questionnaires used. The results showed that the design of teaching practice based on the CT approach was very feasible to use, marked by valid category, as indicated by the percentage value of 96% of teaching mathematics experts and 94% of technology experts, and practical use with a value of 95%, as well as an increase in the creativity of teaching practice. We recommend a CT-based teaching practice model using Ed-Tech on a hybrid learning system. This research is still limited to the mathematics department, and for future researchers to carry out this practice in other majors in the university environment. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,A Teaching Practice Design Based on a Computational Thinking Approach for Prospective Math Teachers Using Ed-Tech Apps.,"Aminah, Neneng; Sukestiyarno, Y. L.; Wardono; Cahyono, Adi Nur"
07356331,62,10.1177/07356331231204653,3,Sage Publications Inc.,"Although previous research has provided some insights into the effects of block-based and text-based programming modalities, there is a dearth of a detailed, multi-dimensional analysis of the transition process from different introductory programming modalities to professional programming learning. This study employed a quasi-experimental design to address this gap, involving 64 secondary school students in two groups. For the beginning five weeks, the first group used an introductory block-based programming environment, while the second group used an introductory text-based programming environment. Then, both groups transitioned to professional text-based programming for the subsequent eight weeks. The results showed that participants who transitioned from introductory text-based programming to professional text-based programming (1) significantly outperformed in computational thinking skills; (2) had more code-writing and debugging behaviors and fewer irrelevant behaviors, and (3) had more interactions with the instructor. No significant differences were observed between the two groups regarding enjoyment, confidence, and interest in programming. Drawing on these findings, this study proposes pedagogical implications that could facilitate the adoption of programming modalities within the broader context of STEM education. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,"Transitioning From Introductory to Professional Programming in Secondary Education: Comparing Learners' Computational Thinking Skills, Behaviors, and Attitudes.","Sun, Dan; Zhu, Chengcong; Xu, Fan; Li, Yan; Ouyang, Fan; Cheng, Miaoting"
18657923,16,10.3991/ijim.v16i10.30043,10,International Journal of Interactive Mobile Technologies,"Computational Thinking (CT) is very useful in the process of solving everyday problems for undergraduates. In terms of content, computational thinking involves solving problems, studying data patterns, deconstructing problems using algorithms and procedures, doing simulations, computer modeling, and reasoning about abstract things. However, there is a lack of studies dealing with it and its skills that can be developed and utilized in the field of information and technology used in learning and teaching. The descriptive research method was used, and a test research tool was prepared to measure the level of (CT) consisting of (24) items of the type of multiple-choice to measure the level of “CT”. The research study group consists of (100) third-year students studying at the University of Baghdad in Computer Science within the scope of (2020–2021). The results are detailed. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,Computational Thinking (CT) Among University Students.,"Majeed, Ban Hassan; Jawad, Lina Fouad; ALRikabi, Haider TH. Salim"
07380569,41,10.1080/07380569.2023.2206825,1,Taylor & Francis Ltd,"There is substantial evidence that incorporating interactive environments for game-based instruction has a significant potential to support the development of computational thinking and programming skills in primary education students. However, it is not clear whether a simulation game (SG) with different user interface elements, created via three-dimensional (3D) virtual worlds and visual programming environments to project various problem-solving exercises in a simulated reality, can significantly influence students to think and practice ""computationally"" their solution plans into code. The current study aims to identify any possible added value of each instructional approach by measuring students' game experience and learning performance. This quasi-experimental study involved ninety participants (n = 90) aged between 10 and 11 years that consisted of two comparison conditions. The experimental group (n = 45) received training using OpenSimulator in combination with Scratch4SL, whereas the control group (n = 45) was trained using Scratch. The findings indicate considerable differences in students' game experience and satisfaction, but no statistically significant difference in their learning performance and knowledge gain was identified. This study provides several design implications for user interface and game elements to inform educational practitioners and instructors about the benefits that each approach can offer students for better knowledge acquisition and deeper disciplinary understanding. [ABSTRACT FROM AUTHOR] Copyright of Computers in the Schools is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in the Schools,Effects of Simulation Games on students' Computational Thinking and Game Experience for Programming Courses in Primary School.,"Pellas, Nikolaos"
10613773,31,10.1002/cae.22669,6,Wiley-Blackwell,"As an important part of core competencies in the 21st century, computational thinking has received a lot of attention from all over the world. In the field of higher education, cultivating the ability of computational thinking has become an important goal of teaching. Previous research has shown that students' learning engagement is related to partial dimensions within computational thinking. However, there was a lack of research on the overall relationship between learning engagement and computational thinking. Therefore, this study aims at constructing an overall relationship model between learning engagement and computational thinking to examine the influence of three dimensions of learning engagement on the five dimensions of computational thinking. The participants were 341 freshmen from central China. The results show that compared with behavioral engagement, both emotional engagement and cognitive engagement had a stronger predictive power for computational thinking. In addition, the learning environment played a significant role in the relationship between learning engagement and computational thinking. On the whole, when compared with traditional multimedia classrooms, the relationship between learning engagement and computational thinking in smart classrooms was closer. A theoretical and empirical study of the relationship between learning engagement and computational thinking presents researchers and education practitioners with a method to improve students' computational thinking by building a learning environment and designing pedagogy. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,What influences computational thinking? A theoretical and empirical study based on the influence of learning engagement on computational thinking in higher education.,"Liu, Shuai; Peng, Changling; Srivastava, Gautam"
18657923,16,10.3991/ijim.v16i04.28979,4,International Journal of Interactive Mobile Technologies,"There was a change in the implementation of education policies in the emergency period of the spread of the covid-19 virus, the learning process was carried out from home online using various learning resources. This condition triggers the emergence of behavioral problems and student competence in Indonesia. One of the distance learning media that was carried out during the pandemic was using the Learning Management System (LMS). Not only that, a policy evaluation needs to be carried out to evaluate the distance learning system that has been implemented in universities. This is because technology-based distance learning requires a different approach in terms of planning, implementation and evaluation. To increase the effectiveness of learning can use the assessment for learning (AfL) model. The learning process is also expected to be in accordance with learning that directs to have a computational thinking approach which is much needed considering that problem solving skills are needed in solving everyday problems. Based on the results of data analysis with 4D development model (define, design, develop, and disseminate), learning management system based on assessment for learning to improve computational thinking abilities got an average score of 85.2, which means it can be implemented well. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,Learning Management System Based on Assessment for Learning to Improve Computational Thinking.,"Triswidrananta, Odhitya Desta; Pramudhita, Agung Nugroho; Wijaya, Indra Dharma"
18657923,16,10.3991/ijim.v16i02.27295,2,International Journal of Interactive Mobile Technologies,"Augmented Reality (AR) technology has now become a growing trend within the education field. It has the capability to combine both digital and reality world that subsequently leads to the emergence of new possibilities in improving the quality of teaching and learning activities. The objective of this research is mainly to analyse the Computational thinking elements in solving Geometry topic after the intervention of AR application. Qualitative data analysis was employed as the research methodology of this study that involved interview protocol with 10 pupils enrolled in Form 1 Mathematics class at one of the selected schools in Johor Bahru, Malaysia. Content analysis was then administered using the ATLAS.Ti Version 8 software to identify the codes, themes, and meaning conveyed by the pupils' answers in the Computational thinking test. Based on the interview and Computational thinking assessment show the pupils' ability to solve Geometrical problems using Computational thinking elements. The researcher found that Computational thinking elements do exist in problem solving pertaining to the topic of Geometry. However, the order of usage of these Computational thinking elements differs among the pupils. This leads to the conclusion that pupils who utilise the AR application with Computational thinking successfully solve Geometrical problems through the help of the Geometrical thinking process that comprises the elements of Abstraction, Generalisation, Decomposition, Algorithmic, and Debugging. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,The Elements of Computational Thinking in Learning Geometry by Using Augmented Reality Application.,"Hanid, Mohd Fadzil Abdul; Said, Mohd Nihra Haruzuan Mohamad; Yahaya, Noraffandy; Abdullah, Zaleha"
21924880,12,10.3991/ijep.v12i1.27603,1,International Society of Engineering Education (IGIP),"The study applied concepts of computational thinking, waterfall programming, and design-based learning management (DBLM) combined with a participatory action research (PAR) methodology to obtain an integrated learning management model (LMM) designed as a base to promote computational thinking skills (CTS) and programming proficiency. The study used three groups consisting of 21 volunteer computer education undergraduate students, three teachers, and three computer studies graduates from the Computer Studies Department of the Faculty of Education at Dhonburi Rajabhat University in Thailand. To verify the model, nine educational experts conducted an assessment of the proposed model, and determined that the evaluation standards were overall at a high level (𝑥̅ = 4.23, SD = 0.44), with the experts feeling that the integration of the DBLM computational thinking framework, the Waterfall programming conceptual framework, and the PAR meeting the study's stated objectives at the highest level (𝑥̅ = 4.56, SD = 0.53). The proposed model is best undertaken in five week sessions of five hours each using five exercises per week. Activity effectiveness is best measured by taking notes, worksheets, and practicing the learned skills. In conducting this research, there may be obstacles from learners who may withdraw during research due to personal activities or becoming discouraged in learning activities based on a five-week schedule, preventing them from participating every time. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Engineering Pedagogy is the property of International Society of Engineering Education (IGIP) and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Engineering Pedagogy,An Integrated Design-Based Learning Management Model to Promote Thai Undergraduate Computational Thinking Skills and Programming Proficiency.,"Prommun, Phattharapol; Kantathanawat, Thiyaporn; Pimdee, Paitoon; Sukkamart, Thanate"
21580502,82,,4,International Technology & Engineering Educators Association,"The article focuses on integrated medieval concepts with current ideas in engineering design and computational thinking. Topics discussed include key design features of castles such as a short section of fortified wall, defensive tower, barbicans, and the fortified gatehouse, engineering design in the key science and engineering practices and misconception about computational thinking.",Technology & Engineering Teacher,SMART castles: integrating engineering design and computational thinking.,"Bartholomew, Scott R.; Pehrson, Nathan"
07356331,61,10.1177/07356331231193142,8,Sage Publications Inc.,"In this article, we delve into a hermeneutic process that analyzes the term Computational Thinking as it was constructed through Wing's series of iterations in conceptualization attempts (2006, 2008, 2011 and 2014). On the one hand, this brings us to analyze the relations and intersections between different process of thought (analytical, logical, mathematical, system, engineering, algorithmic) and the role of search for simplicity, generalization, and scalability in the layers of abstraction in Computational Thinking. On the other hand, we explore the roots and the discursive environment of authors that could contribute to this conceptualizing process in the years around its popularization following Jeannette Wing's founding article in 2006. We have also included in our analysis the points of convergence with Seymour Papert's work related to the computer-machine seen as an ""object-to-think-with"" helping to the construction of knowledge from an epistemological perspective to the computing-human. Even though a consensus on the definition of the concept has not yet ben encountered, the analysis helps to highlight the solid reference points that address what is at the core of Computational thinking and what should be the framework of educational interventions and research that revolve around it. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Towards a Hermeneutics of Computational Thinking in Wing's Approximations.,"Peracaula-Bosch, Marta; González-Martínez, Juan"
18657923,16,10.3991/ijim.v16i06.26281,6,International Journal of Interactive Mobile Technologies,"This paper presents the design, development, and evaluation of the Robobug board game, which was developed to foster computational thinking (CT) among primary school pupils in Malaysia, particularly those who encounter computer and Internet access issues. Utilizing Richey and Klein's design and development (DDR) methodologies, this research serves as a primer by first concentrating on needs analysis for the design, then converting it into the development of the board game. The focus of this study was on how the design aspects of Robobug might help children grasp CT principles and foster CT practices. The Robobug board game was initially assessed remotely via questionnaire by a panel of eight subject matter experts from Malaysian institutions. Using the questionnaire and evaluation rubrics, experts were asked to offer insights with the following objectives: (i) to evaluate the design features; (ii) to examine the computational concepts; and (iii) to examine the computational practices of the Robobug board game. The research found that the Robobug board game has significant potential for use as an unplugged tool and alternative technique for instructors to enhance CT abilities outside the typical classroom. Additionally, it can be utilized to incorporate collaborative and game-based learning into teachers' instructional strategies to boost student engagement and achievement. The Robobug board game's shortcomings and suggestions for improvement are discussed. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,"Design, Development, and Evaluation of the Robobug Board Game: An Unplugged Approach to Computational Thinking.","Chong Sin Yoon; Khambari, Mas Nida Md."
18200214,19,10.2298/CSIS201215033D,1,ComSIS Consortium,"Computational thinking (CT) as one of the 21st century skills enters early years education. This paper aims to study the worldwide tendencies of teaching CT through computing in primary education and primary school teachers' understanding of CT. A survey of 52 countries has been performed and complemented by a qualitative study of 15 countries. In order to identify teachers' understanding-level of CT and its integration approach in the class activities, a case study of 110 in-service teachers from 6 countries has been performed. The implications of the research results may be useful for primary school educators, educational initiatives, government authorities, policy makers, e-learning system and content developers dealing with support for teachers aiming to improve their CT professional development qualification. [ABSTRACT FROM AUTHOR] Copyright of Computer Science & Information Systems is the property of ComSIS Consortium and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science & Information Systems,Teaching Computational Thinking in Primary Schools: Worldwide Trends and Teachers' Attitudes.,"Dagienė, Valentina; Jevsikova, Tatjana; Stupurienė, Gabrielė; Juškevičienė, Anita"
21660727,,,18,Conferencia Iberica de Sistemas Tecnologia de Informacao,"This work addressed the teaching of Computational Thinking for children from 7 to 11 years of elementary school I for the teaching of logical reasoning. From studies on accessibility in games for children aged 7 to 11 years old, with hearing impairment, an inclusive game was developed to support the teaching of computational thinking in the learning of logic. For the development of the game, not only Computational Thinking were studied, but educational games for children with hearing impairment, in addition to web accessibility guidelines. As a result of the research carried out, an inclusive game, FruitSort, was implemented for children with hearing impairment, which addressed the Merge Sort Sorting Algorithm, to support the teaching of Computational Thinking through a playful and inclusive environment. (English) [ABSTRACT FROM AUTHOR] Este trabalho abordou o ensino do Pensamento Computacional para crianças de 7 a 11 anos do ensino fundamental I para o ensino do raciocínio lógico. A partir dos estudos sobre acessibilidade em jogos para crianças de 7 a 11 anos de idade, portadoras de deficiência auditiva foi desenvolvido um jogo inclusivo, para apoiar o ensino do pensamento computacional no aprendizado de lógica. Para a elaboração do jogo foram estudados, não apenas o Pensamento Computacional, mas jogos educativos para crianças com deficiência auditiva, além das diretrizes de acessibilidade web. Como resultado da pesquisa feita, implementou-se um jogo inclusivo, o FruitSort, para crianças com deficiência auditiva, que abordou o Algoritmo de Ordenação Merge Sort, para dar suporte ao ensino do Pensamento Computacional por meio de um ambiente lúdico e inclusivo. (Portuguese) [ABSTRACT FROM AUTHOR] Copyright of CISTI (Iberian Conference on Information Systems & Technologies / Conferência Ibérica de Sistemas e Tecnologias de Informação) Proceedings is the property of Conferencia Iberica de Sistemas Tecnologia de Informacao and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",CISTI (Iberian Conference on Information Systems & Technologies / Conferência Ibérica de Sistemas e Tecnologias de Informação) Proceedings,FruitSort: o jogo educativo de pensamento computacional com acessibilidade para crianças portadoras de deficiência auditiva.,"Raia, Marcos Librelon; Martins, André Giacon; Al Kas, Gustavo Paulino; Eliseo, Maria Amelia"
10494820,31,10.1080/10494820.2022.2042311,10,Taylor & Francis Ltd,"As a core competence in 21st century, computational thinking (CT) is of great significance for undergraduates. However, there are few researches on the CT evaluation about undergraduates, and nor do a theoretical framework. Additionally, it is not clear what factors may affect their CT development. Therefore, according to Marzano's new taxonomy of educational objectives, this study constructed a theoretical framework for the CT evaluation, which included the field of the CT knowledge and the CT system. Then a Computational thinking scale (CTS) among 737 undergraduates was verified. CTS was adopted to evaluate undergraduates' CT skills, and the factors that may affect their CT skills are discussed according to the framework. The results showed that: (1) the CTS had sufficient reliability and validity among the sample undergraduates; (2) the CT skills of the sample undergraduates were in the middle and upper level (M = 15.71, SD = 2.18); (3) personal factors (gender and major) and contextual factors (educational environment and school support) are related to undergraduates' CT skills. Several suggestions and countermeasures were put forward for the undergraduates' CT cultivation on the framework, which will provide a reference for CT in undergraduate education. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Evaluation and developmental suggestions on undergraduates' computational thinking: a theoretical framework guided by Marzano's new taxonomy.,"Sun, Lihui; Hu, Linlin; Zhou, Danhua; Yang, Weipeng"
22111662,28,10.1007/s10758-022-09629-3,4,Springer Nature,"Since teaching robotics in schools is still new for teachers, studies on how to integrate computational thinking concepts in robotics courses are still rare. In this direction, teacher training sessions for teaching robotics should be visited. Accordingly, in this exploratory case study, a professional development program for teachers was suggested for teaching computational thinking (CT) by using virtual educational robotics. After constructing and delivering the instructional package to six high school computer science teachers, we assessed their pedagogical content knowledge (PCK) development with the assessment tools created through the indicators of integrating CT in robotics. We also monitored two of the teachers in the real classrooms. The results of the study showed that the computer science teachers' content knowledge (CK) about robotics and CT, and also their PCK to integrate CK in robotics positively improved at sufficient and advanced levels. The fact that the CK was considered as the joint of CT and robotics provided important clues in organizing the training sessions in the context of integrating CT into robotics teaching. Activities about daily life problems, training techniques such as peer assessment, authentic lesson plans, and micro-teaching activities were prominent factors that positively contributed to the development of teachers' CK and PCK. Structuring the feedback within the framework of CT in the training positively contributed to the teachers' CK developments in terms of CT and robotics. Guiding teachers to exhibit their teaching roles by presenting concrete examples for individual and collaborative robotics activities also supported the development of teachers' PCK. The implications for course designers desiring to provide a better teaching experience for the teachers teaching CT via robotics were also included. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning","Design, Implementation, and Evaluation of a Professional Development Program for Teachers to Teach Computational Thinking via Robotics.","Kılıç, Servet; Çakıroğlu, Ünal"
22111662,28,10.1007/s10758-022-09601-1,4,Springer Nature,"This emerging technology report introduces the WearableLearning (WL) platform as a tool to exercise computational thinking and STEM learning for 5-12th grade students through mobile technology-augmented active game play and game creation. Freely available at WearableLearning.org, it allows students and teachers to play, create, debug, and manage multiplayer, active games. To date, WearableLearning has been used in schools and afterschool programs by roughly 500 students and 25 teachers to create games covering STEM curricular content. WearableLearning enables the creation of physically active and social games, while offering possibilities for research on computational thinking, embodied cognition, collaborative learning, game-based learning, and practical applications of technology in STEM classrooms. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",The WearableLearning Platform: A Computational Thinking Tool Supporting Game Design and Active Play.,"Arroyo, Ivon; Closser, Avery Harrison; Castro, Francisco; Smith, Hannah; Ottmar, Erin; Micciolo, Matthew"
07356331,61,10.1177/07356331231180951,7,Sage Publications Inc.,"Computational thinking (CT) is considered a fundamental skill that everyone in the 21st century should have. Game-based learning (GBL) may be used to teach CT, and it's necessary to clarify how to design and implement game-based CT teaching. The literature was systematically searched for empirical studies published between 2011 and 2021. Thirty-nine studies were included in the review and findings suggested that GBL has positive effects on CT, but has non-significant effects on some CT elements (e.g., conditions, triggers, and abstraction) because of limited time to learn these elements and students' preferences for using CT elements. Game elements, particularly clear goals and rules, progressive challenges, immediate feedback, storyline, avatar, social interaction and various reward mechanisms were used to motivate students to engage in activities to develop CT. Furthermore, single or multiple theoretical foundations, such as constructivist learning theory and experiential learning theory, may guide the design and implementation of game-based activities. Problem-solving, project-based approaches were used to encourage students to use CT to solve problems or complete a project. Finally, guidelines for designing and implementing game-based learning activities for promoting CT were discussed. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Teaching and Learning Computational Thinking Through Game-Based Learning: A Systematic Review.,"Wang, Xinyue; Cheng, Mengmeng; Li, Xinfeng"
10494820,31,10.1080/10494820.2021.1983610,8,Taylor & Francis Ltd,"Computational thinking is an important skill in computer science since the 1960s, and it is closely related to problem solving. Almost all research related to computational thinking mentions problem solving. Although some research has been conducted on computational thinking, few studies examined the impact of personal traits on students' computation thinking skills and problem solving. This study modeled cooperative attitudes of programming, learning style, self-regulation, and enjoyment as its key elements, investigated personal traits as predictors of problem-solving skills, and examined the correlation between variables and computational thinking. The 252 research participants were all sixth-grade students in an elementary school in Taipei, Taiwan. After a 10-week experimental curriculum, a posttest was conducted, and a total of 244 observations were collected. Correlation and regression analyses show that computational thinking is positively correlated with problem-solving skills, and learning style has the predictive ability for computational thinking. Furthermore, cooperative attitude and self-regulation of programming are important variables for predicting problem-solving skills; the degree of students' enjoyment in the curriculum will affect the cooperative attitude and self-regulation of their programming. In summary, the personal traits above could improve the participants' problem-solving skills hierarchically and help them achieve better computational thinking. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,The determinants of impact of personal traits on computational thinking with programming instruction.,"Liu, Yuan-Chen; Huang, Tzu-Hua; Sung, Chia-Ling"
02664909,39,10.1111/jcal.12845,5,Wiley-Blackwell,"Background: Collaboration has commonly been integrated in computational thinking education to foster novice learning. While the majority of existing studies on developing students' CT skills have been based on competency or personality factors, social factors have been largely ignored. Objectives: This systematic review, framed by social cognitive learning theories, aims to unravel the influencing factors of collaboration in developing computational thinking skills in K‐12 education. Methods: We searched four databases and located 79 publications for synthesis analysis to identify 10 social cognitive factors from personal and learning environmental perspectives. Personal factors are gender, prior knowledge, and motivational attitudes, while the learning environmental factors are roles, partnership, interaction, culture, tools, tasks, and scaffolding. Results and Conclusions: We examined the following five major issues: (a) collaboration elements designed in learning activities; (b) social cognitive factors that might influence the development of computational thinking; (c) the influences caused by social cognitive factors; (d) students' perceived benefits of collaboration; (e) major challenges of integrating collaboration in computational thinking education. The most reported challenges in collaborative classrooms are students' misunderstanding of computational thinking knowledge, negative sentiments, and communication problems. Accordingly, a design framework to facilitate collaborative learning activities was proposed. The design framework can provide a more focused research avenue for examining the effects of collaboration in the development of computational thinking in K‐12 education. Lay Description: What is already known about the topic?: Collaboration has commonly been integrated in computational thinking (CT) education to foster novice learning in K‐12 education.There have been disputes regarding the effectiveness of collaboration in achieving learning outcomes.There is a need for further examination of the influencing factors of collaboration, which might influence students' CT performances. What does this paper add?: Our review identified personal factors (i.e., gender, prior knowledge, and motivational attitudes) and learning environmental factors (i.e., roles, partnership, interaction, culture, tools, tasks, and scaffolding), and revealed their influences in students' CT performances in K‐12 education.The synthesis of students' authentic opinions can yield insights to the possible mechanism of how collaboration can bring benefits to students' CT performances.The design framework generated from the review can shed lights on design an effective learning environment which integrates collaboration in K‐12 CT education. Implications for practice and/or policy?: The collaborative learning process of CT is complex, whereby the effects of social cognitive factors do not stand‐alone but are influenced by personal and learning environmental factors simultaneously.Taking the identified challenges of students, instructors, and operation can help smooth organization of collaborative learning activities of K‐12 CT education.Future students could look more in‐depth into the impacts of the social and situation factors in developing CT. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Effectiveness of collaboration in developing computational thinking skills: A systematic review of social cognitive factors.,"Lai, Xiaoyan; Ye, Jiachu; Wong, Gary Ka Wai"
02664909,39,10.1111/jcal.12818,5,Wiley-Blackwell,"Background: Computational thinking (CT) has become a crucial skill for individuals in the 21st century, and while more educators are starting to recognize the importance of CT education, there is still a lack of research on how to teach young children CT, particularly outside of traditional school settings. Objectives: To fill the gap in knowledge, we aimed to investigate the effectiveness of a web‐based parent education program on improving children's CT skills. Additionally, we sought to determine if children's age, gender and family socioeconomic status had any impact on the development of CT skills. Methods: We selected 86 adult–child pairs in the K3 age group to participate in a 4‐week intervention program using a quasi‐experimental approach. Results: After 4 weeks, children in the intervention group had improved their CT skills more than their peers in the control group. This shows that the intervention was successful in enhancing children's CT skills. Age had a moderating effect on CT enhancement, with older children showing a more significant improvement than younger children. However, children's gender and family socioeconomic status did not have any moderating effects. Conclusions: These results demonstrate that CT education can be effectively implemented in the home setting through web‐mediated parent education. Encouraging the use of unplugged CT activities at home can aid children in acquiring CT skills. Lay Description: What is already known about this topic: Computational thinking (CT) education can be started at the early childhood stage.Both plugged‐in and unplugged activities can promote children's CT.Unplugged activities have many advantages and are suitable for young children. What this paper adds: Web‐mediated parent education is useful for equipping parents with the knowledge and skills to conduct CT activities at home.CT education has a positive effect on children in the home setting.Parents play an important leading role in children's CT education.Parent–child unplugged activities are beneficial to children's CT enhancement. Implications for practice and/or policy: A web‐mediated approach is an appropriate way to encourage parent participation in CT training.CT‐related parent education should be scaled up so that parents can play an active educational role at home.Unplugged CT activities should be designed more for the home settings in addition to school settings. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Promoting children's computational thinking: A quasi‐experimental study of web‐mediated parent education.,"Li, Wanyi; Yang, Weipeng"
02664909,39,10.1111/jcal.12819,5,Wiley-Blackwell,"Background: Owing to the exponential growth of three‐dimensional (3D) environments amongst researchers and educators to create simulation games (SGs) in primary education, there is a growing interest to examine their potential support in computer science courses instead of visual programming environments. Objectives: This study explores the relationships between students' learning performance, focusing on computational thinking (CT) and programming skills development, in association with their cognitive load (mental load and mental effort) and emotions (happiness, anger, anxiety, sadness) by playing SGs. Methods: A total of two hundred and ninety participants (n = 290) in fifth‐grade classes (10–11 years old) of Greek primary schools completed all pre‐and post‐intervention tests. A quasi‐experimental study was conducted over a 14‐week timetable course and in two comparison conditions, in which a SG was created by using OpenSimulator&Scratch4SL and Scratch for the experimental group (n = 145) and the control group (n = 145), respectively. To further investigate the effectiveness of the proposed SG in each teaching intervention, an exploration of relationships between students' learning performance, cognitive load, and emotions through multiple analyses, depending on correlation, t‐tests, correlation, and hierarchal regression was delivered. Results and Conclusions: The findings indicate that the proposed SG created by using OpenSimulator&Scratch4SL positively affected students' emotions and cognitive load, whereas there was no significant difference in learning gain between the two groups. Implications: The study provides empirical evidence on the effects of SGs on students' knowledge acquisition, highlighting the importance of considering both cognitive and emotional components in the design of these games. The findings also offer valuable insights for implications policy and practice. Lay Description: What is already known: Interactive environments can support the development of students' computational thinking (CT) and programming skills due to a wide range of digital elements/features that expand the boundaries where learning can happen.CT is a 21st‐century skill to be on top with others, such as reading, writing, and arithmetic for future generations of students to tackle real‐life problems.Despite a broad consensus on the increasing number of interactive environments, there is no dedicated measurement of their effects on students' performance and their possible association with psychological constructs. What this paper adds: This study explores any possible relationships amongst students' CT skills, emotions, and cognitive load for programming courses in fifth‐grade (10–11 years old) classes of primary education by playing a simulation game (SG).The proposed SG was created by using two interactive environments that project different 2D/3D user interface and game elements (e.g., special effects, scenes, animations, feedback, challenges, goal clarity, and scripted interaction).A quasi‐experimental study was conducted over a 14‐week timetable course and in two comparison conditions, in which the proposed SG was created by using OpenSimulator&Scratch4SL and Scratch for the experimental group (n = 145) and the control group (n = 145), respectively. Implications for practice and/or policy: In‐game scenario and students' embodied experiences can increase CT vocabulary acquisition, understanding, and expression of solution plans via visual coding.A practical roadmap for practitioners and instructors proposed how to purposefully integrate elements/features into interactive environments.Problem‐solving exercises in a simulated reality can become interesting and reduce students' cognitive load, when they are taking part in enjoyable and playful settings. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,"Exploring relationships among students' computational thinking skills, emotions, and cognitive load using simulation games in primary education.","Pellas, Nikolaos"
07356331,61,10.1177/07356331231165099,6,Sage Publications Inc.,"The current study aims to determine the effect of teaching a mechanic neuro-computerized course through virtual learning environments (VLE) to develop computational thinking among mathematics pre-service teachers. The neuro-computerized virtual learning environments (NCVLE) model was designed to be used to teach the mechanics course to third-year students of the mathematics department. To achieve the targeted learning outcomes, the study recruited (102) third-year students of the Faculty of Education and classified them into a control group of (50) students and an experimental group of (52) students. The experiment lasted for 14 weeks during one semester of the 2021-2022 academic year. The results agreed with most of what has been found from relevant literature and studies. Also, the results indicated that the NCVLE model played a vital role in the purposeful teaching, learning, and assessment processes and enhanced the learning of computational thinking. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Impact of Teaching a Neuro-Computerized Course Through VLE to Develop Computational Thinking Among Mathematics Pre-service Teachers.,"Abouelenein, Yousri Attia Mohamed; Nagy Elmaadaway, Mohamed Ali"
07356331,61,10.1177/07356331231160294,6,Sage Publications Inc.,"Computational thinking is a way of thinking that helps people ""think like a computer scientist"" to solve practical problems. However, practicing computational thinking through programming is dependent on the problem solvers' metacognition. This study investigated students' metacognitive planning and problem-solving performance in programming through two quantitative studies. First, we analyzed the performance of metacognitive planning and of problem solving through the programming of 21 freshmen, and found that the metacognitive planning performance related to ""problem description"" and ""program comprehension"" was significantly correlated with problem-solving performance. Second, semi-scaffolding and full-scaffolding were designed based on the first study. Another 89 freshmen were randomly divided into three groups and were asked to write their programming plan with no-scaffolding, semi-scaffolding, or with full-scaffolding. ANCOVA revealed that the problem-solving performance of the no-scaffolding group was significantly weaker than that of the other two groups, but there was no significant difference between the semi-scaffolding and the full-scaffolding groups. The study indicated that semi-scaffolding had a similar effect to full-scaffolding on problem-solving performance. The study suggests that teachers should emphasize supporting students' ""problem description"" and ""program comprehension"" using semi-scaffolding. This scaffolding technique is sufficient and efficient for training students' computational thinking through problem solving in programming. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Application of Metacognitive Planning Scaffolding for the Cultivation of Computational Thinking.,"Zhou, Ying; Chai, Ching Sing; Li, Xiuting; Ma, Chao; Li, Baoping; Yu, Ding; Liang, Jyh-Chong"
10494820,31,10.1080/10494820.2021.1946564,6,Taylor & Francis Ltd,"In modern society technology is widely used and, with the digitization of many services, this is an upward trend. Therefore, computational thinking (CT) is an increasingly important concept; an aspect that is being reflected on educational policies and the extracurricular offer of different countries. This study aims to look at the efficacy of private after-school extracurricular robotics activities, controlling fluid intelligence (Gf), a determining aspect in solving novel problems. A sample of 112 fifth-grade Spanish students was chosen, who completed two tests, the computational thinking test (CTt) (Román-González, 2016) and the KBIT fluid intelligence subtest (Kaufman, 1990). The results showed a great influence of Gf on the prediction of CT and significant differences between the students that had not attended after-school extracurricular classes and those that had attended for two or more years. Thus, this study substantiates the effectiveness of private extracurricular classes in promoting CT in the long term. Given the importance of CT nowadays, legislators should consider to include CT in compulsory education because private extracurricular classes could promote inequity. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,The effect of after-school extracurricular robotic classes on elementary students' computational thinking.,"Merino-Armero, José Miguel; González-Calero, José Antonio; Cózar-Gutiérrez, Ramón"
10494820,31,10.1080/10494820.2021.1943687,6,Taylor & Francis Ltd,"As one of the core skills of the 21st century, computational thinking has received increasing attention from educators and researchers. Although some research has been conducted on computational thinking, few studies examined the impact of learning activities on students' computation thinking skills from the perspective of cognitive development. Based on the theory of scaffolding instruction, a progressive thinking training approach with flowcharts was proposed to cultivate students' computational thinking skills. A quasi-experiment was designed to evaluate the effectiveness of the training. Forty-nine Chinese tertiary students undertaking a programming course were randomly assigned into two groups – the experimental and control groups. During the course, the experimental group received progressive training, and the control group received non-progressive training. The results showed that the experimental group gained a significantly higher level of academic achievement than the control group. Meanwhile, the experimental group showed a remarkable improvement in programming self-efficacy. Furthermore, the participants in the experimental group showed a higher level of computational thinking skills, including cooperative learning, critical thinking, and problem solving skills. In summary, the progressive thinking training approach with flowcharts could not only improve the participants' computational thinking skills and programming self-efficacy, but also help them to achieve better academic outcomes. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Progressive flowchart development scaffolding to improve university students' computational thinking and programming self-efficacy.,"Zhang, Jia-Hua; Meng, Bin; Zou, Liu-Cong; Zhu, Yue; Hwang, Gwo-Jen"
10494820,31,10.1080/10494820.2021.1938612,6,Taylor & Francis Ltd,"Recently there has been a change in elementary curricula to focus on computational thinking, however, a good curriculum needs to be matched with good learning or teaching strategies. This study explores design-based learning (DBL) in elementary students to examine the development of computational thinking and to support knowledge construction in designing final products. An experimental design was used with 64 students; divided into experimental and control groups. The experimental group used a DBL approach with worksheets aimed at students designing their own final product design, while the control group was taught by the traditional approach with worksheets for redoing, practicing and designing their final product. Pre and posttests were used for data collection and evaluation scheme developed to score the final product. The finding showed no significant difference in the development of computational thinking between the two groups. However, there was a significant difference in designing the final product between the two groups. Therefore, DBL supported elementary students in designing the final product although redesigning curricula by integrating both teaching methods is suggested for the greater achievement of computational thinking. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Effect of design-based learning on elementary students computational thinking skills in visual programming maker course.,"Matere, Isaac M.; Weng, Cathy; Astatke, Melese; Hsia, Chih-Hsien; Fan, Chen-Guo"
10494820,31,10.1080/10494820.2021.1928236,6,Taylor & Francis Ltd,"Previous research suggests that there should be a correlation between computational thinking and traditional cognitive and motor skills. At present, academia either considers cognitive skills a part of computational thinking, or investigates the correlation between computational thinking and cognitive skills. Current research on computational thinking focuses on the design of teaching models to improve computational thinking ability and on measures for evaluating computational thinking. The association of computational thinking with motor skills is rarely discussed. From the perspective of embodied cognition theory, an association must exist, but its mechanisms have not been studied. Therefore, this study explores the effect of the teaching model of creative problem solving (CPS) on computational thinking and its internal correlation with technical skills. It was found that CPS can not only improve the computational thinking ability of students majoring in engineering, but also promote their corresponding motor skills. However, the students' previous academic background had a certain influence on their learning outcomes. Students at universities of technology experienced a greater improvement in their computational thinking and motor skills than students at general universities. There is a certain correlation between computational thinking and motor skills, and the interaction between them should be properly considered in future teaching and curriculum design so as to improve students' learning effectiveness. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,The developmental characteristics of computational thinking and its relationship with technical skills: taking the department of engineering as an example.,"Jou, Min; Chen, Pei-Chi; Wang, Jingying"
18657923,15,10.3991/ijim.v15i21.23143,21,International Journal of Interactive Mobile Technologies,"In each country, skills development in the 21st century plays a crucial role in education at all levels. One of these skills is computational thinking (CT), which is the ability to systematically think and solve problems in daily life. This research aims to ascertain the benefits of using a mobile cloud-based learning system with a peer-to-peer reverse engineering approach in enhancing CT skill. In this study, a cloud-based learning system and learning management plans were employed as research instruments, and a CT test was used as a data gathering instrument. The data were analyzed using the mean and standard deviation, repeated-measures analysis of variance (ANOVA), and t-test. The findings suggested that the students' scores were higher after using the cloud-based learning system, at a 0.05 level of significance. After performing the repeatedmeasures ANOVA, the students' scores were significantly higher at a 0.05 level in each round of the CT test. At the same time, peer learning increased the positive attitude of the learners toward the system and promoted the effectiveness of working in a team. This study provides a better understanding of the current research trends in the field of CT education, the perception of students, and the learning strategies and technology involved in CT education. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,Effects of a Mobile Cloud-Based Learning System Using a P2P Reverse Engineering Approach on Enhancing Computational Thinking.,"Supaluk, Sutiwat; Khlaisang, Jintavee; Songkram, Noawanit"
18657923,16,10.3991/ijim.v15i20.23739,20,International Journal of Interactive Mobile Technologies,"This study aims to identify the game-based learning component (GBL) and the concept of computational thinking (CT) that can be integrated together in a design model. GBL and CT concept components are obtained through analysis of previous research and specialist consultancy. The method of analytical analysis consists of three phases i.e. planning, implementation and documentation. This analysis started on March to May 2020 and involved 398 articles related to GBL and CT. However, there are only fifteen articles on the development element of the GBL application and eight articles related to the CT concept were used. During an expert consultancy, fifteen specialists was involved in various backgrounds and experience in GBL and CT. The result shows that there are six main elements and 21 sub-elements of GBL. 6 main elements consist of rules, objectives, feedback, interactions, challenges and narrative. Mean-while, the sub-element consists of the operating rules, basic rules, explicit rules and behaviours, measures, goals, gamification purposes, marks, re-wards, badges/awards, player charts, characters, consequences, constraints, levels of games, fun, competition, control, space, engagement and curiosity that have been matched with their main elements. The main element and sub-element of the GBL is called GBL component. Each of these GBL components is integrated with seven concepts of CT i.e. decomposition, algorithm, abstraction, logical reasoning, assessment, evaluation, pattern recognition and automation. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,Connecting Computational Thinking (CT) Concept with the Game-Based Learning (GBL) Elements.,"Yunus, Emram; Zaibon, Syamsul Bahrin"
02664909,39,10.1111/jcal.12850,6,Wiley-Blackwell,"Background: Today, computational thinking (CT), which is considered to be a form of literacy, has taken its place in the ICT curriculum of many countries at the K‐12 level. Therefore, there is a need for more evidence with regards to a theoretical and practical understanding of CT skills' development of K‐12 students. Objectives: The purpose of the study was to investigate the effect of an unplugged coding course on primary school students' development of CT skills, differences in their CT skills in terms of socio‐demographics such as gender, computer ownership, daily computer use, and home Internet access, and the relationship between their CT and 21st century skills. Methods: The research was based a quasi‐experimental design with one‐group pretest‐posttest with follow‐up. The CT skills of 212 third and fourth grade students at a public primary school of Turkey were measured with a CT Skills Test before, after, and about ten weeks following having attended an unplugged coding course. Results and Conclusions: The results of the study showed that the unplugged coding course statistically significantly improved the participants' CT skills, specifically in algorithmic design, abstraction, evaluation, decomposition, and generalization. Moreover, the findings indicated that primary school students' CT skills were not associated with their socio‐demographics. In addition, the students' CT skills were found to be positively and statistically significantly correlated with their collaboration and communication skills. Implications: This study contributes to understanding of the effects of unplugged activities on the development of primary school students' CT skills, which is beneficial to teaching practices for CT skills in the primary education. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,The effect of an unplugged coding course on primary school students' improvement in their computational thinking skills.,"Dağ, Funda; Şumuer, Evren; Durdu, Levent"
22111662,28,10.1007/s10758-022-09593-y,4,Springer Nature,"The purpose of this study was to examine the pre-service teachers' computational thinking (CT) skills and self-efficacy (SE) towards teaching CT, who attended a course in which educational games were developed in a block-based programming environment and lesson plans were prepared accordingly. The research was conducted with thirty seven pre-service teachers who took the instructional technologies course. The convergent parallel mixed method was used in this study. Accordingly, quasi-experimental design with pretest-posttest was applied in the quantitative part, and thematic analysis was conducted in the qualitative part. The implementation process was carried out in three stages. In the first stage, pre-service teachers gained awareness about the components of CT and established applications about algorithm writing and Scratch. In the second stage, pre-service teachers developed Scratch-based games related to their subjecs areas. In the third stage, they prepared lesson plans teaching CT skills by using the games that they developed. The quantitative findings of the study showed that pre-service teachers' CT and SE perceptions towards its teaching increased significantly. This increase had a weak effect on the CT skill and a large effect on the SE perception regarding the teaching of this skill. It was concluded that the qualitative findings support the quantitative findings. Pre-service teachers stated that the implementation process contributed to their CT skills and SE towards its teaching. In addition, the implementation process contributed to their professional competencies, including technological and pedagogical knowledge. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",Preparing Pre-Service Teachers for Computational Thinking Skills and its Teaching: A Convergent Mixed-Method Study.,"Tankiz, Esra; Atman Uslu, Nilüfer"
07356331,61,10.1177/07356331231178948,7,Sage Publications Inc.,"Computational thinking (CT) education has drawn increasing attention from educators and researchers. This study conducted a meta-analysis of 27 empirical studies to examine the effectiveness of game-based learning (GBL) for fostering students' CT. The effects of various factors on the learning process for acquiring CT were also examined. The results showed that (a) conducting GBL can foster students' CT, and the overall effect was at the upper-middle level (Hedges' g =.600, 95% CI [.465,.735], p <.001). (b) Furthermore, conducting GBL can improve students' CT concepts (Hedges' g =.916, 95% CI [.410, 1.423], p <.001), CT skills (Hedges' g =.494, 95% CI [.389,.600], p <.001), and CT perspectives (Hedges' g =.927, 95% CI [.039, 1.816], p <.05). (c) Additionally, game mode, teaching context, and participant characteristics have positive effects on CT. Based on the findings, it is suggested that using more unplugged games and video games, designing collaborative game activities, and tailoring approaches according to gender difference and programming experience can effectively promote CT. The results have significance for fostering students' CT in GBL; it is further suggested that instruction processes be rationally designed. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Game-Based Learning for Students' Computational Thinking: A Meta-Analysis.,"Ma, Jingsi; Zhang, Yi; Zhu, Zhifang; Zhao, Sunan; Wang, Qiyun"
10613773,31,10.1002/cae.22664,6,Wiley-Blackwell,"The study aims to investigate the effects of educational robotics (ER) in programming education on students' programming success, computational thinking (CT), and transfer of learning and to reveal the students' views about robotics programming. For this purpose, an explanatory sequential mixed‐method research design was used. In this research design, a qualitative data collection process follows a quantitative one to be able to further explain the novel results obtained through analysis of the quantitative data. In the quantitative part, a quasiexperimental study was designed, and one experimental group (EG) and one control group (CG) were formed randomly. The study was conducted with sixth‐grade middle school students for 14 weeks. In the process, students were given project tasks based on some real‐life problems, and they were asked to transfer their programming skills. It was preferred to use mBot as an ER. While the EG students performed programming activities with the mBot, the CG students performed only block‐based programming activities. Both groups were given pre‐ and posttests to collect data. Finally, semistructured interviews were conducted with the EG students to enrich quantitative findings. The results showed that robotics programming activities increased the students' programming success and transfer of learning, and scores of the EG were significantly higher than the CG. In addition, it was determined that both the EG and CG students' CT skills increased, but there was no significant difference between the groups. Finally, most of the students reported positive views on the use of ER in programming education. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,"The effects of educational robotics in programming education on students' programming success, computational thinking, and transfer of learning.","Yolcu, Vehbi; Demirer, Veysel"
10494820,31,10.1080/10494820.2021.1986725,8,Taylor & Francis Ltd,"In this paper we propose a universal curricular framework that is intended to aid K-6 schoolteachers holistically and humanistically developing their students' computational thinking (CT) skills (e.g. algorithmic thinking, abstraction, decomposition, generalization, patterns recognition, evaluation, and logical thinking). This framework, which can be applied to any subject at the elementary school level, is grounded on specific principles that we have gleaned from both learning theories and considerations on child development. New media literacy skills (NML) and social-emotional skills are also targeted, as they are strongly connected with CT skills and display bidirectional linkages that can comprehensively benefit students in various ways (cognitively, imaginatively/creatively, materially, socially, and affectively/emotionally) without the need for digital technologies or coding. The universal nature of our curricular proposal rests on the following factors: it is based on a cross-disciplinary approach that can be applied in ways that mirror real life; CT is seen as a universal skill that should be learned by everyone, not just computer scientists, and is applicable to every aspect of daily life; one-sided intellectualism is avoided; and, lastly, the resulting classroom practices have an impact on and are influenced by children's cognitive, social, and emotional development. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,A K-6 computational thinking curricular framework: pedagogical implications for teaching practice.,"Tsortanidou, Xanthippi; Daradoumis, Thanasis; Barberá, Elena"
10494820,31,10.1080/10494820.2021.1931891,6,Taylor & Francis Ltd,"The cultivation of computational thinking (CT) skills is a key issue in talent cultivation today. This study reported a meta-analysis of 22 empirical studies to determine the effectiveness of using educational games to improve students' CT skills and the influence of various factors in instructional design on acquiring CT skills. The results showed that: (a) educational games can promote the improvement of students' CT skills (Hedges' g = 0.766, p = 0.000); (b) the overall effect is at the upper-middle level (95%CI [0.580, 0.951]); (c) The positive connection between educational games and CT skills is affected by sample size, grades level, game usage mode, and game tools. Controlling the class size to less than 50 students and the reasonable choice of game tools and usage modes are more conducive to promoting students' CT skills. In sum, we suggested that the educational game teaching process should be rationally planned, and technology should be fully utilized to develop students' CT skills. The above findings are of great significance to promote the improvement of students' CT skills through educational games in the future. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Educational games promote the development of students' computational thinking: a meta-analytic review.,"Sun, Lihui; Guo, Zhen; Hu, Linlin"
08993408,34,10.1080/08993408.2023.2245687,2,Taylor & Francis Ltd,,Computer Science Education,The applications of machine learning in computational thinking assessments: a scoping review.,"Tan, Bin; Jin, Hao-Yue; Cutumisu, Maria"
08993408,34,10.1080/08993408.2023.2210458,2,Taylor & Francis Ltd,,Computer Science Education,Computational thinking infusion as transformative teaching: investigating content area teacher perspectives and practices.,"Jocius, Robin; Albert, Jennifer; O'Byrne, W. Ian; Joshi, Deepti; Robinson, Richard; Blanton, Melanie"
13000632,29,10.3906/elk-2010-73,5,Scientific & Technical Research Council of Turkey,"The lack of computational thinking (CT) skills can be one of the reasons why students find themselves having difficulties in writing a good program. Therefore, understanding how CT skills can be developed is essential. This research explores how CT skills can be developed for programming through competitive, physical, and tactile games. The CT elements in this research focus on four major programming concepts, which are decomposition, pattern recognition, abstraction, and algorithmic thinking. We have conducted game activities through several algorithms that include sorting, swapping, and graph algorithms and analyzed how the game affects the student experience (SX) in understanding the CT concept in those algorithms. We have applied the quadrilateral method approach to the data collection and analysis. The data was obtained through observation, interview/survey based on six SX criteria (attention, engagement, awareness, satisfaction, confidence, and performance), and performances of the conducted game activities were compared. The results of the quadrilation of the data collected show a positive impact on the SX, highlight the effectiveness of the competitive, physical, and tactile game approach proposed in this research towards programming and CT skills development. [ABSTRACT FROM AUTHOR] Copyright of Turkish Journal of Electrical Engineering & Computer Sciences is the property of Scientific and Technical Research Council of Turkey and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Turkish Journal of Electrical Engineering & Computer Sciences,"Analyzing students' experience in programming with computational thinking through competitive, physical, and tactile games: the quadrilateral method approach.","HABIB, Mohammad Ahsan; RAJA-YUSOF, Raja-Jamilah; SALIM, Siti Salwah; SANI, Asmiza Abdul; SOFIAN, Hazrina; ABU BAKAR, Aishah"
22671242,538,10.1051/e3sconf/202453805034,,EDP Sciences,,E3S Web of Conferences,Methods of using STEAM technologies in the development of pupils' computational thinking.,"Akramova, Gulbahor; Ma'murov, Bahodir; Akramova, Surayo; Qo'ldoshev, Rustambek; Shodmonova, Abera"
22747214,395,10.1051/matecconf/202439501034,,EDP Sciences,,MATEC Web of Conferences,Research on cultivating computational thinking in university computer courses - Based on PBL strategies.,Qun Wang; Mei Liu
20534701,7,10.1017/dsj.2021.7,,Cambridge University Press,"This paper proposes a relationship between design thinking and computational thinking. It describes design thinking and computational thinking as two prominent ways of understanding how people address design problems. It suggests that, currently, each of design thinking and computational thinking is defined and theorized in isolation from the other. A two-dimensional ontological space of the ways that people think in addressing problems is proposed, based on the orientation of the thinker towards problem and solution generality/specificity. Placement of design thinking and computational thinking within this space and discussion of their relationship leads to the suggestion of a dual process model for addressing design problems. It suggests that, in this model, design thinking and computational thinking are processes that are ontological mirror images of each other, and are the two processes by which thinkers address problems. Thinkers can move fluently between the two. The paper makes a contribution towards the theoretical foundations of design thinking and proposes questions about how design thinking and computational thinking might be both investigated and taught as constituent parts of a dual process. [ABSTRACT FROM AUTHOR] Copyright of Design Science is the property of Cambridge University Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Design Science,Design thinking and computational thinking: a dual process model for addressing design problems.,"Kelly, Nick; Gero, John S."
,,,,Association for Information Systems,"Computation is critical to social development for information processing in today's digital world. Computational Thinking (CT), the underlying cognitive functioning of designing computation, has been under heated discussion. However, the conceptualization of CT and its measurements still require improvement when discussing CT as a competence for problem-solving. This study first conceptualizes CT in problemsolving context by identifying the framework of competence based on a tripartite view and applying it to clarify that CT competence consists of CT knowledge, skills, and attitudes. It then aims to develop a self-reported scale for complementing CT measurements based on the tripartite view. This work contributes to CT theories and measures through a more precise conceptual framework and an instrument developed based on it. It enriches IS studies by a new perspective that humans form their cognitive process for problem-solving under digital technologies, especially computational tools. [ABSTRACT FROM AUTHOR] Copyright of Proceedings of the International Conference on Information Systems (ICIS) is the property of Association for Information Systems and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Proceedings of the International Conference on Information Systems (ICIS),Understanding and Measuring Computational Thinking: A Tripartite View of Competence.,"Ji; Yijing Xun; Lee, Matthew K. O."
21841934,,,,Association for Information Systems,"Being part of a digital societies requires a ""digital mindset"". But what exactly is a digital mindset? There are many answers that have not really been systematized. A related area where systematization already started is Computational Thinking (CT): a branch of pedagogy that catalogued the capabilities necessary to live in a digitized and technology-driven world. CT is defined as a general problem-solving competence based on abstraction, algorithmic-thinking, problem-decomposition, pattern-recognition, and evaluation. Researchers promote CT as a 21st century skills important for everyone. Aim of our article is to reveal the relevance of CT as complement to IS-research in the creation of a digital mindset. We conducted a computational and qualitative literature review using quantitative bibliometric-citation analysis. From the analysis, we derive an integrative framework to identify how IS-research could profit from teaching, and applying CT, as a competence in the digital transformation of their discipline. [ABSTRACT FROM AUTHOR] Copyright of Proceedings of the European Conference on Information Systems (ECIS) is the property of Association for Information Systems and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Proceedings of the European Conference on Information Systems (ECIS),MIXED METHOD LITERATURE REVIEW ON COMPUTATIONAL THINKING - DEVELOPING AN INTEGRATED RESEARCH FRAMEWORK AND RESEARCH PROPOSITIONS.,"Hubert, Mirja; Petersen, Camilla Kølsen; Akther, Farzana; Carugati, Andrea"
22111662,28,10.1007/s10758-021-09585-4,4,Springer Nature,"This study examines the effects of plugged and unplugged programming tools used in algorithm teaching at the K-12 level on student computational thinking skills and to determine whether gender is a factor in this process. The study group was designed with a control group pre-test–post-test; quasi-experimental model, that consisted of 109 students in 6th grade at a secondary school. 3 of 4 branches in the school were randomly selected and the experiment and control groups were determined by random assignment. During the study, experiment group 1 was taught Code.org while experiment group 2 was taught unplugged tools, and the control group was taught Scratch. The study lasted for 6 weeks and had 2 lessons per week. The data collection tool used was the ""Computational Thinking Levels Scale"" as the pre- and post-tests. Our findings showed that while the group that was taught unplugged activities showed positive development for computational thinking skills, there were no significant improvements observed in the other groups. Also, when comparing computational thinking skills, again, there was no significant difference found among the groups. It was observed that group and gender cofactors did not create significant variation among the groups; and when examined on a group basis, differences were found to favor male students when they were performing unplugged activities. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",A Comparison of Plugged and Unplugged Tools in Teaching Algorithms at the K-12 Level for Computational Thinking Skills.,"Kirçali, Aycan Çelik; Özdener, Nesrin"
22111662,28,10.1007/s10758-022-09606-w,3,Springer Nature,"Computational thinking is an essential 21st-century skill that all youth should develop in order to navigate and succeed in an increasingly computational world. For all youth to have hands-on opportunities to develop essential computational thinking skills, libraries and informal learning environments play a critical role. This is especially true for youth who attend schools where computational learning opportunities are limited or altogether absent. This article presents an analysis of responses from 59 library staff members to the following questions: What is computational thinking? How is computational thinking being facilitated in libraries? And, what are the goals of the computational thinking programs being offered by libraries? The analysis reveals the multifaceted ways that library staff conceptualize computational thinking and the range of ways computational thinking is being integrated into library programs. This work advances our understanding of the current state of computational thinking in libraries. In doing so, we seek to guide library staff on ways to support the computational thinking learning that is currently happening and create new ways to help bring the powerful ideas of computing to broader audiences. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",The State of Computational Thinking in Libraries.,"Weintrop, David; Subramaniam, Mega; Morehouse, Shandra; Koren, Nitzan"
10613773,31,10.1002/cae.22609,4,Wiley-Blackwell,"Computational thinking is the process of solving a problem in a way that can be readily automated by a computer. Decomposition, pattern recognition, abstraction, and algorithm design are four major components of computational thinking. We conducted an experiment to study the effectiveness of smartphone apps for teaching computational thinking to 7‐year‐old children. The first experimental group was taught computational thinking using four apps, one for each component. The second experimental group was taught computational thinking using the chalk and board approach. The control group was not imparted any lesson in computational thinking. The intervention period lasted 8 weeks and was followed by a posttest and a retention test conducted after another 2 weeks. The children showed interest in learning computational thinking and could solve problems that are inspired by real‐world engineering problems during the intervention period. They could analyze and debug (77%) their own work. The performance of the children in the two experiment groups was significantly better than those in the control group in the posttest and the retention test (F = 26.470, p <.05). This means that 7‐year‐old children can learn computational thinking from suitable mediums. No significant difference was observed in the performance of the children in the posttest and the retention test (p >.05), denoting that children can retain the concepts of computational thinking. Including computational thinking lessons at the K‐12 level can encourage children to enroll in engineering programs in the future. We recommend standardization of content and development of age‐specific apps for teaching computational thinking. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Introducing schoolchildren to computational thinking using smartphone apps: A way to encourage enrollment in engineering education.,"Yadav, Savita; Chakraborty, Pinaki"
22344772,25,10.6109/jkiice.2021.25.2.246,2,Korea Institute of Information & Communication Engineering,"This study is analyzed survey based on classes of computational thinking to identify problem solving ability, to reflect them in curriculum plan for software education. Through analyzing difficulties on computational thinking learners by pre/post test on problem solving ability, the education method of software curriculum was proposed. For this study, the subject, scope of content, and activity plan were organized into 15 weeks of software curriculum for 2 hours per week, and questionnaire was conducted for 63 students. As a result, the 'Humanities Departments' have shown higher problem solving ability improvement than 'Science and Engineering Departments'. Based on the results, in order to cultivate creative fusion-type talent, the theoretical systems that fundamentally define thinking and perception must be fused with each other. In addition, software education should be improved to be extended to non-majors in various fields. [ABSTRACT FROM AUTHOR] Copyright of Journal of the Korea Institute of Information & Communication Engineering is the property of Korea Institute of Information & Communication Engineering and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of the Korea Institute of Information & Communication Engineering,교양교육의 컴퓨팅사고력 수업이 문제해결능력에 미치는 영향.,신좌철
22344772,25,10.6109/jkiice.2021.25.2.252,2,Korea Institute of Information & Communication Engineering,"Software subjects such as programming practice and physical computing may have differences between men and women, and there may be individual differences in resilience due to errors and debugging. Therefore, in this study, we analyze gender differences in computational thinking classes by using a resilience testing tool. The results of this study showed that the two groups were homogeneous, and the male group did not show significant changes in resilience, but the female group showed significant increases in resilience. This study confirmed the possibility of reducing the gender gap of learners by allowing a group of female students who did not show strength in traditional software education to become more motivated and interested in the information and communication field through appropriate learning content and learning strategies in computational thinking classes. [ABSTRACT FROM AUTHOR] Copyright of Journal of the Korea Institute of Information & Communication Engineering is the property of Korea Institute of Information & Communication Engineering and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of the Korea Institute of Information & Communication Engineering,컴퓨팅 사고 강좌에서 성별에 따른 회복탄력성 수준 분석.,김세민; 최숙영
20763417,11,10.3390/app11010115,1,MDPI,"Computational thinking (CT) has been a topic of interest in research, not only in the field of computer science, but also in education, since it allows the development of a set of competencies in the child related to problem-solving and decision-making. However, few studies on CT are focused on children with disabilities. Developing computational thinking skills for children with hearing problems is a challenge, even more so when their language skills are limited. Following a methodology for conception of serious games for children with hearing impairment called MECONESIS (Acronym in Spanish, MEtodología para CONcepción de juEgos Serios para nIños con discapacidad auditiva), we designed the serious game Perdi-Dogs for children between 7 and 11 years old with hearing impairment. We considered a set of aspects, such as challenges/learning, control, rules, feedback, interaction, rewards, surprise, communication/language, and fantasy. Perdi-Dogs involves both a physical and a digital interface, specifically a physical board together with digital interaction, by means of a QR (Quick Response) code and vibrotactile feedback system. Perdi-Dogs simulates a real environment, using physical elements able to interact simultaneously with technology. Evaluation was carried out with a group of seven children between 7 and 11 years old from the Institute for Deaf and Blind Children (Colombia). The results showed a high motivation to play for all of the children involved in the experiment. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),Serious Game as Support for the Development of Computational Thinking for Children with Hearing Impairment.,"Cano, Sandra; Naranjo, Juan S.; Henao, Cristhiam; Rusu, Cristian; Albiol-Pérez, Sergio"
07356331,61,10.1177/07356331221121052,2,Sage Publications Inc.,"Computational thinking (CT) is an emerging and multifaceted competence important to the computing era. However, despite the growing consensus that CT is a competence domain, its theoretical and empirical account remain scarce in the current literature. To address this issue, rigorous psychometric evaluation procedures were adopted to investigate the structure of CT competency, as measured by Computational Thinking Challenge (Lai, 2021a), in a large sample of 1,130 British secondary school students (M age = 14.14 years, SD age = 1.45). Based on model comparison from an exploratory multidimensional item response theory approach, the results supported the multidimensional operationalization of CT competency. A confirmatory bi-factor item response theory model further suggested CT competency is comprised of a general CT competency factor and two specific factors for programming and non-programming problem-solving. Despite the multidimensionality, the common variance is largely explained by a primary general factor of CT competency, thus the use of a single scale score is recommended. Psychometric evaluation from the bi-factor model indicated good psychometric properties of the assessment tool. Overall, the bi-factor model provides a useful approach to investigating CT competency and serves as a robust test validation tool. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,How Multidimensional is Computational Thinking Competency? A Bi-Factor Model of the Computational Thinking Challenge.,"Lai, Rina PY; Ellefson, Michelle R"
10589244,,10.1155/2022/3575457,,Hindawi Limited,"Computational thinking (CT) is an approach that applies the fundamental concepts of computer science to solve problems, design systems, and understand human behavior, which can help students develop lifetime learning and generate new topics. It has been the elements of competency expected of the next generation of talents. However, the current research on computational thinking evaluation is still at a relatively weak stage. The existing related evaluation research is still limited to traditional curriculum evaluation methods. Therefore, the training effect of computational thinking cannot be well quantified, and the characteristics of students cannot be further explored. In this work, we propose a three-way decision model for improving computation thinking. We first developed a system of evaluation metrics, including five specific primary indicators and several secondary indicators. Next, the weight of each indicator was determined by applying an expert similarity measure, consequently getting the best metric sequence. We employ a grey correlation analysis to calculate the distance of each test result from this optimal sequence. Then, we trisect the set of testers based on the distance to build three regions of high score sequences, medium score sequences, and low score sequences inspired by the three-way decision. We can then exploit these rules on target students in the relatively low regions to improve their computational thinking. An example analysis illustrates the effectiveness and applicability of the method. This article provides a solid theoretical basis for improving students' computational thinking ability. Teaching administrators can conveniently formulate computational thinking teaching strategies, and timely warning and intervention for students with poor computational thinking ability can effectively improve students' computational thinking ability. The corresponding training measures are given to students of different ability levels to achieve differentiated and personalized training. [ABSTRACT FROM AUTHOR] Copyright of Scientific Programming is the property of Hindawi Limited and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Scientific Programming,A Novel Three-Way Decision Model for Improving Computational Thinking Based on Grey Correlation Analysis.,"Xu, Ruiyang; Jiang, Chunmao; Sun, Lijuan"
10613773,31,10.1002/cae.22654,5,Wiley-Blackwell,"Programming has received extensive attention for the embodiment of computational thinking (CT) skills. However, the lack of in‐depth research on the characteristics of college students' CT skills in text‐based programming learning has resulted in the unknown distribution characteristics and evolution patterns of their CT skills, which cannot effectively constitute an effective tracking analysis of their CT skills, thus affecting the cultivation of creative thinking and problem‐solving skills for them. Therefore, the purpose of the paper is to explore the characteristics of college students' CT skills through text‐based programming work and discover the overall characteristics, individual differences and evolutionary patterns of their CT skills on the relation between text‐based programming and CT skills through data analysis. It was found that there are roughly five categories of CT difference and four major categories with nine subcategories of CT evolution among college students. The results showed that the Control and Data skills were the students' dominant skills. In contrast, Algorithm skills were relatively weak. Only about 1/3 of the students had the phenomenon of continuous skill improvement, and programming learning did not have a significant impact on the improvement of CT skills for some students. Finally, we propose several suggestions for CT skills development strategies in response to the students' characteristics in CT skills. The study can not only fill the gaps of the current study but also identify the evolutionary characteristics of students' CT skills, which can effectively intervene in college students' programming learning and help improve their CT skills. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Exploring the differences and evolution of college students' computational thinking in programming learning through data analysis.,"Zhang, Wei; Zeng, Xinyao; Li, Panpan; Wang, Bing"
15391523,55,10.1080/15391523.2021.2014372,4,Taylor & Francis Ltd,"The primary goals of this research were to investigate the development of computational thinking (CT) skills among elementary students and to identify areas for improvement in their CT practices. Empirical investigations, accomplished in a learner-centered, problem-based learning curriculum for sixth-graders, sought to examine student proficiency in CT practices by analyzing programs developed by students. A total of 30 students participated in this study and eleven Scratch projects were analyzed. Results revealed that students showed high competence in Event, Parallelism, Sequence, and Design while low competence in Loop & Operator. Examination of the flow of their programs revealed how effectively students utilized CT concepts in CT practices. As areas for improvement, researchers identified an extremely fine-grained programming (EFGP) approach and a lack of abstraction. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Computational thinking practices: Lessons learned from a problem-based curriculum in primary education.,"Kwon, Kyungbin; Jeon, Minji; Guo, Meize; Yan, Ge; Kim, Jiyoung; Ottenbreit-Leftwich, Anne T.; Brush, Thomas A."
10613773,31,10.1002/cae.22610,4,Wiley-Blackwell,"Building practical programming competency requires a long‐lasting journey of discovery, trial and error, learning and improvement. This article presents essential findings of a case study of a Python programming contest with an automatic judgement system for Competitive Programming training extending the learning experiences for students in an introductory course, computational thinking and problem‐solving. The benefits and challenges are discussed. Due to the coronavirus disease 2019 (COVID‐19) epidemic, a hybrid model of the contest was adopted, that is, some students participated in the contest on‐site, while others participated remotely. To alleviate human effort in judging the submissions, the DOMjudge platform, a web‐based automatic judgement system, has been deployed as an online automatic judgement system and contest management in competitive programming. The implementation roadmap and framework were provided. The contest problems and contestants' performances were discussed. Not many junior contestants could solve at least one problem(s), and competitive computing training should be offered if the students are keen on open competitions. An empirical study was conducted to evaluate the student feedback after the contest. Preliminary results revealed that the contest offering the chance to stimulate student learning interests could enhance their independent learning, innovative thinking and problem‐solving skills, and could thus lead to the overall benefits of the learning experiences, which further encourage them to participate in future contests to improve their learning and therefore enhance their employability. Employers often treasure student experiences in competitive programming events, like association for computing machinery programming contests, Google Code Jam or Microsoft Imagine Cup. Sharp vision requiring skills to tackle unseen problems within a short period is also instrumental to students planning for graduate school. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Competitive programming in computational thinking and problem solving education.,"Yuen, Kevin K. F.; Liu, Dennis Y. W.; Leong, Hong Va"
07356331,61,10.1177/07356331221133822,4,Sage Publications Inc.,"Underpinning the teaching of coding with Computational Thinking has proved relevant for diverse learners, particularly given the increasing demand in upskilling for today's labour market. While literature on computing education is vast, it remains unexplored how existing CT conceptualisations relate to the learning opportunities needed for a meaningful application of coding in non-Computer Scientists' lives and careers. In order to identify and organise the learning opportunities in the literature about CT, we conducted a configurative literature review of studies published on Web of Science, between 2006 and 2021. Our sample gathers 34 papers and was analysed on NVivo to find key themes. We were able to organise framings of CT and related learning opportunities into three dimensions: functional, collaborative, and critical and creative. These dimensions make visible learning opportunities that range from individual cognitive development to interdisciplinary working with others, and to active participation in a technologically evolving society. By comparing and contrasting frameworks, we identify and explain different perspectives on skills. Furthermore, the three-dimensional model can guide pedagogical design and practice in coding courses. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,What Else Can Be Learned When Coding? A Configurative Literature Review of Learning Opportunities Through Computational Thinking.,"Melro, Ana; Tarling, Georgie; Fujita, Taro; Kleine Staarman, Judith"
20511310,9,10.1093/comnet/cnab020,6,Oxford University Press / USA,"A significant aspect of computational thinking is as a way of reasoning about the world in terms of data. This mindset channels number-crunching toward an ambition to discover knowledge through logic, models and simulations. Here we show how computational cognitive science can be used to reconstruct and analyse the structure of computational thinking mindsets (forma mentis in Latin) through complex networks. As a case study, we investigate cognitive networks tied to key concepts of computational thinking provided by (i) 159 high school students enrolled in a science curriculum and (ii) 59 researchers in complex systems and simulations. Researchers' reconstructed knowledge highlighted a positive mindset about scientific modelling, semantically framing data and simulations as ways of discovering nature. Students correctly identified different aspects of logic reasoning but perceived 'computation' as a distressing, anxiety-eliciting task, framed with math jargon and lacking links to real-world discovery. Students' mindsets around 'data', 'model' and 'simulations' critically revealed no awareness of numerical modelling as a way for understanding the world. Our findings provide evidence of a crippled computational thinking mindset in students, who acquire mathematical skills that are not channelled toward real-world discovery through coding. This unlinked knowledge ends up being perceived as distressing number-crunching expertise with no relevant outcome. The virtuous mindset of researchers reported here indicates that computational thinking can be restored by training students specifically in coding, modelling and simulations in relation to discovering nature. Our approach opens innovative ways for quantifying computational thinking and enhancing its development through mindset reconstruction. [ABSTRACT FROM AUTHOR] Copyright of Journal of Complex Networks is the property of Oxford University Press / USA and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Complex Networks,Mapping computational thinking mindsets between educational levels with cognitive network science.,"Stella, M; Kapuza, A; Cramer, C; Uzzo, S"
22344772,24,10.6109/jkiice.2020.24.2.259,2,Korea Institute of Information & Communication Engineering,"The purpose of this study is to analyze the effects of computational thinking class using ARCS model to increase students' learning motivation. Then, this study designed the detailed instruction strategy according to each motivation factor(Attention, Relevance, Confidence, Satisfaction) of ARCS through the previous study on computational thinking education and ARCS model. The results of the ARCS test were compared between the experimental group to which the ARCS model was applied and the control group to which the general class was conducted. As a result, students in the experimental group showed significantly higher motivation for learning about computational thinking. In particular, the learning motivation of computer-related majors was significantly higher than that of the control group. In addition, majors were found to have high relevance(R) and non-majors had high satisfaction(S). Therefore, based on these findings, this study suggests an improvement for effective computational thinking class in liberal arts education. [ABSTRACT FROM AUTHOR] Copyright of Journal of the Korea Institute of Information & Communication Engineering is the property of Korea Institute of Information & Communication Engineering and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of the Korea Institute of Information & Communication Engineering,교양 컴퓨팅 사고력 과목의 학습자 학습동기 향상을 위한 ARCS 모델의 적용 및 효과 분석.,전수진; 신좌철
07356331,61,10.1177/07356331221114183,2,Sage Publications Inc.,"Computational thinking is believed to be beneficial for Science, Technology, Engineering, and Mathematics (STEM) learning as it is closely related to many other skills required by STEM disciplines. There has been an increasing interest in integrating computational thinking into STEM and many studies have been conducted to examine the effects of this intervention. This meta-analysis examined the effects of computational thinking integration in STEM on students' STEM learning performance in the K-12 education context. Following systematic procedures, we identified 20 publications with 21 studies meeting the inclusion and exclusion criteria from a range of academic databases. We extracted effect sizes on student learning outcomes in one-group pretest-posttest designs. We also examined a range of moderating variables in the models, including student levels, STEM disciplines, intervention durations, alignment with content standards (e.g., CSTA/NGSS), types of intervention (e.g., simulation), and the use of unplugged/plugged activities. Overall, we found a statistically significant large effect size (g = 0. 85 [95% CI of 0.57–1.14]; p <.001), indicating a large overall effect of computational thinking integration on STEM learning outcomes. The effect sizes were significantly moderated by intervention durations. We provide a discussion of the findings and present implications for future research and practice. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,The Effects of Computational Thinking Integration in STEM on Students' Learning Performance in K-12 Education: A Meta-analysis.,"Cheng, Li; Wang, Xiaoman; Ritzhaupt, Albert D."
10494820,31,10.1080/10494820.2020.1811734,2,Taylor & Francis Ltd,"Recent years have witnessed an increasing emphasis on integrating computational thinking into school curriculums. This study deals with suggesting a course model including data collection tools for evaluating teachers' pedagogical content knowledge in teaching computational thinking via teaching robot programming. Taking the advantages of virtual educational robotics, the study addressed some steps to be used during the teacher training sessions. The results provide implications for educators who desire to provide training programs for teachers to prepare them to teach robotics. Using the suggested model, the instructional activities and the assessment tools will be structured for practitioners' use. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Assessing teachers' PCK to teach computational thinking via robotic programming.,"Çakıroğlu, Ünal; Kiliç, Servet"
22671242,482,10.1051/e3sconf/202448204005,,EDP Sciences,,E3S Web of Conferences,Project-based Model in Physics Learning: The Influence on Computational Thinking Skills on the Eleventh-Grade Natural Science Major Students.,"Subekti, Diah Aghni; Latifah, Sri; Anugrah, Adyt; Fitri, Megawati Ridwan; Makbuloh, Deden; Subandi; Islam, Monirul"
22671242,482,10.1051/e3sconf/202448204001,,EDP Sciences,,E3S Web of Conferences,Implementing Computational Thinking Skills in Socio Scientific Issue (SSI) of Force Material Around Us at Elementary School.,"Yanti, Yuli; Kalifah, Diah Rizki Nur; Hidayah, Nurul"
22546529,8,10.17993/3ctic.2019.84.85-113,4,"Area de Innovacion y Desarrollo, SL","Education is an integral part of the new technologies and that is so that an increasing number of universities worldwide are demanding electronic literacy as one of the requirements in their entrance and graduation exams, considering that it is an essential objective to prepare future professionals for the digital era in the workplace. Thus, in recent years the concept and application of computational thinking has taken great relevance, since as part of its methodology is the use of simulation software as support for learning and problem solving, such computer packages that detect, analyze, understand, correlate and experience in the world virtual solutions that may have problems to solve a real problem, as in the case of electronics in circuit design and programming, curricular contents can be complex and extensive due to the great number of developments and innovations that have emerged in recent decades. (English) [ABSTRACT FROM AUTHOR] La educación es parte integrante de las nuevas tecnologías y eso es tan así que un número cada vez mayor de universidades en todo el mundo está exigiendo la alfabetización electrónica como uno de los requisitos en sus exámenes de acceso y de graduación, por considerar que es un objetivo esencial preparar a los futuros profesionales para la era digital en los centros de trabajo. Es así que en los últimos años ha tomado gran relevancia el concepto y aplicación del pensamiento computacional, ya que como parte de su metodología se encuentra la utilización de software de simulación como apoyo para el aprendizaje y solución de problemas, dichos paquetes informáticos permiten explorar, analizar, comprender, correlacionar y experimentar en el mundo virtual soluciones que posteriormente pueden aplicarse para resolver un problema real, como en el caso de la electrónica en el diseño y programación de circuitos, cuyos contenidos curriculares pueden ser complejos y extensos debido a la gran cantidad de desarrollos e innovaciones que han surgido en las últimas décadas. (Spanish) [ABSTRACT FROM AUTHOR] Copyright of 3C TIC is the property of Area de Innovacion y Desarrollo, SL and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",3C TIC,EL PENSAMIENTO COMPUTACIONAL EN LA ELECTRÓNICA: LA IMPORTANCIA DEL SOFTWARE DE SIMULACIÓN EN LA COMPRENSIÓN DEL PRINCIPIO DE FUNCIONAMIENTO DE LOS COMPONENTES ELECTRÓNICOS.,"Albiter Jaimes, Javier; Mendoza Mendez, Rafael Valentín; Dorantes Coronado, Ernesto Joel"
25781863,3,10.1002/hbe2.224,2,Hindawi Limited,"Computational thinking (CT) is increasingly being recognized as a fundamental skill, like math, for all students. This need to equip every student with competent CT skills calls for CT education in K‐12 schools and teachers with adequate content and pedagogical knowledge to integrate CT. This study elicits and synthesis what top leaders in CT education know and experience about best practices of CT in K‐12 schools and educator preparation. It also examines experts' views about distinctive challenges, useful strategies, and practical models related to CT education. Adopting an expert interview approach, the participants are five leaders with diverse background and extensive experience in the field of CT education. The qualitative analysis of the data points to two guidelines to teach CT in K‐12 context, namely age level appropriateness and good design. It also indicates three main challenges and specific strategies to establish CT‐integrated teacher education programs. [ABSTRACT FROM AUTHOR] Copyright of Human Behavior & Emerging Technologies is the property of Hindawi Limited and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Human Behavior & Emerging Technologies,Computational thinking and teacher education: An expert interview study.,"Li, Qing"
22111662,28,10.1007/s10758-021-09587-2,2,Springer Nature,"Computational thinking (CT) is an important 21st-century skill. This paper aims at more useful CT assessment. Available evaluation instruments are reviewed; two generally accepted CT evaluation tools are selected for a comprehensive CT assessment: the CTt, a performance test, and the CTS, a self-assessment instrument. The sample comprises 202 high school students from German-speaking Switzerland. Concerning the CTt, Rasch-scalability is demonstrated. Utilizing the approach of the PISA studies, proficiency levels are formed that comprise tasks with specific characteristics that students are systematically able to master. This could help teachers to offer individual support to their students. In terms of the CTS, the original version is refined using confirmatory factor and measurement-invariance analysis. A latent profile analysis yielded four profiles, two of which are of particular interest. One profile comprises students with, on the one hand, moderate to high creative thinking ability, cooperativity, and critical thinking skills and, on the other hand, low algorithmic thinking ability. The second remarkable profile consists of students with particularly low cooperativity. Based on these strength and weakness profiles, teachers could offer support tailored to student needs. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",Computational Thinking Assessment – Towards More Vivid Interpretations.,"Guggemos, Josef; Seufert, Sabine; Román-González, Marcos"
07356331,61,10.1177/07356331221134423,3,Sage Publications Inc.,"Most studies suggest that students develop computational thinking (CT) through learning programming. However, when the target of CT is decoupled from programming, emerging evidence challenges the assertion of CT transferability from programming. In this study, CT was operationalized in everyday problem-solving contexts in a learning experiment (n = 59) that investigated whether learning programming enhances students’ CT skills. Specifically, this study examined the influence of a novel, systematic and micro instructional strategy that is grounded in abstraction and comprised of four independent but related processes – discover, extract, create, and assemble (DECA) towards simplification of problem-solving. Subsidiary questions explored the effects of students’ age, gender, computer proficiency, and prior programming experience on the development of CT. No significant difference was found between the CT skill and programming knowledge of the groups at the posttest. However, within-group paired t-tests showed that the experimental group that integrated DECA had significant improvement in CT but not in the control group across the pretest-posttest axis. Implications of the inconclusive finding about the transfer of programming skills to CT are emphasized and the arguments for disentangling CT from programming are highlighted. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,"Abstractive-Based Programming Approach to Computational Thinking: Discover, Extract, Create, and Assemble.","Ezeamuzie, Ndudi O."
15391523,55,10.1080/15391523.2021.1983894,3,Taylor & Francis Ltd,"With the rapid development of artificial intelligence in many disciplines, computational thinking (CT) has become an important skill for the 21st century. To promote vocational high school students' CT skills in learning about programmable logic controllers, this study intended to examine how cognitive and metacognitive prompts separately or together influenced students' development of CT. The findings revealed that metacognitive prompts significantly improved students' CT outcomes, self-efficacy, and motivation for learning. The study offers important implications regarding the strategies to promote CT in vocational high schools. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Scaffolding vocational high school students' computational thinking with cognitive and metacognitive prompts in learning about programmable logic controllers.,"Chen, Ching-Huei; Liu, Tung-Kai; Huang, Kun"
07380569,40,10.1080/07380569.2023.2172987,2,Taylor & Francis Ltd,"As a key motivational factor that determines future teaching success with Computational Thinking (CT), in this cross-sectional survey study, we investigated if and how preservice teachers' (n = 76) self-efficacy for CT teaching, their usage of CT tools, and their motivation (utility value) were (inter)related. Through a series of regression analyses, we identified the associations between the three variables and found support for existing theories in the CT preservice education context. Notably, we found that CT usage and CT UV were only associated through the mediation of self-efficacy, which seems to be the key component for usage. We propose that CT focused interventions targeting utility value and classroom practices and policies should be provided to give preservice teachers experience in using CT software/tools are key for teacher education institutions and CT implementation into curricula. [ABSTRACT FROM AUTHOR] Copyright of Computers in the Schools is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in the Schools,Exploring the Relationship among Motivational Constructs and Preservice Teachers' Use of Computational Thinking in Classrooms.,"Akcaoglu, Mete; Özcan, Meryem Şeyda; Hodges, Charles B."
10613773,31,10.1002/cae.22588,2,Wiley-Blackwell,"Computational thinking, as an essential competency for the future development of citizens, is an important goal of computer science instruction. Although studies have shown that early exposure to computer programming is beneficial for improving computational thinking, current programming instruction does not systematically consider the factors that influence the development of computational thinking. To promote the early development of computational thinking, we analyzed the main factors that influence the development of computational thinking in terms of learners' cognitive level, instructional content, and technological environment. Therefore, this study proposes a teaching framework for developing computational thinking based on embodied cognitive theory. This teaching framework shows how to choose a suitable technological environment, design the appropriate content and apply adequate methods to effectively promote students' computational thinking development. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Embodied design: A framework for teaching practices focused on the early development of computational thinking.,"Deng, Wenbo; Guo, Xipei; Cheng, Weihua; Zhang, Wenlan"
21698767,,,,IEOM Society International,"As an ideal medium for the development of 21st-century skills, Computational Thinking is commonly developed through Computer Science practices such as programming and robotics. Among the vast literature on Computational Thinking, few of them address the strategy to implement Design Thinking to facilitate the development of Computational Thinking. This study investigates whether Design Thinking can facilitate the development of Computational Thinking based on a systematic literature review as a method of this research. The author identifies the literature that can be used as a reference in this study, analyzes the development of Computational Thinking skill, and looks for its correlation with Design Thinking--both Design Thinking and Computational Thinking to support problem-solving skills through a structured thinking approach. [ABSTRACT FROM AUTHOR] Copyright of Proceedings of the International Conference on Industrial Engineering & Operations Management is the property of IEOM Society International and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Proceedings of the International Conference on Industrial Engineering & Operations Management,Exploring The Impact of Design Thinking on the Development of Computational Thinking Skill: Review of the Literature.,"Naylufarhani Hardjanto, Maryam Fadhilllah; Budiyanto, Cucuk; Aristyagama, Yusfia Hafid"
00010782,64,10.1145/3491268,12,Association for Computing Machinery,"The article discusses computational thinking (CT) practiced by information technology (IT) professionals as of the early 21st century. It discusses CT programs in K-12 education, difficulties, challenges, and problems of teaching CT to beginning students, and CT for professionals.",Communications of the ACM,The Profession of IT: Computational Thinking for Professionals: Professionals practice a form of computational thinking that is significantly more advanced than popular descriptions suggest.,"Denning, Peter J.; Tedre, Matti"
18657923,14,10.3991/ijim.v14i14.14719,14,International Journal of Interactive Mobile Technologies,"The growing demand for combining digital technology with learning practices has surpassed the use of technology or learning how to use it into the process of enhancing learners' intellectual levels and scaffolding their understanding by focusing on skills that include thought processes gathered in what is called computational thinking. On the other hand, educational challenges promote the search for new instructional tools and approaches. Consequently, learning shall be extended by superimposing science, technology, engineering, arts, and mathematics (STEAM) approach in the instructional practices. The aim of this paper is to show how STEAM approach can develop the computational thinking among high school learners. The main skills of computational thinking included: algorithmic thinking, abstraction, decomposition, and generalization. The sample of this study involved 32 high school students in a private school in Amman. The experimental group studied geography skills in a STEAM approach that included the use of online resources such as LightBot maze and the Ordnance Survey maps (OS) website. The control group studied the same content but through conventional method. Findings showed a significant development in the computational thinking especially in algorithmic thinking and abstraction. Thus a STEAM approach learning environment is one of the effective methods of teaching that improved computational thinking. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,The Effect of Using STEAM Approach on Developing Computational Thinking Skills among High School Students in Jordan.,"Bedar, Rana Al-Haj; Al-Shboul, Muhannad"
15980170,20,10.7472/jksii.2019.20.3.93,3,Korean Society for Internet Information,"The interest in the Fourth Industrial Revolution along with the development of ICT makes the software get the attention of the world. This phenomenon naturally leads to the concern for software education. Learning software coding is not easy for students whose major is in humanities or social sciences. This paper is a study of how cognition on software education affects to education of computational thinking. For research method, moderator variables were adopted on the proposed research model to prove that positive cognition can derive good influence on improvement of computational thinking. To find out moderator variables of the research model, we have conducted the questionnaire over three years for total of 928 students who took the software coding courses. As the result of the study, we proved that the positive cognition on software education can make the better improvement of computational thinking within proper moderator variables. [ABSTRACT FROM AUTHOR] Copyright of Journal of Korean Society for Internet Information is the property of Korean Society for Internet Information and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Korean Society for Internet Information,The Study on Correlation of Cognition on Software Education with Improvement of Computational Thinking.,Oakyoung Han; Jaehyoun Kim
18257321,19,10.13128/formare-25037,1,Firenze University Press,"Coding and computational thinking are two terms increasingly present in the scholastic debate of last years. The recent Italian guidelines and new scenarios (MIUR, 2018) have given to computational thinking an important role today in school. However, it is often confusing the teaching of coding (that is, the teaching of a specific programming language) with the teaching of computational thinking, that requires to take into account the relationships between this, problem solving and competences. In fact, coding is only one of the moments of computational thinking, which must be preceded by a moment of conceptualization, linked to the analysis and decomposition of the problems subject to codification. The article proposes reflections and useful hints for working on computational thinking starting from the first year of primary school, through a re-edition in the form of an educational game of the famous Logo language. (English) [ABSTRACT FROM AUTHOR] Coding e pensiero computazionale sono ormai due termini sempre più presenti nel dibattito scolastico già da alcuni anni e le recenti Indicazioni nazionali e nuovi scenari (MIUR, 2018) hanno dato ancor più risalto al ruolo che dovrebbero avere nella scuola odierna. Spesso però si confonde l'insegnare il coding, ossia uno specifico linguaggio di programmazione, con l'insegnare il pensiero computazionale, trascurando i rapporti che vi sono tra questo, il problem solving e l'esercizio di competenze. Il coding è infatti solo uno dei momenti del pensiero computazionale, che va preceduto da un momento di concettualizzazione, legato all'analisi e alla scomposizione dei problemi oggetto di codifica. L'articolo propone riflessioni e spunti operativi utili per lavorare sul pensiero computazionale a partire dal primo anno della scuola primaria, attraverso una riedizione in forma di gioco didattico del celebre linguaggio Logo. (Italian) [ABSTRACT FROM AUTHOR] Copyright of Form@re is the property of Firenze University Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Form@re,Problem solving e pensiero computazionale. Costruire sinergie tra concettualizzazione e codifica a partire dalla scuola primaria.,"Trinchero, Roberto"
16666046,18,10.24215/16666038.18.e15,2,Journal of Computer Science & Technology,"Computational Thinking (CT) represents a possible alternative for improving students' academic performance in higher level degree related to Science, Technology, Engineering and Mathematics (STEM). This work describes two different experimental proposals with the aim of introducing computational thinking to the problem solving issue. The first one was an introductory course in the Faculty of Physical, Mathematical and Natural Sciences (FCFMyN) in 2017, for students enrolled in computer science related careers. The other experience was a first attempt to introduce CT to students and teachers belonging to not computer related faculties at the National University of San Luis (UNSL). Both initiatives use CT as a mean of improving the problem solving process based on the four following elementary concepts: Decomposition, Abstraction, Recognition of patterns and Algorithm. The results of the experiences indicate the relevance of including CT in the learning problem solving issue in different fields. The experiences also conclude that a mandatory CT related course is necessary for those careers having computational problems solving and/or programming related subjects during the first year of their curricula. Part of this work was presented at the XXIII Argentine Congress of Computer Science (CACIC). (English) [ABSTRACT FROM AUTHOR] El Pensamiento Computacional (PC) representa una alternativa posible para la mejora del rendimiento académico de los estudiantes de nivel superior en áreas relacionadas a la Ciencia, Tecnología, Ingeniería y Matemáticas (STEM; por sus siglas en inglés). Este trabajo describe dos propuestas experimentales diferentes con el propósito de introducir el pensamiento computacional en la resolución de problemas. En el primero se describe un curso introductorio realizado a comienzos del 2017 en la Facultad de Ciencias Físico Matemáticas y Naturales (FCFMyN) destinado a estudiantes matriculados en carreras relacionadas a las ciencias de la computación. La otra experiencia fue una primera aproximación para introducir conceptos del PC a estudiantes y docentes pertenecientes a facultades de la UNSL que no están relacionadas directamente a la computación. Ambas iniciativas se valen del PC como medio para mejorar el proceso de resolución de problemas basado sobre cuatro pilares elementales: Descomposición, Abstracción, Reconocimiento de patrones y Algoritmo. Los resultados de las experiencias dan cuenta de la relevancia de incluir el PC en el aprendizaje de la resolución de problemas en diferentes áreas. Además, se evidencia la necesidad de contar con un curso introductorio en modalidad obligatoria en aquellas carreras que tengan materias relacionadas a la resolución de problemas computacionales y/o programación durante el primer año de su plan de estudio. Parte de este trabajo fue presentado en el XXIII Congreso Argentino de Ciencias de la Computación (CACIC). (Spanish) [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Science & Technology (JCS&T) is the property of Journal of Computer Science & Technology and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Science & Technology (JCS&T),Experiences in Learning Problem-Solving through Computational Thinking.,"Fernández, Jacqueline M.; Zúñiga, Mariela E.; Rosas, María V.; Guerrero, Roberto A."
10730516,28,10.1145/3415582,2,Association for Computing Machinery,"When middle school students encounter computer models of science phenomena in science class, how do they think those computer models work? Computer models operationalize real-world behaviors of selected variables, and can simulate interactions between the modeled elements through programmed instructions. This study explores how middle school students think about the high-level semantic meaning of those instructions, which we term rules. To investigate this aspect of students' computational thinking, we developed the Computational Modeling Inventory and administered it to 253 7th grade students. The Inventory included three computer models that students interacted with during the assessment. In our sample, 99% of students identified at least one key rule underlying a model, but only 14% identified all key rules; 65% believed that model rules can contradict; and 98% could not distinguish between emergent patterns and behaviors that directly resulted from model rules. Despite these misconceptions, compared to the ""typical"" questions about the science content alone, questions about model rules elicited deeper science thinking, with 2-10 times more responses including reasoning about scientific mechanisms. These results suggest that incorporating computational thinking instruction into middle school science courses might yield deeper learning and more precise assessments around scientific models. [ABSTRACT FROM AUTHOR] Copyright of ACM Transactions on Computer-Human Interaction (TOCHI) is the property of Association for Computing Machinery and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ACM Transactions on Computer-Human Interaction (TOCHI),"""It Must Include Rules"": Middle School Students' Computational Thinking with Computer Models in Science.","WIESE, ELIANE S.; LINN, MARCIA C."
07356331,61,10.1177/07356331221100740,1,Sage Publications Inc.,"This meta-analysis determined game-based learning's (GBL) overall effect on students' computational thinking (CT) and tested for moderators, using 28 effect sizes from 24 studies of 2,134 participants. The random effects model results showed that GBL had a significant positive overall effect on students' CT (g = 0.677, 95% confidence interval 0.532–0.821) with significant heterogeneity among effect sizes. Among game types, role-playing yielded the largest GBL effect size, followed by action, puzzles, and adventures. Moreover, the effect of GBL on CT was weaker among students in countries that were more individualistic than others. Lastly, interventions between four hours and one week showed the largest GBL effect size, followed by those over four weeks, up to four hours, and between one week and four weeks. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Effects of Game-Based Learning on Students' Computational Thinking: A Meta-Analysis.,"Lu, Zhuotao; Chiu, Ming M.; Cui, Yunhuo; Mao, Weijie; Lei, Hao"
07356331,60,10.1177/07356331221081753,7,Sage Publications Inc.,"With the increasing importance of Computational Thinking (CT) at all levels of education, it is essential to have valid and reliable assessments. Currently, there is a lack of such assessments in upper primary school. That is why we present the development and validation of the competent CT test (cCTt), an unplugged CT test targeting 7–9 year-old students. In the first phase, 37 experts evaluated the validity of the cCTt through a survey and focus group. In the second phase, the test was administered to 1519 students. We employed Classical Test Theory, Item Response Theory, and Confirmatory Factor Analysis to assess the instruments' psychometric properties. The expert evaluation indicates that the cCTt shows good face, construct, and content validity. Furthermore, the psychometric analysis of the student data demonstrates adequate reliability, difficulty, and discriminability for the target age groups. Finally, shortened variants of the test are established through Confirmatory Factor Analysis. To conclude, the proposed cCTt is a valid and reliable instrument, for use by researchers and educators alike, which expands the portfolio of validated CT assessments across compulsory education. Future assessments looking at capturing CT in a more exhaustive manner might consider combining the cCTt with other forms of assessments. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,The Competent Computational Thinking Test: Development and Validation of an Unplugged Computational Thinking Test for Upper Primary School.,"El-Hamamsy, Laila; Zapata-Cáceres, María; Barroso, Estefanía Martín; Mondada, Francesco; Zufferey, Jessica Dehler; Bruno, Barbara"
08993408,33,10.1080/08993408.2022.2145549,4,Taylor & Francis Ltd,,Computer Science Education,Thinking processes in code.org: A relational analysis approach to computational thinking.,"Kale, Ugur; Yuan, Jiangmei; Roy, Abhik"
23848766,6,10.17083/ijsg.v6i3.304,3,Serious Games Society,"The introduction of Computational Thinking (CT) in Italian compulsory schools is on the way, and there is a general need for new methodologies to support teachers' work. A one-year long learning path supporting the development of CT skills in primary school students through game making activities was defined and tested in a case study with one grade 5 class. All students in the class were actively involved regardless of their personal interest, their participation was generally high, their skills increased along the project, and the main objectives were reached. Nevertheless, results suggest that a longer time span is needed for students to master deeply the new concepts and tools. Class organization proved to be crucial and this confirms the need for an adequate teachers' training before introducing CT in classroom activities. Students demonstrated to be on the right path to approach CT through game making, but they still need to be guided in taking the player's perspective and making their games easy to be understood and played. At the end of the case study, the learning path was revised and is now in use in a three-year long project in a primary school. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Serious Games is the property of Serious Games Society and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Serious Games,Fostering Computational Thinking skills in the Last Years of Primary School.,"Freina, Laura; Bottino, Rosa; Ferlino, Lucia"
13807501,78,10.1007/s11042-019-7229-9,10,Springer Nature,"Algorithms are more and more pervading our everyday life: from automatic checkouts in supermarkets and e-banking to booking a flight online. Understanding an algorithmic solution to a problem is a very relevant activity to improve end-users' involvement. To this end, adopting a meta-design approach may help to support end-users to appropriate the design skills necessary for contributing to system design, in new and engaging modalities. By acquiring Computational Thinking (CT) skills (e.g., algorithmic thinking, abstraction), end-users will be able to understand and trust algorithms, while at the same time participate in the design and development of systems evolving in accordance with their needs. In this work, we focus on two different ways of improving CT skills: playfulness and collaboration. We introduce a game-based system, TAPASPlay, to foster CT skills and we report the results of an exploratory study with 18 users; our hypothesis is that learning CT through gameplay is effective and we tested it by involving participants in game sessions providing playful experience and collaborative learning. [ABSTRACT FROM AUTHOR] Copyright of Multimedia Tools & Applications is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Multimedia Tools & Applications,Fostering computational thinking through collaborative game-based learning.,"Turchi, Tommaso; Fogli, Daniela; Malizia, Alessio"
23848766,6,10.17083/ijsg.v6i4.319,4,Serious Games Society,"The development and assessment of computational thinking (CT) is garnering a lot of attention and research since the last decade. However, CT learning is perceived as a time-consuming and frustrating experience by many K-12 and university students. Hence, educators are coming up with various methodologies to make CT both accessible and engaging for learners, thus leading to a spurt in various game-based learning (GBL) approaches in this field, ranging from board games to educational robotic games. This paper strives to evaluate tabletop escape games as a potential tool to develop CT as a competency among K-12 learners and the assessment of its effectiveness in achieving the learning outcomes. To do this, the authors conducted a literature review of existing papers on tabletop games that use the theme of an escape game to develop and assess CT as a competency. Based on a systematic analysis of the existing literature, they conducted an analytical review of three papers on tabletop games in CT to identify the CT components being developed, the evaluation methods explained in them, the current limitations faced by the authors of these three papers and the possible ways to circumvent such limitations. This paper also covers the design aspects to be considered for the development of a CT-based educational escape game to support and evaluate this competency and its components. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Serious Games is the property of Serious Games Society and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Serious Games,Computational thinking development and assessment through tabletop escape games.,"Menon, Divya; Romero, Margarida; Viéville, Thierry"
02664909,38,10.1111/jcal.12723,6,Wiley-Blackwell,"Background: Computational thinking (CT) is regarded as an essential 21st‐century skill, and attempts have been made to integrate it into other subjects. Instructional approaches to CT development and assessment in the field of computer science have attracted global attention, but the influence of CT skills on other subject areas is under‐researched. Objective: Our goal is to investigate the transfer effects of CT in different subject areas and examine the educational characteristics of CT intervention approaches that promote the transfer of learning. Method: We carefully selected and reviewed 55 empirical studies from leading bibliographic databases and examined the transfer of CT using a meta‐analysis and a qualitative synthesis. Results and Conclusions: We identified and summarized these effects in the fields of mathematics, science, engineering and the humanities. A meta‐analysis of these studies identified a generally significant effect of the transfer of CT skills to other subject areas. We also explored the characteristics of CT interventions that aid the transfer of learning by qualitatively assessing the identified studies. The results of the review offer a holistic view of the trends in CT transfer research that can be used as a reference for both researchers and instructors. Lay Description: What is already known about this topic: Computational thinking (CT) has been developed into cross‐disciplinary literacy and can lead to innovations in various academic fields.There is a need for a systematic understanding of the transfer effects of CT to improve the influence of CT and promote CT integration across domains. What this paper adds: Our review identified several subject areas beyond computer science in which the transfer effects of CT were observed.Our analysis revealed that the transfer of CT has a significant positive effect on students' learning in areas beyond computer science.Our review synthesized a series of intervention guidelines that can promote the transfer of learning in CT education. Implications for practitioners: Research on the transfer of CT in engineering and non‐STEM domains is required for a more comprehensive understanding of CT skills.Instructional design in CT education should attend to the facilitation of the transfer of learning to maximize the benefits of CT acquisition. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,The transfer effects of computational thinking: A systematic review with meta‐analysis and qualitative synthesis.,"Ye, Jiachu; Lai, Xiaoyan; Wong, Gary Ka‐Wai"
18117295,26,10.1080/18117295.2022.2133739,3,Taylor & Francis Ltd,"Although there is a lot of interest in the development of computational thinking (CT) and the benefits it could have for every student, integrating it into science classrooms may be more difficult than traditional teaching. This can be very challenging for South African science teachers. Thus, there is an increasing need to prepare teachers and systematically engage them in professional development activities to help them learn, unlearn, relearn and restructure their thoughts, perceptions and attitudes towards integrating CT in science classrooms. This study explored teachers' perceptions and concerns about integrating CT in science teaching. Twenty-two science teachers from innercity secondary schools in South Africa were chosen to be part of this exploratory case study. Data were collected through take-home assignments and focus group discussions containing a series of open-ended questions. The concern-based adoption model was used as a lens to understand teachers' stages of concern. Data were analyzed using thematic analysis. It was found that sampled science teachers viewed CT as a valuable tool that can help promote learners' data management practices and problem-solving practices, especially in reducing complex problems to researchable problems. The findings also showed that teachers intend to integrate CT into their science classrooms by refining their existing practices. However, teachers showed high informational, personal and management-related concerns regarding integrating CT in South African science classrooms: they needed more practical and contextual ideas on strategically integrating CT in their daily lessons. Conversely, teachers showed limited concern at the unrelated, consequence, collaboration and refocusing stage. This suggests a need for teacher education programmes in South Africa to focus more acutely on training pre-service teachers on how to plan and design science instruction using computational thinking concepts and practices. [ABSTRACT FROM AUTHOR] Copyright of African Journal of Research in Mathematics, Science & Technology Education is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","African Journal of Research in Mathematics, Science & Technology Education",Teachers' Perceptions of and Concerns About Integrating Computational Thinking into Science Teaching After a Professional Development Activity.,"Ogegbo, Ayodele Abosede; Ramnarain, Umesh"
15391523,54,10.1080/15391523.2021.1922105,5,Taylor & Francis Ltd,"This qualitative case study was designed to explore pre-service teachers' computational thinking and programming skills in an educational technology course in which block-based programming was introduced in a teacher education program. 12 teacher candidates from different subject areas participated in the study. The findings show that participants' views about computational thinking along with their programming skills evolved over the semester. They were mainly involved pattern recognition, debugging and trial-and-error to program coding tasks. They also used simple codes within a context and implemented remixing to solve complex problems. It can be concluded that well-designed educational technology courses for programming might be effective even for pre-service teachers who are novice coders. Further research and implications for teacher education curricula are also discussed in the paper. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,An exploratory study of pre-service teachers' computational thinking and programming skills.,"Umutlu, Duygu"
03601315,216,10.1016/j.compedu.2024.105045,,Elsevier B.V.,"In recent years, the development of computational thinking (CT) has become integral to many school curricula worldwide. This has been associated with calls for computational thinking to be considered a '21St Century' competency, valuable to all students as a transferable process for solving problems and building understanding of human behaviour and systems. However, while computational thinking is a focus of most secondary school computer science curricula, proponents such as Jeanette Wing argue its relevance for younger students, indicating more work must be done investigating its development in early years' education. This study used a structured, problem-based curriculum supported by guided inquiry pedagogy, to explore 6 year old students' learning of basic computational thinking concepts and practices while coding programmable floor robots (Blue-bots and an iPad app). Results indicated improvement across the seven lessons in students' sequencing/algorithm authoring, error correction, and pattern recognition. Furthermore, they revealed evidence of higher order thinking such as identifying patterns in code, and how these can be transferred to help solve problems of different designs. While currently play-based approaches are used to introduce computational thinking concepts and practices in early years' education, results from this study suggest that more structured, problem-based methods should be seriously considered. Results challenge commonly understood developmental theories about what young children can and can't do, contextualised within the field of computer science, and hold implications for early years' teachers' professional knowledge and pedagogy if they are to promote their students' learning in this increasingly important area. Given rapid technological advancements such as artificial intelligence (AI) and increasingly earlier exposure of young children to digitally-mediated information, this study provides support for the earlier and more systematic introduction of basic digital literacy knowledge and skills in early years' education. • Original study using structured curriculum to teach very young students' computational thinking (CT) concepts and practices. • Considerable evidence was found indicating development of basic and more advanced CT concepts and practices. • Structured curricula should be (re)considered as an effective approach for teaching young students CT concepts and practices. • The early development of CT concepts and practices should be integral to contemporary digital literacy. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Advancing young students' computational thinking: An investigation of structured curriculum in early years primary schooling.,"Falloon, Garry"
03601315,215,10.1016/j.compedu.2024.105039,,Elsevier B.V.,"In the artificial intelligence age, cultivating young children's computational thinking (CT) has sparked tremendous attention. Programmable robotics is a developmental-appropriate and screen-free means that provides young children with great opportunities to learn programming and develop CT. However, it is reported that young children might have difficulties learning abstract CT concepts. As a helpful pedagogical facilitator, metaphors can help turn abstract concepts into more concrete and clear concepts that learners are familiar with. Therefore, this research proposed a metaphor-based robot programming (MRP) approach and explored its impact on young children's CT and behavioral patterns. A total of 118 children aged 5–6 were recruited in this experiment with two conditions: the experimental group adopted the metaphor-based robot programming (MRP) approach while the control group used the conventional robot programming (CRP) approach. Results revealed that children who adopted the MRP approach outperformed children who adopted the CRP approach on CT. In addition, behavioral analysis indicated that the proposed MRP approach could facilitate children's superior learning performance and more positive learning behaviors, so as to help them achieve learning objectives. Accordingly, this study can provide insightful guidance and inspiration for future research on effective programming teaching and CT development for young children. • A metaphor-based robot programming approach was proposed. • The approach aimed to facilitate young children's computational thinking. • An experiment was conducted in a kindergarten. • The approach improved young children's computational thinking. • The approach improved young children's positive learning behaviors. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,A metaphor-based robot programming approach to facilitating young children's computational thinking and positive learning behaviors.,"Zhang, Xinli; Chen, Yuchen; Hu, Lailin; Bao, Yiwei; Tu, Yun-Fang; Hwang, Gwo-Jen"
07356331,61,10.1177/07356331221121106,2,Sage Publications Inc.,"This study investigates how digital game co-creation promotes Computational Thinking (CT) skills among children in sub-urban primary schools. Understanding how CT skills can be fostered in learning programming concepts through co-creating digital games is crucial to determine instructional strategies that match the young students' interests and capacities. The empirical study has successfully produced a new checklist that can be used as a tool to describe the learning of CT skills when children co-create digital games. The checklist consists of 10 core CT skills: abstraction, decomposition, algorithmic thinking, generalisation, representation, socialisation, code literacy, automation, coordination, and debugging. Thirty-six 10–12 year-olds from sub-urban primary schools in Borneo participated in creating games in three separate eight-hour sessions. In addition, one pilot session with five participants was conducted. The game co-creation process was recorded to identify and determine how these young, inexperienced, untrained young learners collaborated while using CT skills. Analysis of their narratives while co-creating digital games revealed a pattern of using CT while developing the games. Although none of the groups demonstrated the use of all ten CTs, conclusively, all ten components of the CT were visibly present in their co-created digital games. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Mapping Computational Thinking Skills Through Digital Games Co-Creation Activity Amongst Malaysian Sub-urban Children.,"Othman, Mohd Kamal; Jazlan, Syazni; Yamin, Fatin Afiqah; Aman, Shaziti; Mohamad, Fitri Suraya; Anuar, Nurfarahani Norman; Saleh, Abdulrazak Yahya; Abdul Manaf, Ahmad Azaini"
22111662,27,10.1007/s10758-021-09529-y,4,Springer Nature,"One of the fundamental obstacles associated with technology integration into educational settings is classroom management problems. In this sense, it is important to delve into the crucial factors playing key role in classroom management in ICT assisted courses. In this study, the relationship between classroom management in technology-enriched courses, computational thinking (CT) and technological pedagogical content knowledge (TPACK) was investigated. In this study, in which the relational screening research model was used, a total of 125 volunteer teachers participated. Three instruments were used for data collection in this research and the obtained data were analyzed by Partial Least Squares Structural Equation Model. The findings show that the relative effect of TPACK and CT on classroom management is significant. Additionally, it has been found that CT has a significant impact on TPACK level. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",Modelling the Effect of TPACK and Computational Thinking on Classroom Management in Technology Enriched Courses.,"Saritepeci, Mustafa"
12460125,31,10.1080/12460125.2021.1943880,4,Taylor & Francis Ltd,"Despite of advances in computational methods for a variety of real-world problems, there is a lack of holistic educational approaches for developing Computational Thinking (CT) skills of students. The CT skills develop students' ability to design and implement solutions using information systems development process. This paper describes how a soft computing-based multi-faceted modelling approach for solving the interdisciplinary problem of community detection in social networks can be used for developing CT skills among students. We use Design Science Research (DSR) process to design the proposed educational framework. The proposed educational framework has been implemented using R programming environment. Evaluation and feedback of students who undertook a couple of sessions establish the viability of the proposed educational framework. [ABSTRACT FROM AUTHOR] Copyright of Journal of Decision Systems is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Decision Systems,A design-based pedagogical framework for developing computational thinking skills.,"Gupta, Samrat; Tiwari, Amit Anand"
15391523,54,10.1080/15391523.2021.1881844,4,Taylor & Francis Ltd,"The importance of developing individuals' computational thinking (CT) skills has given rise to many practices and research and development initiatives. Although there is a considerable volume of research on improving students' CT skills, remarkably little is known about teachers' design work to improve students' CT skills. This multiple case study aimed to explore high school computer science teachers' instructional design (ID) process. Data were collected through interviews, lesson plans, and classroom observations from three K-12 cases. The results showed that teachers' ID processes had both similarities; including the design steps, the analysis step predominance, and the interaction intensity between the stages, and differences; included the number of interactions and the connections within the stages. Moreover, teachers' beliefs about teaching and learning CT affected ID process. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,"Exploring high school computer science course teachers' instructional design processes for improving students' ""computational thinking"" skills.","Dagli, Zerrin; Sancar Tokmak, Hatice"
09535438,35,10.1093/iwc/iwac028,2,Oxford University Press / USA,"Computational thinking is an ability that has been considered essential for people living in a society mediated by technology. This ability can also be helpful to people with little or no experience with technology, for practicing basic Computational Thinking skills may help understanding how a technological device works and can be used. However, to the best of our knowledge, little research has addressed Computational Thinking and its relation with Digital Culture, especially for reducing the digital divide. In this article, we draw on the notion of Mental Models to relate Computational Thinking and Digital Culture. We claim that practicing basic Computational Thinking skills when exploring simple prototypes favors building Mental Models that are useful to understand and progress in the usage of technologies, contributing to developing a Digital Culture. To situate our discussion, we present a case study that engaged adults, in their initial stages of literacy, in activities that grew from basic ones, with a low-fidelity ATM prototype, to more complex ones with a functional ATM prototype. Evaluation methods used were voting, feedback, structured observation and unstructured interviews. Results suggested our approach is promising as participants gained confidence and increased autonomy as the activities progressed, using the experience and knowledge they obtained from previous activities to perform the next ones. [ABSTRACT FROM AUTHOR] Copyright of Interacting with Computers is the property of Oxford University Press / USA and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interacting with Computers,Computational Thinking and Mental Models: Promoting Digital Culture in the Youth and Adult Education.,"Ortiz, Julia S B; Moreira, Carolina; Menezes, Krissia; Ferrari, Bernardo; Junior, Deógenes Silva; Pereira, Roberto"
23848766,5,10.17083/ijsg.v5i2.248,2,Serious Games Society,"As a cognitive ability computational thinking describes a specific way of algorithmic reasoning building on concepts and processes derived from computer programming/coding. Recently, computational thinking was argued to be a fundamental and educationally relevant 21st century skill that should be fostered already in childhood. Accordingly, we developed three life-size board games - Crabs & Turtles: A Series of Computational Adventures - aimed at providing an unplugged and low-threshold introduction to computational thinking. In particular, the games aimed at introducing basic coding concepts and computational thinking processes to 8 to 9-year-old primary school children. In the current study, we first describe the design of the games in detail to explicate the development process and allow for reproducibility. We then report on a first empirical evaluation of feasibility and user experience of our educational board games in a twophase approach. We conducted quantitative analyses of player experience and qualitative feedback of adult student participants (Phase 1) and a sample of gamification experts and teachers (Phase 2). We examined users’ game experience with an adult population to ensure the game’s appropriateness. Results indicated overall positive game experience for all three games. Future studies would be desirable, which should evaluate player experience and learning outcomes in the primary target population of children. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Serious Games is the property of Serious Games Society and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Serious Games,Training Computational Thinking through board games: The case of Crabs & Turtles.,"Tsarava, Katerina; Moeller, Korbinian; Ninaus, Manuel"
15980170,19,10.7472/jksii.2018.19.2.57,2,Korean Society for Internet Information,"The 4th industrial revolution has brought innovation in the educational environment. The purpose of this study is to verify the educational effectiveness of smart learning environment especially with the computational thinking. A big data analysis was performed to confirm that computational thinking is the one to prepare the 4th industrial revolution. To teach computational thinking at university, educational design should be careful. This study verified the relationship between improvement of computational thinking ability and major of students with coding education. There was difference in effectiveness of the coding education depending on the major of students, it means students must be guaranteed to be educated by the differentiated coding education for different major. This study extracted factors of computational thinking through literature review. Thirteen research hypotheses were applied for the statistical analysis in R language. It was proved that expectation of class and improvement of abstraction ability and algorithmic thinking ability had mediation effect to the relationship between knowledge acquisition and problem-solving abilities. Based on this study, effectiveness of education can be improved, and it will lead to produce a lot of distinguished students who are ready for the 4th industrial revolution. [ABSTRACT FROM AUTHOR] Copyright of Journal of Korean Society for Internet Information is the property of Korean Society for Internet Information and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Korean Society for Internet Information,Examining the relationship between educational effectiveness and computational thinking in smart learning environment.,Oakyoung Han; Jaehyoun Kim
07356331,60,10.1177/07356331211060470,5,Sage Publications Inc.,"Scholars believe that computational thinking is one of the essential competencies of the 21st century and computer programming courses have been recognized as a potential means of fostering students' computational thinking. In tradition instruction, PFCT (problem identification, flow definition, coding, and testing) is a commonly adopted procedure to guide students to learn and practice computer programming. However, without further guidance, students might focus on learning the syntax of computer programming language rather than the concept of solving problems. This study proposes a peer-assessment-supported PFCT (PA-PFCT) approach for boosting students' computer programming knowledge and computational thinking awareness. A quasi-experiment was conducted on a computer programming course in a high school to evaluate its influence on students' learning achievement, computational thinking awareness, learning motivation, and self-efficacy. An experimental group of 51 students learned with the proposed approach, while a control group of 49 students learned with the traditional PFCT (T-PFCT) approach. The experimental results show that the proposed approach significantly enhanced the students' computational thinking awareness, learning motivation, and self-efficacy, while not having significant impacts on their computer programming knowledge test scores. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,"From Critique to Computational Thinking: A Peer-Assessment-Supported Problem Identification, Flow Definition, Coding, and Testing Approach for Computer Programming Instruction.","Fang, Jian-Wen; Shao, Dan; Hwang, Gwo-Jen; Chang, Shao-Chen"
07356331,60,10.1177/07356331211055379,4,Sage Publications Inc.,"Although abstraction is widely understood to be one of the primary components of computational thinking, the roots of abstraction may be traced back to different fields. Hence, the meaning of abstraction in the context of computational thinking is often confounded, as researchers interpret abstraction through diverse lenses. To disentangle these conceptual threads and gain insight into the operationalisation of abstraction, a systematic review of 96 empirical studies was undertaken. Analysis revealed that identifying features of entities, extracting relevant features, discovering patterns, creating rules and assembling the parts together were the core actions of abstraction. With the primary aim of simplifying practical procedures, abstraction was operationalised as the sophistication of a program, the matching of patterns, the creation of alternative representations, the transfer of solutions, the measurement of a learner's activity and reading program codes. There is an obvious need for researchers to align the conceptual meanings they have established of abstraction with the practical facts of operationalisation. The need to empirically validate emerging models and the implications for future research are discussed. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Unleashing the Potential of Abstraction From Cloud of Computational Thinking: A Systematic Review of Literature.,"Ezeamuzie, Ndudi O.; Leung, Jessica S.C.; Ting, Fridolin S.T."
15391523,54,10.1080/15391523.2020.1870250,3,Taylor & Francis Ltd,"The interest in computational thinking development at pre-university education stage is increasing. In this study, a meta-analysis was conducted to address two main objectives: (a) to analyze the effectiveness of empirical interventions in K-12 education for the development of Computational Thinking (CT); and (b) to identify and evaluate the variables that influences the effectiveness of the interventions. The analysis was especially focused on the intra-group effect sizes. Interventions show large effect size in the development of CT in the comparison between pre- and post-tests (g = 1.044). Among the different types of interventions, programming is the most efficient learning tool. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Computational thinking in K-12 education. An insight through meta-analysis.,"Merino-Armero, José Miguel; González-Calero, José Antonio; Cózar-Gutiérrez, Ramón"
09445846,29,10.1002/ckon.202100083,1,Wiley-Blackwell,"Experimento | 10+ is the Siemens Stiftung's teacher training program for STEM teachers at secondary schools. This program was recently converted into a blended learning format with alternating digital phases and face‐to‐face‐sessions. In the digital phases, contents about value education, inclusion and computational thinking are taught interactively. In the face‐to‐face‐phases, the teachers revive these contents and interrelate them to various practical experiments on the topics energy, environment and health. This article focuses on the digital module about computational thinking and in particular presents the operation of a self‐constructed pH‐meter using Arduino. (English) [ABSTRACT FROM AUTHOR] Die Fortbildung zu Experimento | 10+, einem Angebot der Siemens Stiftung für MINT‐Lehrkräfte der weiterführenden Schulen, wurde vor Kurzem in ein Blended‐Learning‐Format überführt. Digitale und Präsenzphasen wechseln sich dabei ab. In den digitalen Phasen werden Inhalte zu Wertebildung, Inklusion und Computational Thinking interaktiv vermittelt. In den Präsenzphasen greifen die Lehrkräfte diese Inhalte wieder auf und verknüpfen sie mit verschiedenen lebensnahen Experimenten zu den Themen Energie, Umwelt und Gesundheit. Im vorliegenden Beitrag wird vor allem auf das digitale Modul zu Computational Thinking eingegangen und hier insbesondere der Einsatz eines Selbstbau‐pH‐Meters unter Verwendung eines Arduinos vorgestellt. (German) [ABSTRACT FROM AUTHOR] Copyright of Chemkon - Chemie Konkret is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Chemkon - Chemie Konkret,Computational Thinking als Teil einer MINT‐Lehrkräftefortbildung im Blended‐Learning‐Format.,"Knie, Lisa; Schwarzer, Stefan"
09445846,29,10.1002/ckon.202100083,,Wiley-Blackwell,"Experimento | 10+ is the Siemens Stiftung's teacher training program for STEM teachers at secondary schools. This program was recently converted into a blended learning format with alternating digital phases and face‐to‐face‐sessions. In the digital phases, contents about value education, inclusion and computational thinking are taught interactively. In the face‐to‐face‐phases, the teachers revive these contents and interrelate them to various practical experiments on the topics energy, environment and health. This article focuses on the digital module about computational thinking and in particular presents the operation of a self‐constructed pH‐meter using Arduino. (English) [ABSTRACT FROM AUTHOR] Die Fortbildung zu Experimento | 10+, einem Angebot der Siemens Stiftung für MINT‐Lehrkräfte der weiterführenden Schulen, wurde vor Kurzem in ein Blended‐Learning‐Format überführt. Digitale und Präsenzphasen wechseln sich dabei ab. In den digitalen Phasen werden Inhalte zu Wertebildung, Inklusion und Computational Thinking interaktiv vermittelt. In den Präsenzphasen greifen die Lehrkräfte diese Inhalte wieder auf und verknüpfen sie mit verschiedenen lebensnahen Experimenten zu den Themen Energie, Umwelt und Gesundheit. Im vorliegenden Beitrag wird vor allem auf das digitale Modul zu Computational Thinking eingegangen und hier insbesondere der Einsatz eines Selbstbau‐pH‐Meters unter Verwendung eines Arduinos vorgestellt. (German) [ABSTRACT FROM AUTHOR] Copyright of Chemkon - Chemie Konkret is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Chemkon - Chemie Konkret,Computational Thinking als Teil einer MINT‐Lehrkräftefortbildung im Blended‐Learning‐Format.,"Knie, Lisa; Schwarzer, Stefan"
09445846,29,10.1002/ckon.202100083,,Wiley-Blackwell,"Experimento | 10+ is the Siemens Stiftung's teacher training program for STEM teachers at secondary schools. This program was recently converted into a blended learning format with alternating digital phases and face‐to‐face‐sessions. In the digital phases, contents about value education, inclusion and computational thinking are taught interactively. In the face‐to‐face‐phases, the teachers revive these contents and interrelate them to various practical experiments on the topics energy, environment and health. This article focuses on the digital module about computational thinking and in particular presents the operation of a self‐constructed pH‐meter using Arduino. (English) [ABSTRACT FROM AUTHOR] Die Fortbildung zu Experimento | 10+, einem Angebot der Siemens Stiftung für MINT‐Lehrkräfte der weiterführenden Schulen, wurde vor Kurzem in ein Blended‐Learning‐Format überführt. Digitale und Präsenzphasen wechseln sich dabei ab. In den digitalen Phasen werden Inhalte zu Wertebildung, Inklusion und Computational Thinking interaktiv vermittelt. In den Präsenzphasen greifen die Lehrkräfte diese Inhalte wieder auf und verknüpfen sie mit verschiedenen lebensnahen Experimenten zu den Themen Energie, Umwelt und Gesundheit. Im vorliegenden Beitrag wird vor allem auf das digitale Modul zu Computational Thinking eingegangen und hier insbesondere der Einsatz eines Selbstbau‐pH‐Meters unter Verwendung eines Arduinos vorgestellt. (German) [ABSTRACT FROM AUTHOR] Copyright of Chemkon - Chemie Konkret is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Chemkon - Chemie Konkret,Computational Thinking als Teil einer MINT‐Lehrkräftefortbildung im Blended‐Learning‐Format.,"Knie, Lisa; Schwarzer, Stefan"
07356331,60,10.1177/07356331211037757,2,Sage Publications Inc.,"Computational thinking (CT) has attracted significant interest among many educators around the globe. Despite this growing interest, research on CT and programming education in elementary school remains at an initial stage. Many relevant studies have adopted only one type of method to assess students' CT, which may lead to an incomplete view of student development on CT, while other studies employed small sample sizes, which may increase the chance of assuming a false premise to be true. Moreover, conventional programming courses typically have two limitations (e.g., limited student active learning and student low engagement). Given these gaps, this study investigates the effects of a theory-based (5E framework) flipped classroom model (FCM) on elementary school students' understanding of CT concepts, computational problem-solving performance, and perceptions of flipped learning. To achieve this, a pretest-posttest quasi-experimental study was conducted in a rural elementary school, including 125 students in the experimental group and 122 students in the control group. The results showed that the 5E-based FCM significantly improved student understanding of CT concepts and computational problem-solving abilities. The results also revealed positive student perception toward the FCM. The benefits and challenges of the 5E-based FCM are discussed. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Toward a 5E-Based Flipped Classroom Model for Teaching Computational Thinking in Elementary School: Effects on Student Computational Thinking and Problem-Solving Performance.,"Gao, Xuemin; Hew, Khe Foon"
22111662,28,10.1007/s10758-021-09565-8,1,Springer Nature,"Computational thinking skill is one of the basic skills required for every individual, such as reading and writing. For the development of CT, programming education is seen as the key. In the context of programming and CT relationship, it is very important to model individual characteristics and various affective variables with a holistic approach in the programming process. The purpose of this study is to determine and model the relationships of some individual characteristics, personal and affective variables for programming, with CT. One hundred and eighty-one middle school students participated in the implementation. As a result of the research, it was determined that there is a significant relationship between personal variables and attitude towards programming and interest in programming. On the other hand, it has been determined that there is no significant relationship between personal characteristics and self-efficacy for programming and the importance given to programming. In this model, the most influential predictor of attitude and interest towards programming was gender. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",Modeling of Relationship of Personal and Affective Variables With Computational Thinking and Programming.,"Yildiz Durak, Hatice; Saritepeci, Mustafa; Durak, Aykut"
07356331,60,10.1177/07356331221098793,8,Sage Publications Inc.,"The importance of computational thinking (CT) as a 21st-century skill for future generations has been a key consideration in the reforms of many national and regional educational systems. Much attention has been paid to integrating CT into the traditional subject classrooms. This paper describes a scoping review of learning tools for integrating CT and mathematics in current empirical studies published from 2015 to 2021. The review showed that most of the studies implemented CT-intensive Math-connected integration. Five major types of CT tools had been identified, i.e., digital tangibles, apps and games, programming languages, formative or summative assessments, and other technological tools. In many instances, the tools also provide functions of assessment of CT skills. The most assessed CT competencies were including algorithms and algorithmic thinking, abstraction, testing and debugging, loops, and sequences. Geometry and Measurement was the most assessed mathematics topic. Our scoping review is beneficial in the investigation of the literature on CT and mathematics education, as well as guides those who are interested in developing curriculum, programs, or assessments that involve the integration of CT and mathematics. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Tools and Approaches for Integrating Computational Thinking and Mathematics: A Scoping Review of Current Empirical Studies.,"Chan, Shiau-Wei; Looi, Chee-Kit; Ho, Weng Kin; Kim, Mi Song"
10613773,30,10.1002/cae.22529,5,Wiley-Blackwell,"Over the last two decades, computational thinking (CT) has gained importance in discussions about competencies that students require to deal with complex problems in a world shaped by digitalization. Therefore, schools and teachers should integrate CT into their instructional practices. Particularly, the STEM (Science, Technology, Engineering, and Mathematics) subjects are seen as a meaningful context for embedding CT. Yet, there are only a few professional development programs that address STEM teachers and how to integrate CT. Thus, in our study, we redesigned an in‐service teacher training program. The redesigned program was offered in a blended‐learning format, consisting of alternating digital and face‐to‐face phases. As part of the digital phases, an interactive online self‐learning module on CT was introduced to foster transdisciplinary competencies in the field of STEM to solve complex problems. To identify the perceptions and development of the participants of the training program and the online module on CT a within‐subject design was used with a questionnaire survey, conducted with a pre‐post‐follow‐up design. The first results of the ongoing survey indicate high satisfaction with both the program itself and the online CT module. At the beginning of the program, about two‐thirds of the participating teachers were completely unfamiliar with the term CT, nevertheless, interest in the new topic was high. It was shown the program was able to create initial awareness of the meaning and importance of CT. In addition, teachers who have engaged with CT during the intervention seem to use CT‐related practices more often in the classroom afterward. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,First experiences of integrating computational thinking into a blended learning in‐service training program for STEM teachers.,"Knie, Lisa; Standl, Bernhard; Schwarzer, Stefan"
08993408,33,10.1080/08993408.2022.2039488,3,Taylor & Francis Ltd,,Computer Science Education,Developing computational thinking collaboratively: the nexus of computational practices within small groups.,"Huang, Joey; Parker, Miranda C."
22558942,5,10.22364/bjmc.2017.5.4.05,4,University of Latvia,"New technological developments, the hyperconnectivity and globalization of the economy are raising important opportunities and challenges to the economy. The labour market must also address these opportunities and challenges, to evolve and accommodate future workers and businesses. The introduction of digital technologies in sectors of the economy allows devices and systems collaborate with each other and with other systems allowing to modify the products, processes and business models. The digitization of society and the economy poses challenges and creates opportunities for all sectors must adapt their processes, products and business models. Educational system cannot be left out of this future and new models like Computational Thinking (CT) can help achieve and better prepare future citizens. But when new skills and techniques such as CT are applied, it is necessary to evaluate them. In this paper a model for evaluating the skills and attitudes of CT for subjects of secondary education is presented. [ABSTRACT FROM AUTHOR] Copyright of Baltic Journal of Modern Computing is the property of University of Latvia and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Baltic Journal of Modern Computing,Assessment of Computational Thinking Notions in Secondary School.,"BILBAO, Javier; BRAVO, Eugenio; GARCÍA, Olatz; VARELA, Concepción; REBOLLAR, Carolina"
15391523,55,10.1080/15391523.2021.1962453,2,Taylor & Francis Ltd,"Computational Thinking (CT) is regarded as a crucial competency for all children in the 21st century. There are misconceptions about CT which confounds CT skills with programming skills. However, CT skills and programming skills are not the same. CT is a broader skillset of cognitive thinking that is integral to complex problem solving. Teaching and assessing CT should not only focus on computer programming. In this project, a new design-based learning (DBL) approach was proposed to improve elementary school students' CT. This approach not only included programming skills, but also integrated CT practices with authentic real-life contexts. Corresponding to recent conceptions of CT, we also assessed CT in a more comprehensive manner. A quasi-experiment study was carried out to assess how the intervention was associated with students' self-perceived CT skills using both quantitative and qualitative methods. In the treatment group, twenty-three fourth graders engaged in three curriculum units to create artifacts that solve specific real-world problems using LabPlus electronic kits and Scratch programming software. The control group took a traditional computer science class. Results revealed that students' self-perceived CT skills increased to a greater extent in the treatment group compared to the control group. In addition, we observed and interviewed three student cases in the treatment group to understand the potential learning effects of our new DBL approach. This study contributes to research in CT instruction, its application in STEM education in particular, and how it can be used in elementary level education in general. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Developing and Testing a Design-Based Learning Approach to Enhance Elementary Students' Self-Perceived Computational Thinking.,"Li, Xing; Xie, Kui; Vongkulluksn, Vanessa; Stein, David; Zhang, Yi"
00010782,64,10.1145/3418291,5,Association for Computing Machinery,"The article discusses changes in computer science from what is referred to a computation-centric model to data-centric, and the importance of adapting thinking patterns in order to drive technological innovation. It examines the looming end of Moore's Law as related to computer chip design and memory access. The article expounds upon computational thinking, historical thinking, data-centric thinking, and architectural thinking.",Communications of the ACM,"HCDA: From Computational Thinking to a Generalized Thinking Paradigm: As a new era in computing emerges, so too must our fundamental thinking patterns.",YUHANG LIU; XIAN-HE SUN; YANG WANG; YUNGANG BAO
02664909,38,10.1111/jcal.12720,6,Wiley-Blackwell,"Background: The idea of computational thinking is underpinned by the belief that anyone can learn and use the underlying concepts of computer science to solve everyday problems. However, most studies on the topic have investigated the development of computational thinking through programming activities, which are cognitively demanding. There is a dearth of evidence on how computational thinking augments everyday problem solving when it is decontextualized from programming. Objectives: In this study, we examined how computational thinking, when untangled from the haze of programming, is demonstrated in everyday problem solving, and investigated the features of such solvable problems. Methods: Using a multiple case study approach, we tracked how seven university students used computational thinking to solve the everyday problem of a route planning task as part of an 8‐week‐long Python programming course. Results and Conclusions: Computational thinking practices are latent in everyday problems, and intentionally structuring everyday problems is valuable for discovering the applicability of computational thinking. Decomposition and abstraction are prominent computational thinking components used to simplify everyday problem solving. Implications: It is important to strike a balance between the correctness of algorithms and simplification of the process of everyday problem solving. Lay Description: What is already known about this topic: Computational thinking is a problem solving skill.Computational thinking is different from programming.There is dearth of evidence on how computational thinking augments everyday problem solving. What this paper adds: Computational thinking practices are latent in everyday problem solving.Intentional restructuring of problems is required to uncover how computational thinking applies in solving them. Implications for practices: Decomposition and abstraction are critical in solving everyday problems.Computational thinking should be taught explicitly through everyday problems.Finding balance between the correctness of algorithm and simplification of the problem solving process is important. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Discovering computational thinking in everyday problem solving: A multiple case study of route planning.,"Ezeamuzie, Ndudi O.; Leung, Jessica S. C.; Garcia, Raycelle C. C.; Ting, Fridolin S. T."
07356331,60,10.1177/07356331211043547,3,Sage Publications Inc.,"As a dynamic and multifaceted construct, computational thinking (CT) has proven to be challenging to conceptualize and assess, which impedes the development of a workable ontology framework. To address this issue, the current article describes a novel approach towards understanding the ontological aspects of CT by using text mining and graph-theoretic techniques to elucidate teachers' perspectives collected in an online survey (N = 105). In particular, a hierarchical cluster analysis, a knowledge representation method, was applied to identify sub-groups in CT conceptualization and assessment amongst teachers. Five clusters in conceptualization and two clusters in assessment were identified; several relevant and distinct themes were also extracted. The results suggested that teachers attributed CT as a competence domain, relevant in the problem- solving context, as well as applicable and transferrable to various disciplines. The results also shed light on the importance of using multiple approaches to assess the diversity of CT. Overall, the findings collectively contributed to a comprehensive and multi-perspective representation of CT that refine both theory and practice. The methodology employed in this article has suggested a minor but significant step towards addressing the quintessential questions of ""what is CT?"" and ""how is it evidenced?"". [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Teachers' Ontological Perspectives of Computational Thinking and Assessment: A Text Mining Approach.,"Lai, Rina P.Y."
09241868,27,10.1007/s11257-017-9187-0,1,Springer Nature,"Learner modeling has been used in computer-based learning environments to model learners' domain knowledge, cognitive skills, and interests, and customize their experiences in the environment based on this information. In this paper, we develop a learner modeling and adaptive scaffolding framework for Computational Thinking using Simulation and Modeling (CTSiM)-an open ended learning environment that supports synergistic learning of science and Computational Thinking (CT) for middle school students. In CTSiM, students have the freedom to choose and coordinate use of the different tools provided in the environment, as they build and test their models. However, the open-ended nature of the environment makes it hard to interpret the intent of students' actions, and to provide useful feedback and hints that improves student understanding and helps them achieve their learning goals. To address this challenge, we define an extended learner modeling scheme that uses (1) a hierarchical task model for the CTSiM environment, (2) a set of strategies that support effective learning and model building, and (3) effectiveness and coherence measures that help us evaluate student's proficiency in the different tasks and strategies. We use this scheme to dynamically scaffold learners when they are deficient in performing their tasks, or they demonstrate suboptimal use of strategies. We demonstrate the effectiveness of our approach in a classroom study where one group of 6th grade students received scaffolding and the other did not. We found that students who received scaffolding built more accurate models, used modeling strategies effectively, adopted more useful modeling behaviors, showed a better understanding of important science and CT concepts, and transferred their modeling skills better to new scenarios. [ABSTRACT FROM AUTHOR] Copyright of User Modeling & User-Adapted Interaction is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",User Modeling & User-Adapted Interaction,Learner modeling for adaptive scaffolding in a Computational Thinking-based science learning environment.,"Basu, Satabdi; Biswas, Gautam; Kinnebrew, John"
07356331,60,10.1177/07356331211039961,3,Sage Publications Inc.,"Many countries have incorporated computational thinking (CT) and programming languages into their science and technology courses. Students can improve their CT ability by learning programming languages. Moreover, situated learning enables students to generate knowledge and master problem-solving skills through interaction with situations. This study incorporated Webduino learning and the situated learning strategy into a programming course and analyzed its impact on high school students' CT ability, learning motivation, and course satisfaction. A quasi-experimental research method was adopted, wherein the experimental group was subjected to the situated learning strategy and the control group was subjected to a traditional teaching method. The study results revealed that integrating Webduino programming with situated learning could effectively improve five categories of CT skills; moreover, the activity models of situated learning enhanced the value and expectation dimensions of learning motivation. In addition, satisfaction with the course content and self-identity slightly improved. However, because teachers were required to elaborate on stories to promote learner engagement with life situations, the time available for programming was limited. Thus, no significant difference was observed in teaching satisfaction. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,"Combining Webduino Programming With Situated Learning to Promote Computational Thinking, Motivation, and Satisfaction Among High School Students.","Wu, Ting-Ting; Chen, Jian-Ming"
07356331,60,10.1177/07356331211035182,2,Sage Publications Inc.,"In this work, we studied the influence of different programming approaches on the development of students' computational thinking (CT) skills, the programming experience and gender differences in CT development were also discussed. A total of 158 junior high school students and one teacher participated in the study over 5 months. The sample students were divided into four experimental groups in four single or combined programming approaches (i.e., plugged-in, unplugged, unplugged first, and plugged-in first) and one control group without programming. Data sources included the results of four CT tests, as well as interviews with the teacher and surveys with 24 representative participants. The results showed that the four programming approaches can effectively improve students' CT skills and can be retained after two months. Among them, the form of implementing unplugged activities before plugged-in can most effectively improve CT skills, and can better weaken the impact of previous programming experience. Finally, the qualitative analysis results provided insights into the process of programming and CT education. These findings will provide implications for the introduction of CT in junior high school, and help expand students' participation in computing. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Single or Combined? A Study on Programming to Promote Junior High School Students' Computational Thinking Skills.,"Sun, Lihui; Hu, Linlin; Zhou, Danhua"
15391523,54,10.1080/15391523.2020.1834474,2,Taylor & Francis Ltd,"Computational thinking (CT) has been advocated as an essential problem solving skill students need to develop. Emphasizing on CT applied in both programming and everyday contexts, we developed a humanoid robotics curriculum and a computerized assessment instrument. We implemented the curriculum with six classes of 125 fifth graders. Quantitative methods were used to compare students' performance from pretest to posttest. Learning analytics techniques were applied to examine students' problem solving processes. The results showed that students' CT performance improved in both programming and everyday reasoning contexts and that the curriculum benefited students with varied initial performance. The study shed light on how to connect and assess CT in everyday reasoning and programming contexts. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Connecting computational thinking in everyday reasoning and programming for elementary school students.,"Shen, Ji; Chen, Guanhua; Barth-Cohen, Lauren; Jiang, Shiyan; Eltoukhy, Moataz"
21580502,78,,8,International Technology & Engineering Educators Association,"The article discusses methods of fostering computational thinking. Topics includes the hands-on and design-based learning environments provided in engineering and technology classrooms, addressing core engineering concepts in electronics using programmable electronic textiles, and the instructional context of wearable technologies to develop computational thinking skills and electrical engineering capabilities with enhancing the socially-connected relevance to learning.",Technology & Engineering Teacher,integrating computational thinking through wearable technologies and prorammable e-textiles.,"Strimel, Greg J.; Morehouse, Abby; Bartholomew, Scott R.; Swift, Colin; Woessner, Jonathan"
03601315,220,10.1016/j.compedu.2024.105126,,Elsevier B.V.,"Recent studies identify Self-Regulated Learning (SRL) as a key factor in enhancing cognitive development, particularly within Computational Thinking (CT) literature. However, research gaps remain in understanding how SRL and CT interact from a developmental perspective. Our study designed a program with tailored animations and worksheets to specifically foster students' learning and cognitive development. Using a mixed-methods approach, we administered surveys among 1235 students from 29 Hong Kong primary schools to investigate a dynamic learning system comprising SRL and CT in a large-scale CT program. Additionally, semi-structured interviews were conducted with 15 students to further probe insights. Quantitative findings revealed a mutually reinforcing relationship in the dynamic system, suggesting that higher SRL skills enhance cognitive CT abilities, and vice versa. Complementing these results, qualitative findings showed that integrating animations and worksheets into the CT program significantly boosted students' SRL and cognitive development. These findings have significant implications for educational practices and curriculum design. Schools should consider implementing SRL strategies, such as proactive goal setting and reflective evaluation, within their curricula to promote students' cognitive development. Furthermore, strategic investments in educational technology, including collaborations with EdTech developers, are essential to create effective, pedagogically sound tools that enhance learning outcomes. These insights provide valuable guidance for creating a supportive SRL environment that fosters cognitive development in primary school education. • Studied self-regulated learning 's developmental dynamics with cognition. • Investigated using a mixed method to a dynamic learning system comprising SRL and CT in a program. • Revealed a reinforcing relationship between SRL and cognitive CT abilities over time. • Discovered positive impacts of educational tools on cognitive CT abilities. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Dynamic interplays between self-regulated learning and computational thinking in primary school students through animations and worksheets.,"Kong, Siu-Cheung; Wang, Yi-Qing"
07356331,60,10.1177/07356331211057143,5,Sage Publications Inc.,"This paper examined the effect of the Unplugged Programming Teaching Aids (UPTA) on students' computational thinking and classroom interaction. A set of UPTA was created and used in a primary school in southern China. A total of 48 students aged 6–8 were assigned to two classes, with the same instructor and learning materials, but only the treatment group was provided with the UPTA. Both groups were tested on computational thinking ability, children's concrete operation status, degree of ego-centricity, and in-classroom interaction. Results indicated that the children aged 6–8 years old could classify things according to two kinds of criteria at the same time, but their cognitive style was still ego-centered and they found it difficult to deal with problems from a third-party perspective, no matter whether in the treatment group or the control group. However, students in the treatment group achieved significantly higher scores on the test of computational thinking and were more engaged in the classroom interaction patterns. These findings provide evidence of the positive effect of the UPTA on promoting children's computational thinking by guiding them to decompose and solve problems, as well as enhancing their interaction and communication in the classroom, so as to transform from simple imitation to collaborative inquiry. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Effect of Unplugged Programming Teaching Aids on Children's Computational Thinking and Classroom Interaction: with Respect to Piaget's Four Stages Theory.,"Zhan, Zehui; He, Wenchang; Yi, Xitian; Ma, Shuyao"
07356331,60,10.1177/07356331211051043,5,Sage Publications Inc.,"This study aimed to develop the Computational Thinking Test for Elementary School Students (CTT-ES) to assess young children's CT competencies in non-programming contexts and also examine the relationship between CT competencies and CT dispositions. A survey including a pool of CTT-ES candidate items and the Computational Thinking Scale (CTS) was administered to 631 elementary school students. Rasch model of the Item Response Theory and the discrimination analysis of the Classical Testing Theory were conducted for item analyses. Pearson's correlation analyses and hierarchical multiple regression analyses were used to examine the relationships between CTT-ES and CTS scores. The results showed that the final CTT-ES including 16 items had a good fitness, discrimination, and reliability to evaluate elementary students' domain-general CT competencies. The convergent validity of CTT-ES was confirmed by its significant correlations with the CTS scores. The significant regression model not only showed students' CT competencies can be predicted by their CT dispositions but also supported The Developmental Model of CT. This study provided a valid and reliable tool for assessing young children's CT abilities. It also furthered our understanding about the developmental orders of CT abilities and contributed to the theoretical construction of CT. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Development and Validation of the Computational Thinking Test for Elementary School Students (CTT-ES): Correlate CT Competency With CT Disposition.,"Tsai, Meng-Jung; Chien, Francis Pingfan; Wen-Yu Lee, Silvia; Hsu, Chung-Yuan; Liang, Jyh-Chong"
10494820,30,10.1080/10494820.2020.1722712,8,Taylor & Francis Ltd,"The purpose of the qualitative study was to investigate experiences of first-time board-game users (29 elementary school students) in playing ""Coding Ocean"" (CO) to learn computational thinking. CO was a two-team strategy board game and was designed for children developing basic understanding of computational thinking. Participation observations and interviews were conducted to explained students' novice player experiences, learned CT after their first-time exposures to CO, and usability feedback to the board game. The major findings of this study were two- fold. First, students were motivated and engaged, using board games to learn computational thinking. The winning strategies that students generated throughout the game promoted higher-order computational thinking. Second, students comprehended and interpreted the conceptual elements of computational thinking well after playing the game, having only a fraction of misconceptions. Overall, novice young players' experience were positive, and they provided usability feedback and direction to improving CO. We suggest the game designers in providing supporting elements such as table masters training and course-bundle packages, and developing a series of contextual orientations that will engage novice players. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Novice young board-game players' experience about computational thinking.,"Chen, Ken-Zen; Chi, Hsiao-Han"
07356331,60,10.1177/07356331211027387,1,Sage Publications Inc.,"There are increasing calls to introduce computational thinking in schools; the arguments in favor call upon research suggesting that even kindergarten children can successfully engage in coding. This contribution presents a cross-sectional study examining the coding practices and computational thinking of fifty-one primary school children using the ScratchJr software; children were organized in two cohorts (Cohort 1: 6–9 years old; Cohort 2: 10–12 years old). Each cohort participated in a six-hour intervention, as part of a four-day summer club. During the intervention children were introduced to ScratchJr and were asked to collaboratively design a digital story about environmental waste management actions, thus adopting a disciplinary perspective to computational thinking. Data analyses examined children's final artifacts, in terms of coding practices and the level of computational thinking demonstrated by each cohort. Furthermore, analysis of selected groups' storyboard interviews was used to shed light on differences between the two cohorts. Results are presented and contrasted across the two age cohorts via a developmental perspective. The findings of this study can be useful in considering the instructional support that is necessary to scaffold the development of primary school children's coding practices and computational thinking. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,A Cross-Sectional Study Investigating Primary School Children's Coding Practices and Computational Thinking Using ScratchJr.,"Kyza, Eleni A.; Georgiou, Yiannis; Agesilaou, Andria; Souropetsis, Markos"
07356331,60,10.1177/07356331211017794,1,Sage Publications Inc.,"A prior study developed the Computational Thinking Scale (CTS) for assessing individuals' computational thinking dispositions in five dimensions: decomposition, abstraction, algorithmic thinking, evaluation, and generalization. This study proposed the Developmental Model of Computational Thinking through validating the structural relationships among the five factors of the CTS. To examine the model, a questionnaire including the CTS was administered to 472 middle school students. A confirmatory factor analysis was used to confirm the construct of the measurements, and a PLS-SEM analysis was used to validate the structural relationships among the factors. The results confirmed that the 19-item CTS has good item reliability, internal consistency, and construct reliability for measuring computational thinking (CT). In the Developmental Model of CT, decomposition and abstraction significantly predict all other three CT dispositions, suggesting that they are the two fundamental factors required for CT development. Moreover, a significant linear prediction path was shown starting from algorithmic thinking, evaluation, until generalization. Thus, a multi-level model was confirmed for the conceptual framework of CT. This model suggests a possible sequence for CT development which may provide a guideline for the teaching objectives of CT for different learning stages in different school levels. Decomposition and abstraction are especially suggested to be emphasized in school curricula before teaching algorithmic thinking or algorithm designs. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Structural Validation for the Developmental Model of Computational Thinking.,"Tsai, Meng-Jung; Liang, Jyh-Chong; Lee, Silvia Wen-Yu; Hsu, Chung-Yuan"
07380569,39,10.1080/07380569.2022.2037295,1,Taylor & Francis Ltd,"This study explored whether the computational thinking skills of early elementary-aged students be positively impacted by participation in a robotics-based, classroom intervention. Action research was used to examine the impact of a multifaceted, constructionist, robotics-based intervention on 37 second and third grade students at an elementary school in the Southeastern United States. This intervention was found to have a positive impact on students' computational thinking skills. This study provides practitioners with an easy to implement, teacher-friendly intervention that can be integrated into elementary classrooms to positively impact student computational thinking skills. [ABSTRACT FROM AUTHOR] Copyright of Computers in the Schools is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in the Schools,Increasing Elementary Students' Computational Thinking Skills Using a Multifaceted Robotics-Based Intervention.,"Hudson, Mary-Alice; Baek, Youngkyun"
10613773,30,10.1002/cae.22440,1,Wiley-Blackwell,"In this paper, an elementary exercise that can strengthen computational thinking in engineering analysis and design is outlined and discussed. The exercise is a simple finite element assignment designed for the M.Sc. students in Mechanical and Civil Engineering. It comprises a two‐member frame with a variety of loading that can be solved manually without using any computer programming. Individual data is allocated to each student, and they have been asked to report their results like reaction forces, reaction moments and stresses. Thereafter they have modelled the same frame structure in commercially available finite element method (FEM) software ABAQUS, from which a substantial output file is created for such a simple problem. In the final stage, each student highlights the ABAQUS results that can be compared and commented upon with the results obtained from their manual calculations. Since the assignment is individual, it provides a justifiable connection between computational thinking of an individual mind, with printed outputs of a complicated FEM software. Implementing this assignment in M.Sc. finite element course at Aberdeen University has been very successful. This enabled individual students to relate their computational thinking, with the results of complicated FEM software in engineering. It is concluded that such exercises can stimulate computational thinking in engineering education. Moreover, they can be used in other engineering fields where FEM is applicable, either at the university level or Professional and Career Development courses in engineering. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,An elementary finite element exercise to stimulate computational thinking in engineering education.,
07356331,59,10.1177/07356331211004048,8,Sage Publications Inc.,"As schools and districts across the United States adopt computer science standards and curriculum for K-12 computer science education, they look to integrate the foundational concepts of computational thinking (CT) into existing core subjects of elementary-age students. Research has shown the effectiveness of teaching CT elements (abstraction, generalization, decomposition, algorithmic thinking, debugging) using non-programming, unplugged approaches. These approaches address common barriers teachers face with lack of knowledge, familiarity, or technology tools. Picture books and graphic novels present an unexplored non-programming, unplugged resource for teachers to integrate computational thinking into their CT or CT-integrated lessons. This analysis examines 27 picture books and graphic novels published between 2015 and 2020 targeted to K-6 students for representation of computational thinking elements. Using the computational thinking curriculum framework for K-6, we identify the grade-level competencies of the CT elements featured in the books compared to the books' target age groups. We compare grade-level competencies to interest level to identify each CT element representation as ""foundational,"" ""on-target,"" or ""advanced."" We conclude that literature offers teachers a non-programming unplugged resource to expose students to CT and enhance CT and CT-integrated lessons, while also personalizing learning based on CT readiness and interest level. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Analysis of Computational Thinking in Children's Literature for K-6 Students: Literature as a Non-Programming Unplugged Resource.,"Ballard, Evan David; Haroldson, Rachelle"
16666046,17,,1,Journal of Computer Science & Technology,"At present there are different public and private companies that support the Colombian government in the initiative of taking the technological processes and of research and innovation to the classrooms in order to generate a knowledge that propitiates great changes in the society and that at the same time helps to mitigate some national problematic. This generates great changes inside the school and the student, achieving significant learning in various areas of knowledge such as environmental, physical, electronic, mathematics, programming, and mechanics, among others. This article presents some strategies, such as robotics clubs, and how their problem-based teaching methodology collaborates in the development of competences of various types and the achievement of computational thinking in students. In addition, mention is made of the results of the project developed at the Pascual Bravo Industrial Technical Institute in Medellin-Colombia, which was presented at the XXII CACIC Congress in Argentina [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Science & Technology (JCS&T) is the property of Journal of Computer Science & Technology and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Science & Technology (JCS&T),Robotics Based Strategies to Support Computational Thinking: The Case of the Pascual Bravo Industrial Technical Institute.,"García, Maritza A.; Deco, Claudia; Collazos, César A."
09296212,93,10.1007/s11277-016-3679-9,1,Springer Nature,"Computational thinking (CT), which is the core of the Computer Science field, is an essential thinking process to solve problems effectively and efficiently using computing systems. Learners must be able to design algorithms, identify the appropriate algorithm design skill for a specific problem, and apply it to the problem. Aiming to stimulate learners' interest in learning algorithm design skills, we developed puzzle-based algorithm learning program that has a user-friendly format tailored to real-world scenario. We investigated the effect of this puzzle-based algorithm learning program on learners' CT abilities. The results provide evidence that puzzle based algorithm learning program is effective for developing learners' CT. The study suggests that puzzle based algorithm learning is worth as a learning model for improving CT of learners. [ABSTRACT FROM AUTHOR] Copyright of Wireless Personal Communications is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Wireless Personal Communications,Puzzle Based Algorithm Learning for Cultivating Computational Thinking.,"Choi, Jeongwon; Lee, Youngjun; Lee, Eunkyoung"
0144929X,36,10.1080/0144929X.2016.1188415,1,Taylor & Francis Ltd,"The results of this study indicated that design-based learning (DBL) improves computational thinking (CT) in a sample of elementary school students. The experiment consisted of participants using the Scratch Program and Creative Computing Guidebook, both developed by the MIT (Massachusetts Institute of Technology) media laboratory, for a total of 15 hours. An experimental group and a control group were formed and consisted of fourth to sixth graders. DBL was applied to the experimental group, while a traditional, direct method of teaching was applied to the control group. The experiment was designed to examine several aspects of learning: self-efficacy, self-interest, and self-CT. Moreover, we compared changes in students’ perceptions of computers and analysed differences in students’ responses between the two groups according to each of the steps of DBL. Then, we verified the effects of DBL by examining the progress of each group and the differences between the two groups. At the end of the experiment, we found that both groups showed enhanced self-efficacy, self-interest, and self-CT. However, the experimental group had a greater number of significant positive changes than the control group did in all areas (p < .01). In conclusion, the findings presented herein demonstrated that applying DBL is more effective for improving CT than traditional methodologies are. [ABSTRACT FROM PUBLISHER] Copyright of Behaviour & Information Technology is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Behaviour & Information Technology,Effect of design-based learning on improving computational thinking.,"Jun, SooJin; Han, SeonKwan; Kim, SooHwan"
18657923,18,10.3991/ijim.v18i12.46847,12,International Journal of Interactive Mobile Technologies,"Applying digital technologies in education has been proven to have several positive impacts on teaching and learning. Digital twins have the potential to revolutionize education by offering immersive and interactive learning experiences. They can simulate virtual environments, enabling students to conduct experiments, practice techniques, and observe outcomes in a safe and cost-effective setting, particularly when access to physical laboratories is limited or expensive. This work proposes a learning management model that applies cognitive apprenticeship learning theory as a framework for learning digital twins to enhance the programming of a smart agriculture system and computational thinking skills. The model consists of three parts: input, learning process, and output with feedback. The input phase includes setting learning objectives, analyzing learners, determining learning content, planning learning activities, and utilizing a digital twin virtual laboratory space for experimenting in the development of a smart agriculture system. The learning process involves engaging students in programming and problem-solving tasks by offering expert guidance and support in computationally solving problems. The achievement of learning outcomes and practices is included in the output and feedback sections. After evaluation, five experts in this subject agreed that the learning management model was at the most appropriate level. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,Digital Twins-Based Cognitive Apprenticeship Model in Smart Agriculture.,"Thipphayasaeng, Phimphan; Piriyasurawong, Pallop; Phanichsiti, Sant"
26736470,4,10.3390/digital4020023,2,MDPI,"This article aims to explore, investigate, and determine the prerequisites that learners (students) should possess for participating in and being adequately benefitted from digital (robotics-enabled) K–12 STEM education offered through intuitive human–robot interaction. We selected 23 middle school mathematics and science teachers who received training on how to design, develop, and implement robotics-enabled lessons. The teachers then implemented robotics-enabled lessons in actual classroom settings, and separately responded to a survey based on their training, classroom experiences and observations, and self-brainstorming. We derived a set of prerequisite knowledge, skills, and abilities, including their relative importance for the students by analyzing the survey responses. The results showed that the students should not only possess prerequisite knowledge in the subject matter, but also possess behavioral, social, scientific, cognitive, and intellectual skills and abilities to participate in and receive benefits from robotics-enabled human–robot interactive digital STEM education. Out of the many prerequisites, the computational thinking ability of students was identified as one of the most required prerequisites to participate in robotics-enabled digital STEM education. To validate the derived prerequisites, teachers separately assessed the fulfillment of prerequisites by 38 participating students, and the results showed user acceptance, effectiveness, and suitability of the derived prerequisites set. We also identified a set of limitations of the studies and proposed action plans to enable students to meet the prerequisites. The results presented herein can help determine required instructional efforts and scaffolds before implementing robotics-enabled digital STEM lessons, and thus foster incorporating technology-enhanced (robotics-enabled) digital STEM education into K–12 curricula. [ABSTRACT FROM AUTHOR] Copyright of Digital is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Digital,Digital K–12 STEM Education through Human–Robot Interaction: Investigation on Prerequisites.,"Rahman, S. M. Mizanoor"
20763417,14,10.3390/app14114662,11,MDPI,"The unprecedented development of artificial intelligence (AI) makes it possible for computers to imitate and surpass human intelligence (HI). Hybrid intelligence is the result of the co-evolution of AI and HI and has huge application potential in promoting the sustainable development of human society. This study starts from the similarities and differences between biological neural networks and artificial neural networks, compares the cognitive foundations of human intelligence and artificial intelligence, highlights the difference and connection between AI and HI, and puts forward the necessity and inevitability of their co-evolution to achieve hybrid intelligence with complementary advantages. Hybrid intelligence stands to become the pivotal force driving purposeful and planned sustainable creative behavior in the artificial intelligence era. This study proposes a design cognitive creation model based on human–computer collaboration that considers computational design thinking as the central concept. Moreover, the paradigm shift of design under hybrid intelligence intervention are explored from five aspects: ""tool evolution"", ""response mode"", ""output result"", ""iterative optimization"" and ""system innovation"". Finally, this article constructs a creative intervention mechanism of design creation driven by hybrid intelligence and discusses its role playing in the design activities of sustainable multiverse construction in the future. The proposal of the multiverse model transcends the confines of the metaverse's virtual worldview and embraces sustainable development for value guidance. It advocates a future trajectory for humanity that hinges on technological progress, fostering a prosperous, balanced, and harmonious coexistence between the natureverse, socialverse, and digitalverse. This approach is not only rational and scientific, but also inherently sustainable. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),Hybrid Intelligence: Design for Sustainable Multiverse via Integrative Cognitive Creation Model through Human–Computer Collaboration.,"Liu, Yuqi; Fu, Zhiyong"
22372903,9,,2,FACS Servicos Educacionais S.A.,"This paper presents a automatization of generation and evaluation of exercises in exists environment to teach computational thinking. The Java language was used for development and the last version of the environment. The Dijkstra algorithm was used to find the minimum way among the objectives of the map. The combination of minimum ways is transform in a sequence of instructions to execute the route generating the template of exercise. The evaluation compares the results obtained by the student with the template. After the tests realized with children, it has a result that they feel motivated to found the better solution in the exercises because the platform has a template for comparision. (English) [ABSTRACT FROM AUTHOR] Este artigo apresenta a automatização da geração e correção de exercícios em ambiente já existente para o ensino do pensamento computacional. Para o desenvolvimento, foi utilizada a última versão deste ambiente desenvolvido na linguagem Java. O algoritmo de Dijkstra foi utilizado para encontrar os caminhos mínimos entre os objetivos do mapa. A combinação de caminhos de menor tamanho é transfor¬mada em uma sequência de instruções para executar esse percurso, gerando o gabarito do exercício. A correção com¬para os resultados obtidos pelo aluno com o gabarito. Após testes realizados com crianças, teve-se como resultado que essas elas se sentiram motivadas a buscar melhores soluções nos exercícios por possuir um gabarito com a comparação. (Portuguese) [ABSTRACT FROM AUTHOR] Copyright of Computing & System Journal (C&S) / Revista de Sistemas e Computação (RSC) is the property of FACS Servicos Educacionais S.A. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computing & System Journal (C&S) / Revista de Sistemas e Computação (RSC),Geração automatizada de gabarito e correção de exercícios em plataforma para o ensino do pensamento computaciona.,"Xavier, Francisca Edyr; de Araújo Kohler, Luciana P.; Mattos, Mauro Marcelo; Ugarte, Heitor; Santos, Bruno F. F.; Fronza, Leonardo"
21580502,78,,5,International Technology & Engineering Educators Association,"This article, through the C-Boat lesson model, shows how an engineering design task can promote computational thinking in an engineering design context. [ABSTRACT FROM AUTHOR] Copyright of Technology & Engineering Teacher is the property of International Technology & Engineering Educators Association and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Technology & Engineering Teacher,fostering computational thinking in technology and engineering education: an unplugged hands-on engineering design approach.,Euisuk Sung
07356331,60,10.1177/07356331211057819,6,Sage Publications Inc.,"This study describes the development and validation process of a computational thinking (CT) test for adults. The team designed a set of items and explored a subset of those through two qualitative pilots. Then, in order to provide validity evidence based on the test content, a team of 11 subject-matter experts coded the initial pool of items using two different systems of categories based on CT components and contents. Next, the items were piloted on a sample of 289 participants, 137 experts in CT, and 152 novices. After a series of confirmatory factor analyses, a unidimensional model that represents algorithmic thinking was adopted. Further analyzing the psychometric quality of the 27 items, 20 of them with excellent reliability indices were selected for the test. Thus, this study provides a tool to evaluate adults' CT: the Algorithmic Thinking Test for Adults (ATTA), which was developed according to psychometric standards. This article also reflects on the nature of CT as a construct. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Assessing Computational Thinking: Development and Validation of the Algorithmic Thinking Test for Adults.,"Lafuente Martínez, Marc; Lévêque, Olivier; Benítez, Isabel; Hardebolle, Cécile; Zufferey, Jessica Dehler"
10613773,30,10.1002/cae.22442,1,Wiley-Blackwell,"This study investigated the effect of two technology‐enhanced learning methods (an adaptive educational computer game vs. a PowerPoint presentation with multimedia) on learners with different prior learning attitudes and knowledge regarding skills, conceptual knowledge, and overall knowledge of computational thinking (CT). Data from 70 students aged 11–12 were analysed using factorial multivariate analysis of covariance and analysis of covariance. Our findings revealed that while effective in fostering conceptual knowledge of CT (such as sequence, loop, and conditional), the conventional technology‐enhanced learning approach falls short when it comes to promoting CT skills (such as pattern recognition and debugging). The game approach, however, could simultaneously promote CT skills and conceptual knowledge, leading to improvement in the overall knowledge of CT. Additional analysis showed that learners with different prior knowledge and learning attitudes made a higher improvement using the adaptive game in terms of skills, conceptual knowledge, and overall knowledge of CT, especially for medium and lower prior knowledge learners that did not have a very high prior learning attitude. Consequently, to promote CT in primary school students, educators can employ computer game approaches that not only can foster both skills and conceptual knowledge of CT but also more effectively assist students with lower prior learning attitudes and knowledge. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Effects of technology‐enhanced learning approaches on learners with different prior learning attitudes and knowledge in computational thinking.,
07356331,59,10.1177/0735633121994070,7,Sage Publications Inc.,"Due to the interdisciplinary nature of robotics, more and more attention has been paid to its effectiveness in the field of education in recent years. This systematic review evaluated existing studies in improving K-12 students' computational thinking and STEM attitudes. Research articles published between 2010 and 2019 were collated from major databases according to six criteria, and 17 studies were eligible. A meta-analysis was conducted to evaluate the effectiveness of educational robots in terms of standardized mean differences (SMD) or mean differences (MD) of test scores as outcome measures. The overall effect size was medium (SMD = 0.46, 95% CI: 0.23–0.69). Subgroup analysis found that some groups to have better effectiveness. Specifically, the effect of STEM attitudes (SMD = 0.01) was smaller than computational thinking (SMD = 0.48). Educational robots had more significant effect on boys (MD = 0.39) than girls (MD = 0.27). The effect in primary school (SMD = 0.27) was higher than in middle school (SMD = 0.04), and the effect was great on short-term instruction with educational robots (SMD = 0.35). Based on these results, the study makes some recommendations for educators about strengthening the influence of educational robots on STEM attitudes, improving the persistence of their learning effects, and further exploring their application models. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Educational Robots Improve K-12 Students' Computational Thinking and STEM Attitudes: Systematic Review.,"Zhang, Yanjun; Luo, Ronghua; Zhu, Yijin; Yin, Yuan"
07356331,59,10.1177/0735633121992479,6,Sage Publications Inc.,"Recently educational robotics has expanded into curriculum beyond traditional STEM fields, and which can also be used to foster computational thinking (CT) skills. Prior research has shown numerous interdisciplinary benefits related to CT, however, these influential factors have often been investigated with relatively few variables. This study investigated factors that may lead to 4th and 5th grade elementary school students' development of computational thinking skills in collaborative robotics activities by hypothesizing a model which proposed that a problem solving inventory, intrinsic motivation, and enjoyment were the main predictors of computational thinking skills. The model was then tested by surveying students with several psychometric inventories where a revised model was then constructed. The study found significant relationships between perceived competence and enjoyment, and learning motivation, and intrinsic motivation. Another important finding was that problem solving was a significant predictor of computational thinking skills. Results were interpreted with reference to implications for possible means of improving learning outcomes when using collaborative robotics in an educational setting. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Exploring Factors That Influence Computational Thinking Skills in Elementary Students' Collaborative Robotics.,"Stewart, William H.; Baek, Youngkyun; Kwid, Gina; Taylor, Kellie"
07356331,59,10.1177/0735633120988807,6,Sage Publications Inc.,"Currently, many countries actively cultivate students to develop computational thinking ability. Many visual programming environments (VPEs) and physical robot courses have been integrated into computational thinking learning in the elementary education stage. This study explores the relationship between the programming learning environment (including VPE, physical robots, and no experience) and the computational thinking ability of higher-grade elementary school students of different genders. The results show that learning through VPE or physical robots can help students improve their computational thinking ability and that students learn better via physical robots. In addition, among the four dimensions of computational thinking ability, most students are weak in algorithm design. In terms of gender, no differences exist in computational thinking ability. Further analysis reveals that female students have better decomposition performance in VPE learning, while male students have better algorithm design performance. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Visual Programming Environments and Computational Thinking Performance of Fifth- and Sixth-Grade Students.,"Wu, Sheng-Yi; Su, Yu-Sheng"
15391523,53,10.1080/15391523.2020.1784066,4,Taylor & Francis Ltd,"This study examined what factors might have a positive impact on students' learning outcomes in mathematical understanding and computational thinking skills. Specifically, whether the proposed instructional design combining computational perspectives and an embodied approach in mathematics learning improves (a) mathematics learning, (b) problem-solving skills in programing, and (c) computational thinking. The study used a quantitative quasi-experimental design with 115 second- to fourth-grade students. Findings suggested that embodied activities combined with the practice of taking computational perspectives in solving mathematics problems led to improved knowledge in mathematics, programing concepts, and computational thinking among young learners. This paper also discusses how to make the computational thinking process more concrete and relevant within the context of mathematics to promote computational thinking skills. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Factors to consider when designing effective learning: Infusing computational thinking in mathematics to support thinking-doing.,"Sung, Woonhee; Black, John B."
07356331,60,10.1177/07356331211033158,2,Sage Publications Inc.,"This article provides an overview of the diverse ways in which computational thinking has been operationalised in the literature. Computational thinking has attracted much interest and debatably ranks in importance with the time-honoured literacy skills of reading, writing, and arithmetic. However, learning interventions in this subject have modelled computational thinking differently. We conducted a systematic review of 81 empirical studies to examine the nature, explicitness, and patterns of definitions of computational thinking. Data analysis revealed that most of the reviewed studies operationalised computational thinking as a composite of programming concepts and preferred definitions from assessment-based frameworks. On the other hand, a substantial number of the studies did not establish the meaning of computational thinking when theorising their interventions nor clearly distinguish between computational thinking and programming. Based on these findings, this article proposes a model of computational thinking that focuses on algorithmic solutions supported by programming concepts which advances the conceptual clarity between computational thinking and programming. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Computational Thinking Through an Empirical Lens: A Systematic Review of Literature.,"Ezeamuzie, Ndudi O.; Leung, Jessica S. C."
22558942,4,,3,University of Latvia,"Computational Thinking (CT) has become popular in recent years and has been recognised as an essential skill for all, as members of the digital age. Many researchers have tried to define CT and have conducted studies about this topic. However, CT literature is at an early stage of maturity, and is far from either explaining what CT is, or how to teach and assess this skill. In the light of this state of affairs, the purpose of this study is to examine the purpose, target population, theoretical basis, definition, scope, type and employed research design of selected papers in the literature that have focused on computational thinking, and to provide a framework about the notion, scope and elements of CT. In order to reveal the literature and create the framework for computational thinking, an inductive qualitative content analysis was conducted on 125 papers about CT, selected according to pre-defined criteria from six different databases and digital libraries. According to the results, the main topics covered in the papers composed of activities (computerised or unplugged) that promote CT in the curriculum. The targeted population of the papers was mainly K-12. Gamed-based learning and constructivism were the main theories covered as the basis for CT papers. Most of the papers were written for academic conferences and mainly composed of personal views about CT. The study also identified the most commonly used words in the definitions and scope of CT, which in turn formed the framework of CT. The findings obtained in this study may not only be useful in the exploration of research topics in CT and the identification of CT in the literature, but also support those who need guidance for developing tasks or programs about computational thinking and informatics. [ABSTRACT FROM AUTHOR] Copyright of Baltic Journal of Modern Computing is the property of University of Latvia and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Baltic Journal of Modern Computing,A Framework for Computational Thinking Based on a Systematic Research Review.,"KALELİOĞLU, Filiz; GÜLBAHAR, Yasemin; KUKUL, Volkan"
00010782,65,10.1145/3545109,8,Association for Computing Machinery,"The article explores how data thinking can can be incorporated into computer science education. Particular focus is given to data science, which the authors describe as a new research and applications field that is comprised of computer science, mathematics, statistics and real-world domain knowledge. The importance of understanding data and data thinking in the 21st century is also discussed.",Communications of the ACM,Computational Thinking in the Era of Data Science: Incorporating data thinking into computer science education.,"Mike, Koby; Ragonis, Noa; Rosenberg-Kima, Rinat B.; Hazzan, Orit"
00189162,55,10.1109/MC.2022.3167600,11,IEEE,"Project moveSMART uses a web-based platform to integrate physical education with computer science (CS) and computational thinking (CT). This article describes a series of tutorials to introduce elementary students to CS/CT by making connections to physical activity and grade-level curricula in other subjects. [ABSTRACT FROM AUTHOR] Copyright of Computer (00189162) is the property of IEEE and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer (00189162),Project moveSMART: When Physical Education Meets Computational Thinking in Elementary Classrooms.,"Fritz, Connor; Bray, Dylan; Lee, Grace; Julien, Christine; Burson, Sheri; Castelli, Darla; Ramsey, Carol; Payton, Jamie"
10613773,29,10.1002/cae.22425,6,Wiley-Blackwell,"Although the importance of computational thinking (CT) has been widely recognized, we still poorly understand how to effectively teach this skill. The aim of this study is to investigate whether peer code review (PCR) could affect CT, learning engagement, and learning satisfaction in a blended learning environment. To achieve this, we carried out a randomized control trial study involving 84 first‐year undergraduates (second semester) from different majors. There was no difference in CT before this experiment and after the experiment, general CT, specific CT, learning engagement, and satisfaction were measured. An independent sample t test showed that students learning with code peer review showed better performance on computational concepts, computational perspectives, learning engagement, and learning satisfaction (p <.001). Bayesian t test further showed substantial or strong evidence for the improvement of computational concepts, learning engagement, learning satisfaction, and computational perspectives. Moreover, the absolute values of Cohen's effect sizes of computational concept, computational perspectives, emotional engagement, behavior engagement, learning engagement, learning satisfaction were all above 0.4, which is viewed as educationally meaningful. Although there was no difference in the general CT, we still saw evidence of improvement over the course of the experiment. Overall, our findings suggest instructors to use PCR reasonably to further improve CT, learning engagement, and satisfaction in programming courses. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Using peer code review to improve computational thinking in a blended learning environment: A randomized control trial.,"Lin, Xuefen; Ma, Yanghui; Ma, Weifeng; Liu, Yang; Tang, Wei"
07356331,59,10.1177/0735633121992480,6,Sage Publications Inc.,"This study proposed plugged and unplugged approaches for young students to simultaneously improve their interdisciplinary learning performance in English and Computational Thinking (CT). The plugged approach involved adopting educational robots to enhance CT and to provide English vocabulary and sentence practice via a board game. The unplugged version of the educational board game involved using a conventional board game without a computer, although it was designed for practicing CT as well as some foreign language vocabulary and conversational sentences. The results show that both approaches were helpful for simultaneously improving the students' English proficiency of the target vocabulary and sentences, and their CT competence. The students' foreign language learning anxiety during the English conversation in the plugged game was significantly lower than that of the students playing the unplugged game. On one hand, the cooperation tendency of the CT scale improved significantly for the students playing the unplugged game. On the other hand, the critical thinking of the CT scale improved significantly for those using the plugged approach. This research provides an innovation development and evaluation for plugged and unplugged approaches. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Simultaneously Improving Computational Thinking and Foreign Language Learning: Interdisciplinary Media With Plugged and Unplugged Approaches.,"Hsu, Ting-Chia; Liang, Yi-Sian"
19767277,12,10.3837/tiis.2018.08.028,8,Korean Society for Internet Information,"The software centered world following the fourth industrial revolution is rapidly approaching us. Countries around the world attach importance to software's ability as one of the key elements for training future human resources. In order to train software centered human resources, each university has designated Software Education as an essential curriculum for not only major but also non-majors. In the past Software Education was an education for a major, but recent Software Education was changed to the essential education that is necessary for all living in the software centered world. In the past the curriculum was focused on software development and implementation-oriented education, but recent curriculum emphasizes sequential arranging and thinking of problem solving. In order to reflect trends in recent Software Education in detail, we integrate Software Education with major concept of Computational Thinking. In this paper, we analyzed the effect of the main concept of Computational Thinking on Software Education for non-majored learners who received Software Education based on Computational Thinking (here refers to learners who major in humanities, social sciences and arts). In addition, research models of satisfaction, self-efficacy, and occupational change was established as the elements of Software Education, and it was found that there was a relation between Computational Thinking and Software Education. [ABSTRACT FROM AUTHOR] Copyright of KSII Transactions on Internet & Information Systems is the property of Korean Society for Internet Information and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",KSII Transactions on Internet & Information Systems,A Study on the Design and Effect of Computational Thinking and Software Education.,Jungin Kwon; Jaehyoun Kim
22546529,6,10.17993/3ctic.2017.55.38-63,1,"Area de Innovacion y Desarrollo, SL","This document is a scientific contribution to the teaching of information and communications technologies, from which the potential and educational privileges offered by computer science for the development of skills related to creative solving problems are evident. It is developed through a quasi-experimental study from a methodological proposal based on computer programming through visual programming language ""Scratch"" mediational main teaching tool. (English) [ABSTRACT FROM AUTHOR] El presente documento es un aporte científico a la didáctica de las tecnologías de la información y la comunicación, desde el cual se evidencian las potencialidades y privilegios pedagógicos que ofrecen las ciencias de la computación para el desarrollo de competencias relacionadas con la resolución creativa de problemas. Se lleva a cabo a través de un estudio cuasi experimental y desde una propuesta metodológica fundada en la programación de computadoras mediante el lenguaje de programación visual ""Scratch"" como principal herramienta pedagógica mediacional. (Spanish) [ABSTRACT FROM AUTHOR] Copyright of 3C TIC is the property of Area de Innovacion y Desarrollo, SL and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",3C TIC,EL PENSAMIENTO COMPUTACIONAL PARA POTENCIAR EL DESARROLLO DE HABILIDADES RELACIONADAS CON LA RESOLUCIÓN CREATIVA DE PROBLEMAS.,"Pérez Palencia, Mauricio"
07356331,59,10.1177/0735633120973429,5,Sage Publications Inc.,"Creativity and Computational Thinking (CT) have been both extensively researched in recent years. However, the associations between them are still not fully understood despite their recognition as essential competencies for the digital age. This study looks to bridge this gap by examining the association between CT and two types of creativity, i.e., Creative Thinking and Computational Creativity. The research was conducted among 124 middle school students from Spain, who were divided into control and experimental groups; the intervention included an explicit encouragement to be as creative as possible (i.e., to submit multiple correct solutions) in a given learning task. Data were analyzed from a standardized creativity test (Torrance's TTCT) and cross-referenced with log files that documented the students' activities in the Kodetu game-based learning environment. Our research findings indicate some interesting associations between CT and Creativity. First, we found that creativity contributes to CT. Second, we found that CT is transferable across different domains. Finally, we found that Computational Creativity can develop and improve over time. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,A Log-Based Analysis of the Associations Between Creativity and Computational Thinking.,"Israel-Fishelson, Rotem; Hershkovitz, Arnon; Eguíluz, Andoni; Garaizar, Pablo; Guenaga, Mariluz"
02664909,37,10.1111/jcal.12545,4,Wiley-Blackwell,"Promoting the cultivation of computational thinking (CT) skills in programming activities has become a key issue in the K‐12 curriculum, however, there is no unified conclusion on how to design programming activities to promote the acquisition of CT skills more effectively. The purpose of this study is to determine the effectiveness of using programming to enhance K‐12 students' CT skills and explore the influence of various programming instructional design factors on the acquisition of CT skills. This study presents a quantitative meta‐analysis. A systematic search of randomized controlled studies on the influence of programming on CT skills. A total of 86 empirical studies with 114 effect sizes met the study selection criterion. The results showed that programming improved K‐12 students' CT skills in general (Hedges' g = 0.601, 95% CI [0.505, 0.697], p < 0.001). No publication bias was detected. Besides, we found that the interdisciplinary integration of programming, the duration of programming intervention within 1 week to 1 month, the class size of less than 50 students, and a reasonable selection of programming instruments and CT assessment types may be more conducive to promoting students' CT skills. Based on these findings, we suggest that programming instructional design should be planned reasonably to make the best use of technology towards developing students' CT skills. This will be of great significance to programming teaching and CT education in K‐12. Lay Description: What is already known about this topic: The cultivation of computational thinking (CT) in K‐12 has become a key issue.One of the latest trends in the education field is computer programming in K‐12 classrooms to cultivate students' CT skills.Programming teaching design may affect the influence of programming education on students' CT skills. However, there is a lack of overall quantitative synthesis of existing empirical research. What this paper adds: A meta‐analysis of 86 studies was conducted to provide systematic evidence that programming education is effective to promote K‐12 students' CT skills.Programming teaching design factors such as subjects, intervention duration, sample size, programming instruments and assessment types can affect CT skills in programming activities.Programming activity forms cannot affect CT skills in programming activities. Implications for practice and/or policy: The implementation of programming education in K‐12 schooling can effectively cultivate students' CT skills.Programming teaching design should be planned reasonably to make the best use of technology towards developing students' CT skills.The interdisciplinary integration of programming, the duration of programming intervention within one week to one month, control of class size to less than 50 students, and a reasonable selection of programming instruments and assessment types may be more conducive to promoting students' CT skills. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Which way of design programming activities is more effective to promote K‐12 students' computational thinking skills? A meta‐analysis.,"Sun, Lihui; Hu, Linlin; Zhou, Danhua"
07356331,59,10.1177/0735633120972356,4,Sage Publications Inc.,"Computational thinking has received tremendous attention from computer science educators and educational researchers in the last decade. However, most prior literature defines computational thinking as thinking outcomes rather than thinking processes. Based on Selby and Woodland's framework, this study developed and validated the Computational Thinking Scale (CTS) to assess all students' thought processes of computational thinking for both general and specific problem-solving contexts in five dimensions: abstraction, decomposition, algorithmic thinking, evaluation and generalization. A survey including 25 candidate items for CTS as well as demographic variables was administered to 388 junior high school students in Taiwan. An explorative factor analysis using the principal axis method with the oblimin rotation was used to validate the scale. Finally, 19 items were extracted successfully under the designed five dimensions, with a total explained variance of 64.03% and an overall reliability of 0.91. Results of the demographic comparisons showed that boys had a greater disposition than girls in decomposition thinking when solving problems using computer programming. In addition, programming learning experience, especially self-directed learning and after-school learning, had significant positive effects on all dimensions of CTS. Several future studies are suggested using this tool. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,The Computational Thinking Scale for Computer Literacy Education.,"Tsai, Meng-Jung; Liang, Jyh-Chong; Hsu, Chung-Yuan"
07356331,59,10.1177/0735633120972050,4,Sage Publications Inc.,"Computational thinking is a means to understand and solve complex problems through using computer science concepts and techniques. While there is an increase in the number of initiatives focusing on coding, whether they (a) address computational thinking and problem-solving skills and (b) use methods of teaching problem solving is yet to be explored. As a preliminary step, this study focuses on examining 3rd grade lesson plans at Code.org. The analysis identified various components of computational thinking and problem solving as well as specific problem-solving teaching methods used to address these skills. Besides such cognitive outcomes, the findings also revealed affective, reflective, and social aspects of learning supported in the lessons. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Still a New Kid on the Block? Computational Thinking as Problem Solving in Code.org.,"Kale, Ugur; Yuan, Jiangmei"
15391523,53,10.1080/15391523.2020.1771232,3,Taylor & Francis Ltd,"This study sought to identify factors that affect teachers' beliefs about teaching computing in their classrooms. By reviewing existing scales and research on computing, we created the Teacher Beliefs about Coding and Computational Thinking (TBaCCT) scale. Through confirmatory factor analysis and structural equation modeling we validated the scale with data from 245 elementary teachers from eight U.S. school districts who participated in computing teacher development and taught coding to elementary students over one school year. Teachers' self-efficacy for coding and computational thinking increased significantly as they taught coding, while their teaching efficacy for computing increased the most. The resulting 33-item TBaCCT provides a validated scale that can be used to measure elementary teacher beliefs about computing education as they engage in teacher professional development. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Measuring teacher beliefs about coding and computational thinking.,"Rich, Peter J.; Larsen, Ross A.; Mason, Stacie L."
08993408,33,10.1080/08993408.2022.2154992,1,Taylor & Francis Ltd,,Computer Science Education,Affordances and limitations of teachers instructional styles when teaching computer science and computational thinking.,"Searle, Kristin A.; Tofel-Grehl, Colby; Fischback, Liam; Hansen, Tyler"
18257321,16,10.13128/formare-17939,1,Firenze University Press,"In this work the concept of measurement and the physical quantities were chosen to develop an inclusive didactical practice, which is based on the contemporary epistemological research and the rigor of international standards, and therefore cognitively demanding. This approach, together with the support of methods coming from the computer programming, supported the creation of a path that is widely accessible by students, as well as a correct definition of measurement. Through an appropriate didactical transposition the tools here described can be useful to raise the level of the educational practices in the classroom, e.g. to promote computational thinking. (English) [ABSTRACT FROM AUTHOR] In questo lavoro sono stati scelti la misura e le grandezze fisiche come nucleo fondante intorno ai quali sviluppare una attività didattica inclusiva e al tempo stesso esigente dal punto cognitivo, perché basata sulla ricerca epistemologica contemporanea e sul rigore degli standard internazionali. Tale impostazione, unitamente al supporto di metodologie provenienti dalla programmazione informatica, ha consentito lo sviluppo di un percorso che presenta sia un'ampia accessibilità da parte degli studenti, sia una corretta definizione del concetto di misura. Attraverso questo ripensamento dei contenuti, le risorse proposte possono diventare strumenti per elevare il livello dell'offerta didattica e valorizzare le eccellenze, anche attraverso la promozione del pensiero computazionale. (Italian) [ABSTRACT FROM AUTHOR] Copyright of Form@re is the property of Firenze University Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Form@re,La didattica della misura dall'epistemologia al pensiero computazionale.,"Piccione, Andrea"
15297314,16,,4,International Association for Computer Information Systems,"Educational games hold a great promise for STEM education for K-12 students and need to be carefully designed to ensure that they are meeting educational objectives, providing immersive and entertaining experience. The paper outlines theoretical underpinnings for an engaging 3D educational puzzle game for middle school students intended to both serve for educational purpose, which is teaching mathematics, computing concepts, and algorithmic thinking, and provide entertaining gameplay. To achieve the goal, we posit that the proposed game design will facilitate flow experience, in which people are fully immersed in an activity at hand. The design is also enhanced by an intelligent pedagogical agent, which student players will interact with and learn computational thinking from. Finally, the game also aims to create a positive attitude change about STEM and computing subjects, which middle school students, especially girls and minorities, perceive as a difficult subject, by fostering their self-efficacy in STEM subjects. [ABSTRACT FROM AUTHOR] Copyright of Issues in Information Systems is the property of International Association for Computer Information Systems and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Issues in Information Systems,A 3D LEARNING GAME TO FOSTER COMPUTATIONAL THINKING IN K-12 EDUCATION.,"Kwak, Myungjae; Floyd, Kevin S.; Yurov, Kirill M."
21660727,,,,Conferencia Iberica de Sistemas Tecnologia de Informacao,"The inclusion of computational thinking in third-level professional training is an alternative that revolutionize traditional teaching through new paradigms, ICT tools and new platforms such as the one proposed in this paper that describes the development and implementation of a prototype that allows incorporating computational thinking into educational constructivist models, exploiting the capacities and abilities of a global and interconnected society. The prototype was submitted to an evaluation by 120 students of Information Technology (IT) faculty of the Armed Forces University ESPE located in Sangolquí, Ecuador, in the fields: performance and acceptance of the user, obtaining acceptable results about its applicability, usability and adaptation to the training model by competencies of the institution. The research methodology Desing Science Research (DSR), SCRUM as a design methodology and AppGini as a development tool were applied. (English) [ABSTRACT FROM AUTHOR] La inclusión del pensamiento computacional en la formación profesional de tercer nivel, es una alternativa que pretende revolucionar la enseñanza tradicional a través de nuevos paradigmas, herramientas TIC's y nuevas plataformas como la propuesta en el presente trabajo que describe el desarrollo e implantación de un prototipo de plataforma informática que permite incorporar el pensamiento computacional en modelos educativos constructivistas explotando las capacidades y habilidades de una sociedad global e interconectada. La propuesta planteada fue sometida a una evaluación por parte de 120 estudiantes de la carrera de Tecnologías de la Información (TI), de la Universidad de las Fuerzas Armadas ESPE ubicada en Sangolquí, Ecuador, en los ámbitos: desempeño, rendimiento y aceptación del usuario, obteniéndose resultados aceptables sobre su aplicabilidad, usabilidad y adecuación al modelo de formación por competencias de la institución. Se aplicó la metodología de investigación Desing Science Research (DSR), SCRUM como metodología de diseño y AppGini como herramienta de desarrollo. (Spanish) [ABSTRACT FROM AUTHOR] Copyright of CISTI (Iberian Conference on Information Systems & Technologies / Conferência Ibérica de Sistemas e Tecnologias de Informação) Proceedings is the property of Conferencia Iberica de Sistemas Tecnologia de Informacao and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",CISTI (Iberian Conference on Information Systems & Technologies / Conferência Ibérica de Sistemas e Tecnologias de Informação) Proceedings,Plataforma para la enseñanza universitaria aplicando el Pensamiento Computacional en la Universidad de las Fuerzas Armadas ESPE.,"Delgado, Ramiro; Yacchirema, Silvana; Coral, Francisco; Celi, Juan"
10494820,29,10.1080/10494820.2019.1635495,7,Taylor & Francis Ltd,"In this study, the effects of Arduino IDE and C++ programming languages were investigated on the computational thinking skills of preservice teachers. The Computational Thinking Skills Scale was administered to preservice teachers. Firstly, a basic programming training was given and then it was asked to create group projects on a voluntary basis. Six of twelve groups created a project using the Arduino IDE platform and the other six created one using the C++ programming language. Accordingly, a significant difference, which is in favour of the post-test, was found in the scores of pre-tests and post-tests of Arduino IDE groups in the scale factors; creativity, algorithmic thinking, critical thinking and the total score of the scale. No significant difference was found in cooperativity and problem solving factors. Also, the results of the study did not reveal any significant difference between the scores of pre and post-tests of C++ project groups and overall scores of different groups. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,The effects of different programming trainings on the computational thinking skills.,"Pala, Ferhat Kadir; Mıhcı Türker, Pınar"
07356331,59,10.1177/0735633120978530,5,Sage Publications Inc.,"Computer science and computational thinking (CT) education in K-12 schools have been escalating in recent years. A couple of CT instructional models have been proposed to depict the roles of CT in K-16 education. Yet, neither of them discussed CT infusion into a subject course. In this article, we proposed a CT-integration model called TPC2T. In this model, we suggested considering CT as a second subject and using an appropriate technological pedagogical approach to make students' learning of two subjects meaningful and engaging. We implemented this model in a CT-integrated lesson in two sections of a high-school Spanish course. Students worked in small groups and coded three small and one comprehensive digital Spanish-culture stories in Scratch. Results showed that students taking the CT-integrated lesson had the same degree of improvement in their Spanish culture knowledge as their peers who did not take the CT-integrated lesson. Besides, students taking the CT-integrated lesson had a significant improvement in their CT knowledge. At the same time, their CT self-efficacy outperformed those who did not take the CT-integrated lesson. We discussed the results and offered suggestions for researchers and educators at the end of the article. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Learning Culture and Computational Thinking in a Spanish Course: A Development Model.,"Zha, Shenghua; Morrow, Debra A. L.; Curtis, Jennifer; Mitchell, Shane"
07356331,59,10.1177/0735633120979930,5,Sage Publications Inc.,"In this paper, we explore the challenges experienced by a group of Primary 5 to 6 (age 12–14) students as they engaged in a series of problem-solving tasks through block-based programming. The challenges were analysed according to a taxonomy focusing on the presence of computational thinking (CT) elements in mathematics contexts: preparing problems, programming, create computational abstractions, as well as troubleshooting and debugging. Our results suggested that the challenges experienced by students were compounded by both having to learn the CT-based environment as well as to apply mathematical concepts and problem solving in that environment. Possible explanations for the observed challenges stemming from differences between CT and mathematical thinking are discussed in detail, along with suggestions towards improving the effectiveness of integrating CT into mathematics learning. This study provides evidence-based directions towards enriching mathematics education with computation. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,The Interplay Between Mathematical and Computational Thinking in Primary School Students' Mathematical Problem-Solving Within a Programming Environment.,"Cui, Zhihao; Ng, Oi-Lam"
07356331,59,10.1177/0735633120973432,4,Sage Publications Inc.,"This study explored (1) pedagogical strategies in Educational Coding and Robotics (ECR) learning which can develop computational thinking of students and (2) the degree of teacher centrality in the ECR classroom. In addition, we investigated (3) the added value of the Small Private Online Course (SPOC) to teacher professional development (TPD). We analyzed reflections of 80 in-service teachers on TPD through the SPOC (1,091 statements) and conducted semi-structured interviews with 13 of them one year after completing the course and teaching ECR in the classroom (328 statements). The most prominent strategies immediately after the TPD were constructing learning experiences, tinkering & debugging, and interdisciplinary learning, while one year later, experiential learning and collaborative learning were more common. Regarding the degree of teacher centrality, a year after teaching ECR curriculum the teachers had a significantly higher percentage of statements reflecting their role as a guide-on-the-side and as a partner of students in the learning process. Regarding the contribution of the SPOC for TPD, teacher statements revealed significantly more benefits than challenges in both points of time. Interestingly, the same categories emerged bottom-up as benefits and challenges: a variety of control dimensions, independent learning, learning and knowledge management and collaboration. Implications for educational theory and ECR practice are discussed. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Professional Development of Code and Robotics Teachers Through Small Private Online Course (SPOC): Teacher Centrality and Pedagogical Strategies for Developing Computational Thinking of Students.,"Hadad, Shlomit; Shamir-Inbal, Tamar; Blau, Ina; Leykin, Eynat"
22558942,5,10.22364/bjmc.2017.5.3.05,3,University of Latvia,"A well-known challenge on Informatics and Computational Thinking Bebras is based on task solving activity. The Bebras model is known as one of the methods that involves students to the learning and promotes students' reasoning. The Bebras motivates students to be interested more deeply in informatics. This goal can only be reached if the tasks are interesting and provoke some excitement. The interactivity is very typical for computers, so it is clear that a computer oriented challenge / contest should apply interactive elements to solve or explain tasks. This paper presents a tool that is used to code and design dynamic Bebras tasks. The paper has two main goals: 1) to analyse tasks used to engage student's in learning informatics fundamentals, and 2) to provide a description of the tool, so-called the Bebras Lodge, and illustrate application of this tool by discussing several examples. [ABSTRACT FROM AUTHOR] Copyright of Baltic Journal of Modern Computing is the property of University of Latvia and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Baltic Journal of Modern Computing,Implementation of Dynamic Tasks on Informatics and Computational Thinking.,"DAGIENĖ, Valentina; STUPURIENĖ, Gabrielė; VINIKIENĖ, Lina"
21924880,7,10.3991/ijep.v7i3.6951,3,International Society of Engineering Education (IGIP),"Computational thinking sits at the core of every engineering and computing related discipline. It has increasingly emerged as its own subject in all levels of education. It is a powerful cornerstone for cognitive development, creative problem solving, algorithmic thinking and designs, and programming. How to effectively teach computational thinking skills poses real challenges and creates opportunities. Targeting entering computer science and engineering undergraduates, we resourcefully integrate elements from artificial intelligence (AI) into introductory computing courses. In addition to comprehension of the essence of computational thinking, practical exercises in AI enable inspirations of collaborative problem solving beyond abstraction, logical reasoning, critical and analytical thinking. Problems in machine intelligence systems intrinsically connect students to algorithmic oriented computing and essential mathematical foundations. Beyond knowledge representation, AI fosters a gentle introduction to data structures and algorithms. Focused on engaging mental tool, a computer is never a necessity. Neither coding nor programming is ever required. Instead, students enjoy constructivist classrooms designed to always be active, flexible, and highly dynamic. Learning to learn and reflecting on cognitive experiences, they rigorously construct knowledge from collectively solving exciting puzzles, competing in strategic games, and participating in intellectual discussions. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Engineering Pedagogy is the property of International Society of Engineering Education (IGIP) and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Engineering Pedagogy,Engineering Courses on Computational Thinking Through Solving Problems in Artificial Intelligence.,"Silapachote, Piyanuch; Srisuphab, Ananta"
21580502,77,,4,International Technology & Engineering Educators Association,"The article provides recommendations for teachers on how to choose mobile apps and start practices that support computational thinking in the U.S. elementary classrooms. Recommendations include choosing computationally rich coding apps, becoming a learner, using apps for active learning, and bridging learning across disciplines,",Technology & Engineering Teacher,recommendations to support computational thinking in the elementary classroom.,"Estapa, Anne; Hutchison, Amy; Nadolny, Larysa"
21580502,77,,4,International Technology & Engineering Educators Association,"The article looks at how computational thinking (CT) is a key skill in the 21st century that should be taught in technology and engineering classrooms. The International Society for Technology in Education and the Computer Science Teachers Association (CSTA) have provided the definition of the CS. It focuses on integrating conceptual understanding of CT, rather than a skills-based focus on coding in order to broaden the role that technology and engineering play in education.",Technology & Engineering Teacher,integrating computational thinking into technology and engineering education.,"Hacker, Michael"
08993408,31,10.1080/08993408.2021.1874229,2,Taylor & Francis Ltd,"Background and Context: Computational thinking (CT) is an essential skill for all youth to succeed in our technology and information-rich world. While CT has a growing presence within K-12 classrooms, libraries play an essential role in introducing these critical skills to all. Objective: Assessing learning in libraries is difficult given their informal nature. This is especially true when trying to assess a new and ill-defined construct like CT. A first step towards better supporting informal educators is to identify the motivations for bringing CT into informal spaces and to understand the current state of assessing CT in public libraries. Method: Thirty-seven interviews with library staff from across the United States were conducted and analyzed. Findings: This work reveals the variety of motivations justifying the inclusion of CT programming for youth in libraries, the challenges associated with assessing CT in libraries, and identifies the assessments library staff would like to be able to conduct for their own CT-related programming. Implications: This work advances our understanding of the current state of CT assessment in public libraries and lays the groundwork for future work seeking to meet the needs of those tasked with bringing CT to youth beyond the classroom. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Assessing computational thinking in libraries.,"Weintrop, David; Morehouse, Shandra; Subramaniam, Mega"
07356331,59,10.1177/0735633120967315,3,Sage Publications Inc.,"This paper examines a method which can be used by instructors pursuing innovative methods for language teaching, which expands learners' motivation in second language learning. Computational thinking (CT) is a problem-solving skill which can motivate students' English language learning. Designing a learning activity which integrates CT into English language learning has been considered in only a few academic studies. This study aimed to explore whether integrating CT into English language learning can be useful for improving learners' motivation and performance. The method of ""present, practice, and produce"" was applied as a method of presenting computational thinking in the English language learning classroom. Fifty-two elementary school students (52) participated in the experimental study. Following an experimental design, data were collected and analyzed from a combination of knowledge test scores, storytelling, motivation, and anxiety surveys. The experimental results indicate that the CT strategy improves students' language learning and raises their motivation in the two dimensions of extrinsic and intrinsic goal orientation. These results imply the positive effect of CT strategy on strengthening problem-solving skills of students participating in digital storytelling and increases their motivation and performance in English language learning. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Integrating Computational Thinking Concept Into Digital Storytelling to Improve Learners' Motivation and Performance.,"Parsazadeh, Nadia; Cheng, Pei-Yu; Wu, Ting-Ting; Huang, Yueh-Min"
10494820,29,10.1080/10494820.2019.1580750,3,Taylor & Francis Ltd,"Due to their applications on varied and complex issues, Artificial Intelligence (AI) and Internet of Things (IoT) (collectively, AIoT) have become popular new-generation courses, but the learning of such courses needs to consider actual situations and to analyze complicated problems, making it difficult for students to improve their academic performance. The concept of computational thinking education is to allow students to find solutions to problems in different fields by understanding the problems and analyzing solution steps. In this study, we integrate the concept of computational thinking education into a course on plot image-based virtual reality (VR). It combined shooting of the actual field, instructions on the movie required to be shot, and VR in order to enable students to get immersed in thinking about problems and understanding the actual field through plot image-based VR, further plan to learn the essence of problems, and develop possible solutions. Through experimental results of experimental and control groups, we found that plot image-based VR can effectively improve students' interests in learning and computational thinking. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Study on enhancing AIoT computational thinking skills by plot image-based VR.,Ying-Hsun Lai; Shih-Yeh Chen; Chin-Feng Lai; Yao-Chung Chang; Yu-Sheng Su
02664909,37,10.1111/jcal.12493,2,Wiley-Blackwell,"Computational thinking (CT) plays a vital role in the fields of science, technology, engineering and mathematics (STEM). However, whether students' learning attitude towards STEM is related to their CT skills remains unknown. Two studies were conducted to address this knowledge gap. In Study 1, we validated a newly developed STEM learning attitude scale among a sample of Chinese primary school students (N = 489). Exploratory and confirmatory factor analysis results revealed that the scale which consisted of three factors (mathematics, science and information technology) could sufficiently measure primary school students' STEM learning attitude in the current sample. In Study 2, we explored the association between students' STEM learning attitude and their CT skills. Evidence revealed that learning attitude towards STEM significantly predicted CT skills. We also found that girls had a more positive learning attitude towards STEM than boys, and the fourth grade might be the key period for the development of CT skills. Implications for promoting primary school students' STEM learning and CT skills were also discussed. Lay Description: What is currently known about this topic: Computational thinking (CT) plays a more and more important role in K‐12 education.STEM has become a natural field for integrating CT into classroom.Students' learning attitude determines their performance and achievements.CT is influenced by personal and situational factors. What this paper adds: Reliability and validity of the STEM learning attitude scale are psychometrically good.Students' STEM learning attitude can positively predict their CT skills.Girls may have more potential for the cultivation of CT in STEM education.The fourth grade may be the key period for the development of CT skills. Implications for practice and/or policy: Promoting CT skills in STEM education by improving students' learning attitude.Adopting teaching methods according to students' psychological and cognitive characteristics.Grasping the key stage of fourth grade to develop students' CT skills.Encouraging and protecting girls' interests and ideas in STEM education. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,STEM learning attitude predicts computational thinking skills among primary school students.,"Sun, Lihui; Hu, Linlin; Yang, Weipeng; Zhou, Danhua; Wang, Xiaoqian"
07356331,59,10.1177/0735633120964402,2,Sage Publications Inc.,"In this research, a scale was developed to determine the programming-oriented computational thinking skills of university students. The participants were 360 students studying in various departments at different universities in Turkey for computer programming. The scale consists of 33 items under conceptual knowledge, algorithmic thinking, and evaluation subscale. While there was no significant difference between the students' conceptual knowledge and algorithmic thinking skills, the evaluation skills of male students differed significantly compared to females. Programming experience has a significant effect on conceptual knowledge, algorithmic thinking, and evaluation. The algorithmic thinking skills of the students who have low, middle, and high-level programming experience differed significantly. In terms of the development of conceptual knowledge and evaluation skills, it was observed that students should have at least one year of programming experience, but this experience will not make a significant difference if it is four years or more. It is thought that this scale, which is structured for different applications (e.g., web, game, robot) and learning environments (e.g., text, block) within the framework of its programming capabilities (conceptual, semantic, strategic knowledge), will contribute significantly to the evaluation of computational thinking as programming oriented. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,A Valid and Reliable Scale for Developing Programming-Oriented Computational Thinking.,"Kılıç, Servet; Gökoğlu, Seyfullah; Öztürk, Mücahit"
09574174,238,10.1016/j.eswa.2023.122283,,Elsevier B.V.,"Predictive learner modelling is crucial for personalized education. While convolutional neural networks (CNNs) have shown great success in education, their potential in learner modelling via image data is unexplored. This research introduces a novel and interpretable approach for Image-based Learner Modelling (ImageLM) using CNNs and transfer learning to model learners' performance and accordingly classify their computational thinking solutions. The approach integrates Grad-CAM, enabling it to provide insights into its decision-making process. Findings show that our custom CNN outperforms other models (namely ResNet, VGG, and Inception), with 83% accuracy in predicting solution correctness. More importantly, the ImageLM approach identifies the regions that contribute the most to the predictions, shedding light on learners' computational thinking knowledge and advancing toward trustworthy AI for education. These results underline the potential of utilizing imagery data from learners' activities during the learning process to predict their performance, especially in challenging environments like programming where traditional feature extraction and learning might struggle. [ABSTRACT FROM AUTHOR] Copyright of Expert Systems with Applications is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Expert Systems with Applications,ImageLM: Interpretable image-based learner modelling for classifying learners' computational thinking.,"Hooshyar, Danial; Yang, Yeongwook"
03601315,209,10.1016/j.compedu.2023.104962,,Elsevier B.V.,"Computational thinking is widely recognized as an essential skill for adapting to the current era, with programming learning being the most effective means to develop it. It is recommended that computational thinking and learning programming be introduced as early as elementary school. However, elementary school students often possess limited prior knowledge of programming, posing challenges in their learning process. The graphic organizers (GOs) may serve as a bridge between students' existing knowledge and new learning, facilitating a deeper processing of the overall information and thereby enhancing the learning process. This can be particularly advantageous for early-stage learners when grappling with difficult subjects. Consequently, this study employed GOs to assist elementary school students in their computational thinking and programming learning, employing a quasi-experiment design to evaluate their effectiveness. The results showed that although all students demonstrated awareness of applying computational thinking to solve problems, those exposed to GO-based instruction exhibited higher levels of computational thinking, programming skills, and flow experiences. • Most elementary school students are aware that they can use CT to solve problems. • Graphic organizers can help elementary school students improve their CT and programming skill. • Students can reach a higher flow experience when learning with Graphic organizers. • Graphic organizers are worthwhile as a tool for teaching and learning programming. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Enhancing elementary school students' computational thinking and programming learning with graphic organizers.,"Yang, Tzu-Chi; Lin, Zhi-Shen"
20885334,13,10.18517/ijaseit.v13i6.19042,6,INSIGHT - Indonesian Society for Knowledge & Human Development,"As artificial intelligence (AI) continues its rapid and relentless progression, the necessity for a comprehensive AI education has become increasingly evident. While South Korea has initiated various policies related to AI education, recent research has underscored the potential adverse repercussions of current instructional approaches on learners. In response to this pressing concern, the present study delves into integrating design thinking principles into AI education and meticulously assesses its impact on learning outcomes. To achieve this objective, we seamlessly amalgamated design thinking principles with AI problem-solving techniques, developing a tailor-made AI education curriculum explicitly crafted for middle school students. Subsequently, this innovative curriculum was implemented among middle school students, and their Computational Thinking (CT) competence was rigorously evaluated. The findings unequivocally establish that the infusion of design thinking into AI education significantly augmented the CT skills of the participating students. In comparison to the control group, it was discerned that middle school students who underwent AI education integrated with design thinking exhibited a statistically substantial enhancement in their Computational Thinking (CT) proficiencies. This study furnishes compelling empirical evidence that unequivocally endorses design thinking as a potent instructional approach within the domain of AI education, particularly for middle school students. Furthermore, it underscores the necessity of embracing innovative pedagogical methodologies in AI education to equip the younger generation with the indispensable skills to adeptly navigate the perpetually evolving landscape of an AI-driven future. [ABSTRACT FROM AUTHOR] Copyright of International Journal on Advanced Science, Engineering & Information Technology is the property of INSIGHT - Indonesian Society for Knowledge & Human Development and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","International Journal on Advanced Science, Engineering & Information Technology",An Approach to the Utilization of Design Thinking in Artificial Intelligence Education.,Seong-Won Kim; HakNeung Go; Seung-Ju Hong; Youngjun Lee
2716621X,5,10.30880/jscdm.2024.05.01.011,1,Universiti Tun Hussein Onn Malaysia,"The promise of data-driven methodology in various computer disciplines has been shown by the many real-world implementations of methods based on machine learning (ML) over the last couple of decades. ML is finding its way into the computer curriculum in higher education, and an increasing number of organizations are introducing it into computer education in grades K-12. Researching how agency and intuition grow in these situations is critical as computational learning becomes increasingly common in K-12 computer instruction. However, knowing the difficulties associated with teaching algorithmic learning through grades K-12 presents an even more difficult barrier for computer education research, given the difficulties educators and schools now face in integrating traditional learning. This article describes the prospects in data mining schooling for grades K-12. These developments include adjustments to philosophy, technology, and practice. The research addresses several distinctions that K-12 computer educators should consider while addressing this problem and places the current results into the broader context of computing education. The research focuses on crucial elements of the fundamental change needed to properly incorporate ML into more comprehensive K-12 computer courses. Giving up on the idea that rule-based, ""traditional"" programming is necessary for next-generation computational thinking is a crucial first step. [ABSTRACT FROM AUTHOR] Copyright of Journal of Soft Computing & Data Mining (JSCDM) is the property of Universiti Tun Hussein Onn Malaysia and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Soft Computing & Data Mining (JSCDM),Machine Learning Skills To K-12.,"Sallow, Amira Bibo; Asaad, Renas Rajab; Ahmad, Hawar Bahzad; Abdulrahman, Saman Mohammed; Hani, Ahmed Alaa; Zeebaree, Subhi R. M."
,,10.1145/3373625.3418003,22,Association for Computing Machinery,"The usage of playful activities is common in introductory programming settings. There is normally a virtual character or a physical robot that has to collect items or reach a goal within a map. Visually, these activities tend to be exciting enough to maintain children engaged: there is constant feedback about the actions being performed, and the virtual environments tend to be stimulating and aesthetically pleasant. Conversely, in adaptations for visually impaired children, these environments tend to become poorer, damaging the story at the cost of the programming actions and its dull mechanics (e.g., place a arrow block to move the character forward). In this paper, we present TACTOPI, a playful environment designed from the ground up to be rich in both its story (a nautical game) and its mechanics (e.g., a physical robot-boat controlled with a 3D printed wheel), tailored to promote computational thinking at different levels (4 to 8 years old). This poster intends to provoke discussion and motivate accessibility researchers that are interested in computational thinking to make playfulness a priority. [ABSTRACT FROM AUTHOR] Copyright of ACM SIGACCESS Conference on Computers & Accessibility is the property of Association for Computing Machinery and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ACM SIGACCESS Conference on Computers & Accessibility,TACTOPI: a Playful Approach to Promote Computational Thinking for Visually Impaired Children.,"Abreu, Lúcia; Pires, Ana Cristina; Guerreiro, Tiago"
00010782,62,10.1145/3231587,2,Association for Computing Machinery,"The author presents his thoughts on the expression ""computational thinking"" (CT) and discusses why a consensus definition may not be necessary. Topics covered include informatics education, the role of computing in problem solving, and CT as a scientific subject.",Communications of the ACM,Do We Really Need Computational Thinking?,"Nardelli, Enrico"
02664909,37,10.1111/jcal.12527,3,Wiley-Blackwell,"Persistence has been identified as a crucial quality of learning. However, it is hard to attain in online game‐based environments as the drive to progress in the game may influence the ability to achieve the learning goals. This study aimed to examine the associations between micro‐persistence, that is, the tendency to complete an individual task successfully, and task difficulty while acquiring computational thinking (CT). We further explored whether contextual or personal attributes better explain micro‐persistence. We analysed data of 111 school students who used the CodeMonkey platform. We took a learning analytics approach for analysing the platform's log files. We found that micro‐persistence is associated with task difficulty and that students who demonstrated an aptitude to learn new material are motivated to achieve the best solution. We also found that contextual variables better‐explained micro‐persistence than personal attributes. Encouraging micro‐persistence can improve CT acquisition and the learning processes involved. Lay Description: What is already known about this topic: Persistence is a substantial quality for learning.In online multi‐challenge environments, it is difficult to maintain persistence because of the urge to advance in the game itself.Persistence has been mostly studied with regarding the learning process as a whole. What this paper adds: Examination of micro‐persistence, that is, persistence at the task level.Students who demonstrate micro‐persistence and aptitude to learn new material are motivated to achieve the highest score.Contextual variables better explain micro‐persistence than personal attributes. Implications of study findings for practitioners: Micro‐persistence may lead to better and deeper learning.Instructional designers who want to maintain micro‐persistence should monitor the difficulty of individual learning tasks.Educators should motivate learners to complete learning tasks and not rely solely on intrinsic motivation. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Micro‐persistence and difficulty in a game‐based learning environment for computational thinking acquisition.,"Israel‐Fishelson, Rotem; Hershkovitz, Arnon"
08993408,31,10.1080/08993408.2021.1903248,2,Taylor & Francis Ltd,"Background and Context: Despite many initiatives to develop Computational Thinking (CT), not much is known about how early programmers develop CT and how we can assess their learning. Objective: Determine if the analysis of students' interactions with an online platform allows understanding the development of CT, how we can convert data collected into valuable insights, and the aspects that should be considered in platforms design. Method: We developed an online platform with a fine-grained log–recording system. We analysed the data collected from 1004 students (ages 8-14) to understand the difficulties they face. We explain our platform and the tools to process and filter the interaction logs. We calculate additional indicators that provide useful information about student's behaviour. Findings: Age and gender have shown to influence on CT learning. Generating additional indicators from basic interaction data provide valuable insights. We provide a list of recommendations for developing more effective programming learning platforms. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,How do students develop computational thinking? Assessing early programmers in a maze-based online game.,"Guenaga, Mariluz; Eguíluz, Andoni; Garaizar, Pablo; Gibaja, Juanjo"
08993408,31,10.1080/08993408.2021.1874221,2,Taylor & Francis Ltd,"Background & Context: We describe the rationale, design, and initial validation of computational thinking (CT) assessments to pair with curricular lessons that integrate fractions and CT. Objective: We used cognitive models of CT (learning trajectories; LTs) to design assessments and obtained evidence to support a validity argument Method: We used the LTs and evidence-centered design to develop assessments that 144 Grade 3 and Grade 4 elementary students completed following the integrated instruction. We analyzed data using multiple psychometric approaches. Findings: The design approach and data analysis suggest that the assessments are well-suited to evaluate students' CT knowledge, skills and abilities across multiple LTs. Implications: We show how to use LTs to design assessments that can yield valid inferences about students' CT competencies; these methods can be adopted and extended by others to create additional assessments that can advance computer science education. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Design and validation of learning trajectory-based assessments for computational thinking in upper elementary grades.,"Gane, Brian D.; Israel, Maya; Elagha, Noor; Yan, Wei; Luo, Feiya; Pellegrino, James W."
08993408,31,10.1080/08993408.2020.1866939,2,Taylor & Francis Ltd,"Background and Context: In today's increasingly digital world, it is critical that all students learn to think computationally from an early age. Assessments of Computational Thinking (CT) are essential for capturing information about student learning and challenges. When programming is used as a vehicle to foster CT skills, assessment of CT skills needs to measure understanding of programming concepts alongside general problem-solving practices applicable in contexts beyond programming. Objective: In this paper, we discuss the development of and results from separate validated assessments of programming concepts and generic CT practices for 4th-6th grade students. Method: An Evidence-Centered Design approach was used for the development and validation of the assessments, that were used with 15,000 upper elementary students in Hong Kong. Findings: Results from assessment implementation indicate that the assessments worked as designed and reveal student challenges with CT concepts and practices. Implications: These results point to the utility of our assessment as a curricular tool and the need for emphasizing certain CT concepts and practices in future curricular initiatives and teacher professional development. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,A principled approach to designing computational thinking concepts and practices assessments for upper elementary grades.,"Basu, Satabdi; Rutstein, Daisy W.; Xu, Yuning; Wang, Haiwen; Shear, Linda"
10613773,29,10.1002/cae.22214,3,Wiley-Blackwell,"Computational thinking (CT) has been recognized as a collection of understandings and skills required for new generations of students not only proficient at using tools, but also at creating them and understanding the implication of their capabilities and limitations.The objective of this research was to develop a module of solved problems for the development of CT in first‐year computer engineering students at the University of Cienfuegos, Cuba. Students depend on current research to understand the definition, function, and culture of CT and to consider how it can improve their analytical and critical skills. A contextualized definition of the CT method is proposed as a cognitive process executed by humans to solve problems using computational concepts. This method improves CT in terms of decomposition, pattern recognition, algorithm design, abstraction, data representation, problem decomposition, algorithmic thinking, and generalization of patterns, simulation and evaluation. The research carried out is an experimental design with a pretest and a posttest, with a control group and an experimental group to which the intervention was applied, both with 18 students. This article describes a study developing and incorporating CT modules and assessing their effect on the comprehension of CT principles by preservation teachers as well as their computing attitude. The results show that the implementation of analytical thought in education courses will successfully affect the comprehension of CT principles by preservice students. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Developing computational thinking with a module of solved problems.,"Rodríguez del Rey, Yailem Arencibia; Cawanga Cambinda, Isabel Nissandra; Deco, Claudia; Bender, Cristina; Avello‐Martínez, Raidell; Villalba‐Condori, Klinge Orlando"
10494820,29,10.1080/10494820.2019.1573199,3,Taylor & Francis Ltd,"Previous research has invested much effort in understanding how programming can contribute to the development of young learners' computational thinking (CT) in traditional K-12 classroom settings. Relatively few studies have examined programming for CT in informal online communities, especially for large scale quantitative research. With the repurposing and appropriation of code becoming standard practice for youth programmers in new and networked communities, this study proposes a model to investigate and explain how such remixing practices influence CT in learners. In particular, we use social cognitive theory to transform log data from more than 100,000 students and 200,000 programs in the Scratch online community into cognitive, environmental and behavioral factors. Then path modeling was used to show how the community environment can affect learners' remixing and further impact CT skills. The results demonstrate the intertwined relationships among the factors, generally showing that remixing can lead to CT improvement, but that over exposure to the community and excessive remixing can actually hinder CT development. Results and implications are further discussed. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Large-scale path modeling of remixing to computational thinking.,Wanli Xing
08993408,32,10.1080/08993408.2022.2095594,4,Taylor & Francis Ltd,,Computer Science Education,Computational thinking in the Ethiopian secondary school ICT curriculum.,"Kassa, Ermias Abebe; Mekonnen, Enguday Ademe"
08993408,32,10.1080/08993408.2021.1947642,4,Taylor & Francis Ltd,,Computer Science Education,Tabletop games designed to promote computational thinking.,"Poole, Frederick J.; Clarke-Midura, Jody; Rasmussen, Melissa; Shehzad, Umar; Lee, Victor R."
08993408,32,10.1080/08993408.2022.2044673,4,Taylor & Francis Ltd,,Computer Science Education,Experiential serious-game design for development of knowledge of object-oriented programming and computational thinking skills.,"Akkaya, Ali; Akpinar, Yavuz"
07380569,38,10.1080/07380569.2021.1882206,1,Taylor & Francis Ltd,"Over the past two decades, the integration of computational thinking, as well as information and communications technology within educational programs, has gained importance. A primary obstacle to integrating computational thinking into teaching and learning is the level of teachers' knowledge, skills, and perceptions related to this topic. This study aimed to determine the views of science, technology, engineering, and math (STEM) teachers regarding using information and communications technology within their teaching, emphasizing computational thinking within lessons, and conceptually developing levels of computational thinking skills. Another aim was to examine whether these variables differed according to educational discipline, teaching experience, and graduation factors. Data collection was conducted via an online questionnaire completed by participating teachers. One hundred twenty-one (121) teachers from 38 middle schools (34 public and 4 private) in seven different cities in the Republic of Turkey participated. An F test was used to determine whether selected scales, translated from an ICILS 2018 Teacher Questionnaire, differentiated according to educational discipline, teaching experience, and/or graduation factors. Pearson correlation coefficients were calculated to determine relationships between variables used in data collection. Results indicated that teachers need a sufficient level of education and guidance regarding incorporating information and communications technology into their lessons as well as how to consistently use these tools within their classrooms. [ABSTRACT FROM AUTHOR] Copyright of Computers in the Schools is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in the Schools,Examination of Turkish Middle School STEM Teachers' Knowledge about Computational Thinking and Views Regarding Information and Communications Technology.,"Bati, Kaan; İkbal Yetişir, Mehmet"
10613773,29,10.1002/cae.22382,1,Wiley-Blackwell,"This publication provides an editorial introduction to a special issue of Computer Applications in Engineering Education journal entitled Computational Thinking for STEM and Engineering Education. It provides introductory remarks to the issue and a commentary on the published material, as well as presents the views of the special issue editors in the field of science, technology, engineering and mathematics (STEM) education and research. This special issue is structured as follows. It contains articles related to the topics of computational thinking (CT), STEM, and engineering education. It starts with three overview articles based on systematic reviews, giving a structured overview of CT concepts in terms of practical educational approaches in introductory science, technology, engineering, arts and mathematics (STEAM) education. Subsequent articles present practical approaches to CT and STEAM education in such educational areas as general engineering, programming and software engineering, physical computing, robotics, electronics, mechanical, and power engineering. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,"Computational thinking: Enhancing STEAM and engineering education, from theory to practice.","Dolgopolovas, Vladimiras; Dagienė, Valentina"
10613773,29,10.1002/cae.22365,1,Wiley-Blackwell,"The importance of computational thinking (CT) development has increased during the last decade. There is a need to understand what to teach from computational thinking perspectives, as well as what types of activities and learning content topics to use in the classroom. Current students' generation is looking for engaging, motivating learning activities with immediate results and feedback. The paper presents the design process of the strategy for CT abilities development. The proposed strategy has been implemented in practice identify its suitability for successful CT development within Science, Technology, Engineering, Arts, and Mathematics (STEAM) education. The strategy is accompanied by teaching materials for computational making activities with Arduino. The proposed strategy contributes to Engineering education as an essential part of STEAM and usually not included in the basic and secondary school curriculum as a separate subject. Pre- and postsurvey were conducted with basic school students to identify the effect of the strategy implementation on the development of CT abilities. The findings of this study showed a statistically significant increase in CT literacy in 14 abilities from seven dimensions: computing artifact, decomposition, abstraction, algorithm, communication and collaboration, computing and society, and evaluation. The implications of this study include the practical usage of the strategy in plan class activities for STEAM subjects in basic school to develop particular CT abilities. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Computational thinking development through physical computing activities in STEAM education.,"Juškevičienė, Anita; Stupurienė, Gabrielė; Jevsikova, Tatjana"
07356331,58,10.1177/0735633120940954,8,Sage Publications Inc.,"Computational Thinking (CT) and creativity are considered two vital skills for the 21st century that should be incorporated into future curricula around the world. We studied the relationship between these two constructs while focusing on learners' personal characteristics. Two types of creativity were examined: creative thinking and computational creativity. The research was conducted among 174 middle school students from Spain. Data collected using a standardized creativity test (Torrance's TTCT) were triangulated with data drawn from students' log files that documented their activity in a game-based learning environment for CT (Kodetu). We found some interesting associations between CT and the two constructs of creativity. These associations shed light on positive associations between each of the two creativity constructs and CT acquisition, as well as between the two creativity constructs themselves. Additionally, we highlight differences between boys and girls, as girls were found to be more creative on both creativity measures. Other differences associated with school affiliation, prior coding knowledge, and technology affinity are also discussed. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,The Associations Between Computational Thinking and Creativity: The Role of Personal Characteristics.,"Israel-Fishelson, Rotem; Hershkovitz, Arnon; Eguíluz, Andoni; Garaizar, Pablo; Guenaga, Mariluz"
03601315,213,10.1016/j.compedu.2024.105012,,Elsevier B.V.,"Efforts to incorporate computational thinking (CT) into academic courses have been gaining popularity. CT is a problem-solving skill that is crucial in the 21st century. CT may be used to support language education. Courses in English as a foreign language often need an effective writing component that includes writing organization and language use, as demonstrated by the poor writing samples often generated by students of these courses. To address the problems, CT, which is a higher-order mode of problem-solving and knowledge acquisition optimization, was used. The experimental group was instructed using the CT teaching model based on CT's essential components (decomposition, generalization, abstraction, algorithm, and evaluation), whereas the control group was taught using the conventional method. In total, 58 undergraduate students divided into two groups participated in this study. A combination of writing, CT skills, surveys, and interviews were used to collect data according to an experimental design. The collected quantitative data were analyzed through analysis of covariance and structural equation modeling, and the MAXQDA 2022software was used to analyze the collected qualitative data. The results of this study indicate that incorporating CT into an English writing course enhances the writing and higher-order thinking skills of students. The CT concepts helps students develop critical thinking skills by evaluating the text and identifying potential issues or improvements. Additionally, it allows students to use their skills to create unique writing solutions, which can boost English writing creativity. • Computational thinking in writing courses improves higher-order thinking skills. • Teaching intervention based on Computational Thinking enhances writing skills. • Computational thinking allows students to become better writers via peer feedback. • Computational Thinking and writing develop creativity and problem-solving skills. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Enhancing English writing and higher-order thinking skills through computational thinking.,"Wu, Ting-Ting; Silitonga, Lusia Maryani; Murti, Astrid Tiara"
00010782,60,10.1145/2998438,6,Association for Computing Machinery,"The article discusses issues related to the notion of computational thinking. Topics include the measurement of students' computational abilities, the role of U.S. National Science Foundation (NSF) official Jeannette Wing in promoting computational thinking in K-12 U.S. education, and the relation of computational thinking to design education.",Communications of the ACM,Remaining Trouble Spots with Computational Thinking: Addressing unresolved questions concerning computational thinking.,"Denning, Peter J."
10613773,28,10.1002/cae.22319,6,Wiley-Blackwell,"University students enroling in Science, Technology, Engineering and Mathematics (STEM)‐related studies such as computer science continue to decline, even though worldwide educational policy reports warn about the need for this type of professionals in the immediate future. Promoting computer science studies among preuniversity students seems the most direct solution to reverse this issue. In this context, we present the Sucre4Kids project whose main objectives are to engage young people into computational thinking and programming concepts using tangible elements and social interaction. We apply the Sucre4Kids approach to introductory courses of computational thinking and programming concepts to high‐school students. The main results of the 3‐year intervention in the classroom with 256 high‐school students reached suggest that tangible elements and social interaction in groups are determining factors in increasing students' motivation to learn to code and to raise their interest in STEM disciplines. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Advancing preuniversity students' computational thinking skills through an educational project based on tangible elements and virtual block‐based programming.,"Trilles, Sergio; Granell, Carlos"
08993408,31,10.1080/08993408.2020.1789411,1,Taylor & Francis Ltd,"Computational thinking (CT) is considered as a valuable literacy for all students, and its inclusion in compulsory schooling could increase the numbers of underrepresented students who pursue computing-related careers. Computer Science Unplugged (CSU) had success in making computer science (CS) accessible to K–12 students in outreach settings. Such ""unplugged"" approaches have the potential to do the same in formal education. This review considers how research findings on unplugged pedagogies might advance CS/CT education priorities, while highlighting areas of unknown and tension. We conducted a search in academic databases using terms +unplugged ""computer science"" and +unplugged CT, and related terms. We synthesized our review with existing ones to inform the priorities of CS-for-all and CT development. We surfaced CSU's limitations to broaden access for underrepresented students and suggested a remedy. We proposed 10 research questions that fill key gaps to support efforts that provide just access to quality CS/CT education. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,"A critical review of literature on ""unplugged"" pedagogies in K-12 computer science and computational thinking education.","Huang, Wendy; Looi, Chee-Kit"
10613773,29,10.1002/cae.22374,1,Wiley-Blackwell,"Introduction: Programming can be an intellectually satisfying skill and is definitely considered useful. However, problem-solving with a computer involves much more than just learning programming language syntax. The theory and practice are interrelated in fascinating ways. Whether one thinks that the purpose of college or higher education is to prepare students for an occupation or to develop foundational knowledge with lifetime benefits (or both), computer science (CS) has become a fundamental part of 21st-century life. Even students studying in areas other than CS are likely to have significant encounters with computational thinking (CT) later on in life. Motivation and Objectives: Colleges and universities offer the opportunity for students to take as many courses as they desire in coding, programming, and CS taught by faculty members from that discipline area. However, this approach alone is deemed insufficient for computer-based problem-solving and computer programming. Effective programming teaching pedagogy also requires organizational principles that can guide us in formulating the overall design of a programming science curriculum (CS). In particular, we need strategies that help us structure multiple paradigm-based teaching curricula into manageable modules. This study aims to develop a framework for programming pedagogy. Research Methodology and Methods: A systematic literature review was conducted for identifying, evaluating, and interpreting relevant research to explore programming paradigms that could be incorporated for novice programmers, possible implementation strategies, and instructional methods for teaching text-based programming, CT concepts, and practices. Results and Findings: This paper's focus was on the pedagogical phenomenon of teaching programming considering the evolving paradigms, implementation strategies, and instructional methods and techniques through the lens of CT. Hence, a framework to design a learning path for pedagogical approaches that consist of CT concepts and practices within text-based programming were proposed. The proposed framework is based on the assumption that ""any ongoing research on computing pedagogy requires a review of what CT is, how it impacts on teaching and learning and its role within the pedagogy advocated."" The programming pedagogy framework consists of four fundamental components: programming paradigm, implementation strategy, instructional methods, and instructional techniques. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Pedagogy of teaching introductory text-based programming interms of computational thinking concepts and practices.,"Kandemir, Celal Murat; Kalelioğlu, Filiz; Gülbahar, Yasemin"
10613773,29,10.1002/cae.22357,1,Wiley-Blackwell,"Fostering of computational thinking (CT) skills has become an essential goal for engineering courses. This paper provides and discusses a teaching approach based on model-eliciting activity (MEA) for enhancing students' CT in existing engineering courses. To verify the proposed approach, experimental studies were performed with students in the practicum unit of a computer-aided engineering course. First, we investigated the feasibility of integrating CT training into the engineering courses through guiding students to perform a topicspecific design task. Second, we compared the influences of the MEA-based approach and conventional lecture-based approach on students' learning effect with respect to course objectives and CT skills. Results show the CT-integrated teaching did not at least weaken the teaching effect of the engineering course, and the MEA-based approach seems to be more conducive to strengthening students' skills of identifying and solving problems, as well as team cooperation. Results also show the learning effect of the MEA group has apparent advantages for enhancing CT skills. These findings suggest that using MEA in engineering courses is beneficial to promote students' CT skills in terms of simplification, embedding, transformation, and simulation. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Enhancing computational thinking in undergraduate engineering courses using model-eliciting activities.,Zhuo Liu; Jianwen Xia
10613773,29,10.1002/cae.22291,1,Wiley-Blackwell,"This study proposes design science research (DSR) as a relevant framework for computational thinking, software engineering, and science, technology, engineering, arts and mathematics integration in higher education. We present four concrete case examples, where DSR has been applied in projects that consist of interdisciplinary teams, which learn by designing solutions for pressing real-world problems. Our results show that DSR is a potent framework for learning to tackle pressing and wicked problems, and connecting technology projects with research methodology and knowledge from other fields. Our results also show multiple learning gains, including creativity, communication, critical thinking and collaboration. Based on our case analysis, we recommend more extensive use of DSR in future technology curricula. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Design science research for learning software engineering and computational thinking: Four cases.,"Apiola, Mikko; Sutinen, Erkki"
10613773,29,10.1002/cae.22255,1,Wiley-Blackwell,"Computer programming is being introduced in educational curricula, even at the primary school level. One goal of this implementation is to teach computational thinking (CT), which is potentially applicable in various computational problem-solving situations. However, the educational objective of CT in primary schools is somewhat unclear: curricula in various countries define learning objectives for topics, such as computer science, computing, programming or digital literacy but not for CT specifically. Additionally, there has been confusion in concretely and comprehensively defining and operationalising what to teach, learn and assess about CT in primary education even with popular programming akin to Scratch. In response to the growing demands of CT, by conducting a literature review on studies utilising Scratch in K-9, this study investigates what kind of CT has been assessed in Scratch at the primary education level. As a theoretical background for the review, we define a tangible educational objective for introducing CT comprehensively in primary education and concretise the fundamental skills and areas of understanding involved in CT as its ""core educational principles"". The results of the review summarise Scratch programming contents that students can manipulate and activities in which they can engage that foster CT. Moreover, methods for formatively assessing CT via students' Scratch projects and programming processes are explored. The results underpin that the summarised ""CT-fostering"" programming contents and activities in Scratch are vast and multidimensional. The next steps for this study are to refine pedagogically meaningful ways to assess CT in students' Scratch projects and programming processes. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Computational thinking in programming with Scratch in primary schools: A systematic review.,"Fagerlund, Janne; Häkkinen, Päivi; Vesisenaho, Mikko; Viiri, Jouni"
10613773,29,10.1002/cae.22321,1,Wiley-Blackwell,"The present research is part of the government funded project called Young Engineer's Workshop (YEW), a 2-week-long summer camp for youngsters to stimulate their interest in coding, electronics and robotics subjects in particular and STEAM fields in general. The YEW curriculum included basic electronics, block-based programming and robotics through Scratch and Arduino, and student projects on building robotics systems. This experimental study aimed to investigate the cognitive and affective consequences of YEW on the development of middle and high school students' computational thinking (CT) competences. The research methodology was based on a one-group pretest-posttest model within a quasi-experimental design. Participants were 17 students from grades 5-6 and 15 students from grades 9-10 in a southwestern city of Turkey. Both quantitative and qualitative data were collected through the YEW application form, a scale for CT, a satisfaction questionnaire, and student diaries. The results showed a significant increase on algorithmic and critical thinking factors of CT whereas no significant changes in creativity, cooperation, and problem-solving factors of CT. Students reported affective gains including high satisfaction and enjoyment of YEW activities, increased interest, and career planning in programming and robotics fields, and improved self-confidence in robotics project development. In conclusion, the study suggests that teaching programming can be an effective way to foster CT to some extent but not an adequate or complete solution. Educators need to seek more suitable teaching methods for a more comprehensive learning of CT that can be transferable to noncomputing contexts. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,The consequences of robotics programming education on computational thinking skills: An intervention of the Young Engineer's Workshop (YEW).,Ebru Yilmaz Ince; Mustafa Koc
22372903,7,,2,FACS Servicos Educacionais S.A.,"Cognition is a process of knowledge acquisition based on sensory experiences, thoughts, representation and records [1]. The cognitive development is related to the improvement of the abilities to reasoning skills, decision-making, memorizing and realizing the environment, which in its turn are related to the fundamental practices of computer programming. Since the Sociedade Brasileira de Computação (SBC) argues that the teaching programming logic in elementary school is fundamental. We saw the possibility to stimulate this skill with game programming practices. This paper presents the developed platform, as well the experience acquired so far. In general, it can be noticed that the game increased the cognitive perception, the computational thinking, and the digital inclusion of the majority of the children as well. (English) [ABSTRACT FROM AUTHOR] A cognição é um processo de aquisição do conhecimento que se baseia em experiências sensoriais, pensamentos, representações e recordações [1]. O desenvolvimento cognitivo está relacionado ao aprimoramento das habilidades de raciocinar, tomar decisões, memorizar e perceber o ambiente, que por sua vez se relacionam as práticas fundamentais da programação de computadores. Visto que a Sociedade Brasileira de Computação (SBC) defende que é fundamental o ensino da lógica de programação na educação básica, viu-se a possibilidade de estimular esse desenvolvimento com práticas de programação de jogos. Este trabalho apresenta a plataforma desenvolvida, assim como a experiência adquirida até o momento. De forma geral, pode-se notar que o jogo permitiu a evolução cognitiva da maioria das crianças, o pensamento computacional, assim como possibilitou a inclusão digital das mesmas. (Portuguese) [ABSTRACT FROM AUTHOR] Copyright of Computing & System Journal (C&S) / Revista de Sistemas e Computação (RSC) is the property of FACS Servicos Educacionais S.A. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computing & System Journal (C&S) / Revista de Sistemas e Computação (RSC),ENSINO DO PENSAMENTO COMPUTACIONAL NA EDUCAÇÃO BÁSICAv.,"Eduardo Schlögl, Lucas; Castellani de Oliveira, Gabriel; Carlo Giovanella, Gian; Bizon, Artur; Santos, Bruno; Kruger, Nathan; Bursoni, Pedro; Buerger Neumann, Cedrik; Eli Huber, Emiliane; Pereira de Araújo, Luciana; Marcelo Mattos, Mauro; Durieux Zucco, Fabrícia; Zendron, Karina; Hein, Nelson"
08993408,32,10.1080/08993408.2022.2079864,3,Taylor & Francis Ltd,,Computer Science Education,Unravelling the numerical and spatial underpinnings of computational thinking: a pre-registered replication study.,"Finke, Sabrina; Kemény, Ferenc; Sommer, Markus; Krnjic, Vesna; Arendasy, Martin; Slany, Wolfgang; Landerl, Karin"
10613773,28,10.1002/cae.22295,5,Wiley-Blackwell,"Computational thinking is of growing interest to the science, technology, engineering, and mathematics (STEM) education research community. Calls from national agencies look to increase computation in STEM education. This review identifies key areas for future study by reviewing recent empirical studies that investigate computational thinking in teaching and learning contexts within higher education. Using a systematic process, this review identified four different databases for peer‐reviewed research articles using keywords. Results were evaluated against inclusion and exclusion criteria. Studies were analyzed for types of methods, target population, the role of computational thinking, pedagogical designs used, and significant findings of the study. This process resulted in a final set of 13 studies. The results indicate that computational thinking research in higher education is growing, yet there are opportunities for more research. The findings of this study highlight the need for more concrete definitions and implementations of computational thinking within higher education spaces. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Computational thinking in higher education: A review of the literature.,"Lyon, Joseph A.; J. Magana, Alejandra"
07356331,58,10.1177/0735633120905605,5,Sage Publications Inc.,"In this work, we examine whether repeated participation in an after-school computing program influenced student learning of computational thinking concepts, practices, and perspectives. We also examine gender differences in learning outcomes. The program was developed through a school–university partnership. Data were collected from 138 students over a 2.5-year period. Data sources included pre–post content assessments of computational concepts related to programming in addition to computational artifacts and interviews with a purposeful sample of 12 participants. Quantitative data were analyzed using statistical methods to identify gains in pre- and post-learning of computational thinking concepts and examine potential gender differences. Interview data were analyzed qualitatively. Results indicated that students made significant gains in their learning of computational thinking concepts and that gains persisted over time. Results also revealed differences in learning of computational thinking concepts among boys and girls both at the beginning and end of the program. Finally, results from student interviews provided insights into the development of computational thinking practices and perspectives over time. Results have implications for the design of after-school computing programs that help broaden participation in computing. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,"A Multiyear Investigation of Student Computational Thinking Concepts, Practices, and Perspectives in an After-School Computing Program.","Mouza, Chrystalla; Pan, Yi-Cheng; Yang, Hui; Pollock, Lori"
10494820,28,10.1080/10494820.2018.1534245,4,Taylor & Francis Ltd,"The role of programming in computing education for children has grown rapidly in recent years with the proliferation of specially designed programming tools, which is grounded on Seymour Papert's theoretical work in Constructionism. Studies show that some children can develop computational thinking skills and practices with programming activities when learning with the tools through a well-design curriculum in elementary education (or primary education). However, existing studies may not completely address whether programming skills and computational thinking can be connected to the development of other generic skills, which are considered important to the learning and cognitive development of children. This study investigates the impact of programming on three learning competencies (creative thinking, critical thinking and problem solving) known as twenty-first century skills. The conceptual mapping between programming, computational thinking and the three learning competencies is presented. In a one-year intervention in a primary school, students were taught how to build interactive games through programming, and thus explored some basic computational thinking concepts in class. Our results show that children perceived a significant impact of programming on their learning competencies. Yet, the transferability of twenty-first century skills developed through computational thinking and programming may require a further study. Our study provides insights from children as primary respondents to help direct future research in the field of programming and computational thinking education and its potential impact on twenty-first century skills. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Exploring children's perceptions of developing twenty-first century skills through computational thinking and programming.,"Wong, Gary Ka-Wai; Cheung, Ho-Yin"
10494820,28,10.1080/10494820.2019.1612448,3,Taylor & Francis Ltd,"The potential benefits from the introduction of programming environments such as Scratch for learning mathematics has reactivated research in this area. Nonetheless, there are few studies which attempt to analyse their influence at the stage of Primary Education. We present the results of a quasi-experimental piece of research with sixth-grade students which studies the influence of Scratch both on the acquisition of mathematical concepts, and on the development of computational thinking. The experiment consisted of two different phases, a programming phase linked to the instruction in Scratch and focused on the acquisition of basic concepts of computational thinking (sequences, iterations, conditionals, and events-handling), and a mathematical phase completely oriented towards the resolution of mathematical tasks. In particular, the mathematical phase focused on word problems whose resolution involves the use of the least common multiple and the greatest common divisor. In order to evaluate the aims of the study, results from tests before and after instruction, both in computational thinking and in the mathematical standards, were compared. The results seem to indicate that Scratch can be used to develop both students' mathematical ideas and computational thinking. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Computational thinking and mathematics using Scratch: an experiment with sixth-grade students.,"Rodríguez-Martínez, José Antonio; González-Calero, José Antonio; Sáez-López, José Manuel"
10494820,28,10.1080/10494820.2019.1612445,3,Taylor & Francis Ltd,"A key debate in computer science education is whether and how computational thinking (CT) is used within disciplines other than computer science. Broad definitions provide many avenues for developing integrated instruction, as practices within existing activities can simply be reframed in terms of CT. But such general use of the term CT may confuse its meaning and dilute its power as a tool for bringing CS to all. In this paper, we take the viewpoint that mathematical thinking and computational thinking share common practices, such as using repetition to accomplish tasks, but these shared ideas may develop differently in mathematics and computer science. We use document analysis to analyze the K-5 Common Core State Standards for Mathematics for the presence of these common practices and describe the specific ways they develop in mathematics. We compare these elements of mathematical thinking to related elements of CT to identify synergies and differences between CT and mathematical thinking. We argue that these synergies and differences have implications for the development of integrated instruction designed to bring CS to all. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Synergies and differences in mathematical and computational thinking: implications for integrated instruction.,"Rich, Kathryn M.; Spaepen, Elizabet; Strickland, Carla; Moran, Cheryl"
10494820,28,10.1080/10494820.2019.1636071,3,Taylor & Francis Ltd,"This paper situates a critical review of studies that we have conducted within the broader research literature to analyze the affordances of integrating modeling within disciplinarily-integrated games from computational thinking and science as practice perspectives. Across the studies, the analyses pursue two themes: (a) the role of agent-based modeling as a synergistic local practice around which we can integrate computational thinking and scientific modeling within digital games and (b) the role of collaboration in leveraging those synergies. We then present a design of a disciplinarily-integrated game that integrates these themes to demonstrate one such possible instantiation of the themes. Finally, we discuss the implications for design and praxis with a particular focus on learning in classrooms across the curriculum. Specifically, we first explore the implications in terms of connecting to teachers' views of practice by framing computational modeling and computational thinking as mathematization. We then explore the implications of shifting from a focus on single players to communities of practice in terms of computational participation as science as practice. We close by exploring the pragmatic and pedagogical affordances of shifting from stand-alone single-topic games to flexible agent-based environments in terms of student development across the curriculum. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Reconceptualizing games for integrating computational thinking and science as practice: collaborative agent-based disciplinarily-integrated games.,"Clark, Douglas B.; Sengupta, Pratim"
07356331,58,10.1177/0735633119845694,2,Sage Publications Inc.,"This study aims to investigate problem-solving with dataset (PSWD) as a computational thinking learning implementation as reflected in academic publications. Specifically, the purpose is to specify the scope of PSWD, which overlaps with the data literacy, thinking with data, big data literacy, and data-based thinking concepts in the literature. Subaims of the study are to identify the conceptual structure of PSWD based on definitions in academic publications and to classify the reasons given in the literature to show the need for PSWD. For the purposes to investigate PSWD conceptually, to classify the reasons given for the need for PSWD, the obtained 54 publications were analyzed via content analysis. Moreover, this study investigates the most frequently suggested or used teaching strategies (in terms of instructional methods, instructional tools, and grade level) for PSWD in the literature. The frequencies of used words in selected publications referring instructional methods, instructional tools, and grade levels were shown in the findings of study. The importance of the study stems from its focus on a new approach to computational thinking instructional implementation. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,"Investigating ""Problem-Solving With Datasets"" as an Implementation of Computational Thinking: A Literature Review.","Berikan, Burcu; Özdemir, Selçuk"
1385951X,21,10.1007/s10799-019-00299-9,1,Springer Nature,"Modern society needs to think of new approaches for solving problems with computing. Computational thinking is the process of abstracting and automating a variety of problems using computational technology. A system that expresses, manages, and processes knowledge such as computational thinking is called a knowledge-based system. This paper proposes to examine students' knowledge about computational thinking when they want to develop a Python project, and the correlation/association between these concepts. To achieve our goal, a field study was designed and data were collected from a computer programming lecture. Through this data analysis, we try to identify the factors through the correlation between data and clustering technique in order to express and discover the knowledge about the learner's computational thinking. For the verification of the factors identified, we analyzed the correlation between computational thinking and the pre- and post-test results of the LightBot. In addition to the regression analysis of the proven factors, the probability of the research model was analyzed through the structural equation to process the knowledge discovered. In this paper, we present various problems in the domain of programming education and analyze the means to diagnose and improve knowledge based on computational thinking by finding various problem-solving methods. To pre-examine the learner; he/she was diagnosed using a test paper and the LightBot execution test. We checked the learner's current knowledge state by analyzing the correlation between the test site and the results of the LightBot. To analyze the level of knowledge improvement of learners, we designed an experiment to analyze the correlation between learning and the actual test results through a system that applied the problem-solving learning method. An analysis of the experimental results demonstrated that there was a correlation between the test results for a learner and the pre-test results of the LightBot. Additionally, the group mean scores of the learners who learned as per the proposed technique were observed to be significant. During this process, we analyzed the effects of problem-solving and system application on academic achievement through factor analysis, regression analysis, and structural equation modeling. The ability to pinpoint various problem scenarios and solve problems more effectively using computational technologies will become more important in future. For this purpose, applying our proposed technique for deriving and improving knowledge based on computational thinking to software education will induce the interest of students and increase the learning effect. [ABSTRACT FROM AUTHOR] Copyright of Information Technology & Management is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Information Technology & Management,Knowledge representation for computational thinking using knowledge discovery computing.,"Lee, Youngseok; Cho, Jungwon"
10613773,28,10.1002/cae.22177,1,Wiley-Blackwell,"In the current implementation of K‐12 education, computational thinking is considered an important part of developing students' key abilities. Many studies have shown that computational thinking can be improved by programming, for example, using Scratch, App Inventor, and Python. However, different programming tools have different forms of programming that affect the development of learners' computational thinking. This study aimed to test the effects of different programming tools with the same teaching content on learners' computational thinking and computer learning attitude in real classroom teaching. Ninety‐nine participants took part in an eight‐week teaching intervention in the Visual Basic (text‐based) and Pencil Code (block‐based) programming environments. T tests showed that students learning in a mixed text‐based and block‐based Pencil Code programming environment not only had significantly improved computational thinking but also became more self‐confident and enjoyed learning programming. Furthermore, our interviews after the eight‐week teaching intervention found that students showed more communication and interaction behaviors learning with Pencil Code. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Pencil Code improves learners' computational thinking and computer learning attitude.,"Deng, Wenbo; Pi, Zhongling; Lei, Weina; Zhou, Qingguo; Zhang, Wenlan"
24144088,6,10.3390/mti6020013,2,MDPI,"There is a debate about the way to introduce computational thinking (CT) in schools. Different proposals are on the table; these include the creation of new computational areas for developing CT, the introduction of CT in STEM areas, and the cross-curricular integration of CT in schools. There is also concern that no student should be left behind, independently of their economic situation. To this effect, an unplugged approach is the most cost-effective solution. In addition, this topic is interesting in the context of a pandemic situation that has prevented the sharing of materials between students. This study analyzes an unplugged cross-curricular introduction of CT in the Social Sciences area among sixth grade students. A group of 14 students was selected to carry out an unplugged intervention design—where they were required to program an imaginary robot on paper—in the Social Sciences area. Their CT development and academic results were compared to those of 31 students from the control group who continued attending regular classes. Results showed that an unplugged teaching style of CT in Social Sciences lessons significantly increased CT (p < 0.001) and with a large effect size (d = 1.305) without differences in students' academic achievement. The findings show that children can potentially develop their CT in non-STEM lessons, learning the same curricular contents, and maintaining their academic results. [ABSTRACT FROM AUTHOR] Copyright of Multimodal Technologies & Interaction is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Multimodal Technologies & Interaction,Unplugged Activities in Cross-Curricular Teaching: Effect on Sixth Graders' Computational Thinking and Learning Outcomes.,"Merino-Armero, José Miguel; González-Calero, José Antonio; Cózar-Gutiérrez, Ramón; del Olmo-Muñoz, Javier"
20763417,13,10.3390/app13179842,17,MDPI,"Algorithmic music composition has been gaining prominence and recognition as an innovative approach to music education, providing students with opportunities to explore creativity, computational thinking, and musical knowledge. This study aims to investigate the impact of integrating algorithmic music composition in the classroom, examining its influence on student engagement, musical knowledge, and creative expression, as well as to enhance computational thinking skills. A mixed-method case study was conducted in three Basic Music Education classrooms in the north of Portugal, involving 71 participants (68 students and 3 music teachers). The results reveal: (i) both successes and challenges in integrating computational thinking concepts and practices; (ii) pedagogical benefits of integrating programming platforms, where programming concepts overlapped with music learning outcomes; and (iii) positive impact on participants' programming self-confidence and recognition of programming's importance. Integrating algorithmic music composition in the classroom positively influences student engagement, musical knowledge, and creative expression. The use of algorithmic techniques provides a novel and engaging platform for students to explore music composition, fostering their creativity, critical thinking, and collaboration skills. Educators can leverage algorithmic music composition as an effective pedagogical approach to enhance music education, allowing students to develop a deeper understanding of music theory and fostering their artistic expression. Future research should contribute to the successful integration of digital technologies in the Portuguese curriculum by further exploring the long-term effects and potential applications of algorithmic music composition in different educational contexts. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),Unleashing Creative Synergies: A Mixed-Method Case Study in Music Education Classrooms.,"Cardoso, Mário Anibal; Morgado, Elsa Maria Gabriel; Leonido, Levi"
00010782,61,10.1145/3214354,7,Association for Computing Machinery,"The author discusses computational thinking (CT), addressing its cognitive essence, universal value and curricular practice. Topics include concerns regarding how to integrate CT practices and skills into K-12 education, efforts to create more links between CT and cognition by identifying common patterns of information processing known to facilitate thinking, and the use of modeling and simulation to teach CT, scientific thinking, and engineering thinking skills.",Communications of the ACM,A New Perspective on Computational Thinking.,"Yașar, Osman"
00010782,60,10.1145/2994591,4,Association for Computing Machinery,"The article discusses the use of computational thinking in teacher education. Topics include the definition of computational thinking as an analytical thinking and problem solving skill drawing on concepts from computer science such as heuristics and algorithms, the importance of training teachers to incorporate computational thinking concepts and practices in elementary and secondary education given the cross-disciplinary nature of computational thinking, and the use of teacher education programs.",Communications of the ACM,Computational Thinking for Teacher Education.,"YADAV, AMAN; STEPHENSON, CHRIS; HAI HONG"
08993408,32,10.1080/08993408.2021.1935603,2,Taylor & Francis Ltd,,Computer Science Education,Interdisciplinary computational thinking with music and programming: a case study on algorithmic music composition with Sonic Pi.,"Petrie, Christopher"
08993408,32,10.1080/08993408.2021.1940787,2,Taylor & Francis Ltd,,Computer Science Education,Maintaining pluralism when embedding computational thinking in required science and engineering classes with young adolescents.,"Jackson, David W.; Cheng, Yihong"
08993408,32,10.1080/08993408.2021.1914459,2,Taylor & Francis Ltd,,Computer Science Education,Teaching computational thinking to exceptional learners: lessons from two inclusive classrooms.,"Prado, Yenda; Jacob, Sharin; Warschauer, Mark"
08993408,32,10.1080/08993408.2020.1866938,2,Taylor & Francis Ltd,,Computer Science Education,A Learning Trajectory for Variables Based in Computational Thinking Literature: Using Levels of Thinking to Develop Instruction.,"Rich, Kathryn M.; Franklin, Diana; Strickland, Carla; Isaacs, Andy; Eatinger, Donna"
07356331,58,10.1177/0735633119887187,5,Sage Publications Inc.,"Persistence has proven to be a great challenge in online learning environments. Gaming and interactivity have been suggested as essential features in reducing dropout and increasing persistence in online learning. Yet in interactive game-based learning environments, persistence in moving forward in the game may come at the expense of investing in each of the game's levels. That is, the motivation to complete the game may have a deleterious effect on learning at specific levels and hence on learning from the game in general. Therefore, we have chosen to focus on microlevel persistence (i.e., persistence during each component of the learning process). We study microlevel persistence in the context of acquiring computational thinking—the thought process of solving problems through abstraction—which is a key component of the new literacies needed for tomorrow's citizens. In this study, we analyze data collected from an online, game-based learning environment (CodeMonkey™). The data document the activity of first to sixth graders (N = 2,040). Overall, we find that persistence is positively associated with difficulty and that the most determined learners were highly persistent across topics in achieving the best solution. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Persistence in a Game-Based Learning Environment: The Case of Elementary School Students Learning Computational Thinking.,"Israel-Fishelson, Rotem; Hershkovitz, Arnon"
10494820,28,10.1080/10494820.2019.1636070,3,Taylor & Francis Ltd,"Decisions about participation in computer science and engineering opportunities are often made prior to high school, and these decisions are frequently mediated by prior experience, interest, and sense of fit with community. In this article, we investigate how the Digital Youth Divas, an out-of-school program for middle school girls from non-dominant communities, engaged participants in computational thinking linked to their broader interests, home networks, and continuing opportunities. Results indicate increases in knowledge measures for girls with and without prior learning experiences and provide evidence that through project work and a strong focus on building community, girls engaged in computational practices in ways that shifted or provided new computational perceptions about themselves and the domain. This exploratory study of the Digital Youth Divas program emphasizes the importance of understanding and supporting computational perceptions alongside deepening knowledge and experience. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Equitable approaches: opportunities for computational thinking with emphasis on creative production and connections to community.,"Pinkard, Nichole; Martin, C. K.; Erete, S."
10494820,28,10.1080/10494820.2019.1674883,3,Taylor & Francis Ltd,"In response to a need to equip youth to become successful contributors to our growing digital economy, educators and researchers are exploring ways to incorporate computational thinking (CT) for all across curricular domains. In this paper, we take a place-based approach to examine how and what CT practices youth learn through designing mobile games in and for their own communities. We conducted three after school workshops with 29 participants (13 female, 16 male, ages 10–16) in a rural city in the Western United States. Youth designed place-based, mobile games to share stories and experiences about local environmental or civic issues using the Augmented Reality and Interactive Storytelling (ARIS) programming platform. We collected and analyzed a range of data including field notes, design artifacts, screencasts, and final reflective interviews. Using Brennan and Resnick (2012) framework for studying and assessing the development of CT, we illustrate how youth engaged with CT practices and how their local topics facilitated their engagement with civic issues beyond the screen. Findings demonstrate how youth can engage with CT practices and their local communities through designing computational artifacts. We discuss implications for how leveraging place-based computational tools afford equitable and accessible CT integration in interdisciplinary contexts. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Engaging youth in computational thinking practices through designing place-based mobile games about local issues.,"Litts, Breanne K.; Lewis, Whitney E.; Mortensen, Chase K."
22111662,25,10.1007/s10758-018-9391-y,1,Springer Nature,"The aim of this research is to determine the effects of Scratch and Alice tools and programming teaching practices on student engagement, reflective thinking and problem-solving skills and computational thinking (CT) comparatively. A quasi-experimental design was used in the research and patterns with pretest–posttest control group were chosen for the variables. The study group was compromised of 110 students at 5th grade in 2016 spring semester. 1st and 2nd groups of Computing Technologies Course have been assigned objectively. Alice programming tool was preferred in the learning process of the 1st experimental group, whereas, Scratch programming tool was utilised in the 2nd study group during application process which lasted for 8 weeks. Results of the research show that programming teaching with Scratch has affected engagement and reflective thinking skills of the students for problem solving more positively than Alice. It has been stated that teaching with Alice affects skills related to CT of the students positively. Furthermore, some recommendations have been made for the future researches. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning","The Effects of Using Different Tools in Programming Teaching of Secondary School Students on Engagement, Computational Thinking and Reflective Thinking Skills for Problem Solving.","Yildiz Durak, Hatice"
08993408,31,10.1080/08993408.2020.1866933,2,Taylor & Francis Ltd,"Background and Context: While assessment of computational thinking concepts, practices, and perspectives is at the forefront of K-12 CS education, supporting student communication about computation has received relatively little attention. Objective: To examine the usability of process-based portfolios for capturing students' communication about their computational practices regarding the process of making electronic textile projects. Method: We examined the portfolios of 248 high school students in 15 introductory CS classrooms from largely underserved communities, using a formal rubric (top-down) to code computational communication and an open-coding scheme (bottom-up) to identify computational practices described. Findings: Students demonstrated stronger abilities to communicate about computation using text than visuals. They also reported under-assessed CT practices like debugging, iterating, and collaborating. Students of experienced e-textile teachers performed substantially better than those with novice e-textile teachers. Implications: Portfolios provide a viable addition to traditional performance or survey assessments and meet a need to promote communication skills. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Communicating about computational thinking: understanding affordances of portfolios for assessing high school students' computational thinking and participation practices.,"Fields, Deborah; Lui, Debora; Kafai, Yasmin; Jayathirtha, Gayithri; Walker, Justice; Shaw, Mia"
08993408,31,10.1080/08993408.2021.1877988,2,Taylor & Francis Ltd,"Background and Context: There is a need for early childhood assessments of computational thinking (CT). However, there is not consensus on a guiding framework, definition, or set of proxies in which to measure CT. We are addressing this problem by using Evidence Centered Design (ECD) to develop an assessment of kindergarten-aged children's CT. Objective: To present a design case on the development of the assessment, specifically the algorithmic thinking (AT) tasks and to share validity evidence that emerged. Method: We focus on the AT sub-component of CT and present the principled assessment design process using ECD. Findings: Our operationalization of CT includes spatial reasoning as a sub-component. Pilot results showed an acceptable internal consistency reliability for the AT items and critical design decisions that contributed to validity evidence. Implications: An important contribution of this work is the inclusion of spatial reasoning in our definition of early childhood CT. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Developing a kindergarten computational thinking assessment using evidence-centered design: the case of algorithmic thinking.,"Clarke-Midura, Jody; Silvis, Deborah; Shumway, Jessica F.; Lee, Victor R.; Kozlowski, Joseph S."
08993408,31,10.1080/08993408.2020.1866932,2,Taylor & Francis Ltd,"Background and Context: This study looks at computational thinking (CT) assessment of programming artifacts within the context of CT integrated with science education through computational modeling. Objective: The goal is to explore methodologies for assessment of student-constructed computational models through two lenses: functionality and conceptual fluency. Method: This study uses data from research with EcoMOD, a 3rd grade ecosystem science curriculum in which student pairs program computational models of a beaver building a dam. Snapshots of programs for 47 student pairs collected over time are assessed. Findings: A functionality-based rubric provided assessment of student task progress, but was less successful at correctly identifying CT gains in programs that were partially correct. A rubric for conceptual fluency identified development of fluency in CT concepts of sequencing, loops, and conditionals. Implications: This study contributes to the literature by exploring affordances of different rubric-based CT assessments of student programs. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Assessing computational thinking through the lenses of functionality and computational fluency.,"Metcalf, Shari J.; Reilly, Joseph M.; Jeon, Soobin; Wang, Annie; Pyers, Allyson; Brennan, Karen; Dede, Chris"
07356331,59,10.1177/0735633120965919,3,Sage Publications Inc.,"Educational games have been increasingly used to improve students' computational thinking. However, most existing games have focused on the theoretical knowledge of computational thinking, ignoring the development of computational thinking skills. Moreover, there is a lack of integration of adaptivity into educational computer games for computational thinking, which is crucial to addressing individual needs in developing computational thinking skills. In this study, we present an adaptive educational computer game, called AutoThinking, for developing students' computational thinking skills in addition to their conceptual knowledge. To evaluate the effects of the game, we conducted an experimental study with 79 elementary school students in Estonia, where the experimental group learned with AutoThinking, while the control group used a traditional technology-enhanced learning approach. Our findings show that learning with the adaptive educational computer game significantly improved students' computational thinking related to both conceptual knowledge and skills. Moreover, students using the adaptive educational computer game showed a significantly higher level of interest, satisfaction, flow state, and technology acceptance in learning computational thinking. Implications of the findings are also discussed. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,From Gaming to Computational Thinking: An Adaptive Educational Computer Game-Based Learning Approach.,"Hooshyar, Danial; Pedaste, Margus; Yang, Yeongwook; Malva, Liina; Hwang, Gwo-Jen; Wang, Minhong; Lim, Heuiseok; Delev, Dejan"
25044990,5,10.3390/make5040082,4,MDPI,"In an era characterised by rapid technological advancement, the application of algorithmic approaches to address complex problems has become crucial across various disciplines. Within the realm of education, there is growing recognition of the pivotal role played by computational thinking (CT). This skill set has emerged as indispensable in our ever-evolving digital landscape, accompanied by an equal need for effective methods to assess and measure these skills. This research places its focus on the Cross Array Task (CAT), an educational activity designed within the Swiss educational system to assess students' algorithmic skills. Its primary objective is to evaluate pupils' ability to deconstruct complex problems into manageable steps and systematically formulate sequential strategies. The CAT has proven its effectiveness as an educational tool in tracking and monitoring the development of CT skills throughout compulsory education. Additionally, this task presents an enthralling avenue for algorithmic research, owing to its inherent complexity and the necessity to scrutinise the intricate interplay between different strategies and the structural aspects of this activity. This task, deeply rooted in logical reasoning and intricate problem solving, often poses a substantial challenge for human solvers striving for optimal solutions. Consequently, the exploration of computational power to unearth optimal solutions or uncover less intuitive strategies presents a captivating and promising endeavour. This paper explores two distinct algorithmic approaches to the CAT problem. The first approach combines clustering, random search, and move selection to find optimal solutions. The second approach employs reinforcement learning techniques focusing on the Proximal Policy Optimization (PPO) model. The findings of this research hold the potential to deepen our understanding of how machines can effectively tackle complex challenges like the CAT problem but also have broad implications, particularly in educational contexts, where these approaches can be seamlessly integrated into existing tools as a tutoring mechanism, offering assistance to students encountering difficulties. This can ultimately enhance students' CT and problem-solving abilities, leading to an enriched educational experience. [ABSTRACT FROM AUTHOR] Copyright of Machine Learning & Knowledge Extraction is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Machine Learning & Knowledge Extraction,Proximal Policy Optimization-Based Reinforcement Learning and Hybrid Approaches to Explore the Cross Array Task Optimal Solution.,"Corecco, Samuel; Adorni, Giorgia; Gambardella, Luca Maria"
02664909,40,10.1111/jcal.12976,4,Wiley-Blackwell,"Background: Science teachers' understanding of the roles of computing practices in science frame how they enact scientific computational practices in their teaching and how their students perceive the relationship between computational practices and scientific endeavours. Objectives: This critical, integrative review synthesizes teacher learning literature about the role of computational literacy and computing practices in K‐12 science teaching. Methods: We examined 54 peer‐reviewed articles and analysed the ways the researchers and teacher participants describe the affordances of integrating computational thinking (CT) and other computational practices in science. We characterize how CT and computational practices are framed in relation to scientific learning goals. We identify six primary affordances for integrating computational practices with science that are conveyed to teachers and by teachers, as represented in these studies of teacher learning. Results and Conclusions: These six perspectives include (1) learning computer science principles, (2) developing CT dispositions, (3) engagement and inclusion in science, (4) taking ownership of science, (5) supporting learning science content, and (6) participating in computational practice as a form of scientific epistemic practice. Our analysis indicates that computational thinking and computational practices are often integrated in science in order to teach something about computing (e.g., Perspective 1), rather than to support learners' scientific work. Only the 29 articles coded for the sixth perspective—that is, in service of epistemic aims in science—demonstrate commitment to students' uses of computational ideas and practices as epistemic tools to participate in the sensemaking work of science. Takeaways: Comparison of Perspectives 5 and 6 illustrates the nuance between computational practices in science that reify something students have already ""figured out,"" rather than those that serve epistemic goals. Perspective 6 encapsulates the deep synergy among (1) the reflexive nature of computing with scientific ideas and (2) computing as a central practice in science and engineering. We contend that a more focused message of computational practices in service of scientific sensemaking goals is necessary if we expect teachers to enact CT and related computational practices in their classrooms. Lay Description: What is already known about this topic?: Science teachers' understanding of the roles of computing practices in science frame how they enact scientific computational practices in their teaching. What this paper adds?: We analysed 54 peer‐reviewed articles regarding teacher learning about the role of computational literacy and computing practices in K‐12 science teaching.We characterized the ways the researchers and teacher participants describe the affordances of integrating computational thinking (CT) and other computational practices in science.We present six primary affordances for integrating computational practices with science that are conveyed to teachers and by teachers, as represented in these studies of teacher learning. These six perspectives include (1) learning computer science principles, (2) developing CT dispositions, (3) engagement and inclusion in science, (4) taking ownership of science, (5) supporting learning science content, and (6) computational practices in service of epistemic aims in science. Implications for practice and/or policy: We find that computational thinking and computational practices are often integrated in science in order to teach introductory computer science principles, but not to support the original science learning aims.Only the 29 of 54 articles demonstrate commitment to students' uses of computational ideas and practices as epistemic tools to participate in the sensemaking work of science.We contend that a more focused message of computational practices in service of scientific sensemaking goals is necessary if we expect teachers to enact CT and related computational practices in their classrooms. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Getting a grip on how we talk about computational practices in science in settings of teacher learning.,"Farris, Amy Voss; McLaughlin, Gözde"
22512195,,10.5176/2251-2195_CSEIT17.69,,Global Science & Technology Forum,"The subject of teaching computer programming has grown substantially in recent years. The advent of interactive ebooks, online sites (e.g. CodeAcademy), youth directed tools (e.g. Scratch, Tynker) and the vast library of open source code, have dramatically changed the landscape of computer programming pedagogy. These tools each purport to address different audiences as well as varying skill sets of student programmers, such as coding literacy and computational thinking, key abilities of successful programmers. However, developing computational thinking, which is similar to generic problem-solving, remains difficult and elusive in many educational programs and online pedagogical tools. We analyze, from an educational psychology perspective, how well-known educational tools develop computational thinking abilities and we provide suggestions for future tool development. [ABSTRACT FROM AUTHOR] Copyright of Annual International Conference on Computer Science Education: Innovation & Technology is the property of Global Science & Technology Forum and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Annual International Conference on Computer Science Education: Innovation & Technology,Available Educational Tools' Impact on Developing Computational Thinking.,"Moody, Douglas L.; Schwartz, Anna"
24144088,8,10.3390/mti8020011,2,MDPI,"There is a limited amount of research dedicated to designing and developing computing curricula specifically tailored for students with autism spectrum disorder (ASD), and thus far, no study has examined the effectiveness of an accessible computing curriculum designed specifically for students with ASD. The goal of this study is to evaluate the effectiveness of an accessible curriculum in improving the learning of computational thinking concepts (CTCs) such as sequences, loops, parallelism, conditionals, operators, and data, as well as the development of proficiency in computational thinking practices (CTPs) including experimenting and iterating, testing and debugging, reusing and remixing, and abstracting and modularizing. The study involved two groups, each comprising twenty-four students. One group received instruction using the accessible curriculum, while the other was taught with the original curriculum. Evaluation of students' CTCs included the analysis of pretest and posttest scores for both groups, and their CTPs were assessed through artifact-based interview scores. The results indicated improvement in both groups concerning the learning of CTCs, with no significant difference between the two curricula. However, the accessible computing curriculum demonstrated significant enhancements in students' proficiency in debugging and testing, iterating and experimenting, modularizing and abstracting, as well as remixing and reusing. The findings suggest the effectiveness of accessible computing curricula for students with ASD. [ABSTRACT FROM AUTHOR] Copyright of Multimodal Technologies & Interaction is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Multimodal Technologies & Interaction,Assessing the Efficacy of an Accessible Computing Curriculum for Students with Autism Spectrum Disorders.,"Arslanyilmaz, Abdu; Briley, Margaret L.; Boerio, Gregory V.; Petridis, Katie; Ilyas, Ramlah"
22546529,6,10.17993/3ctic.2017.56.38-51,2,"Area de Innovacion y Desarrollo, SL","In the Faculty of Computer Science of the University of Granma there is the geographical information system Tourdroid Bayamo for mobile devices with Android support in version 2.3 or higher. It is a virtual guide that associates geographic and visual information of sites of historical, economic and cultural interest of the region. The research aims to create a computer system to streamline the process of design and management of virtual tours for Tourdroid. (English) [ABSTRACT FROM AUTHOR] En la Facultad de Ciencias Informáticas de la Universidad de Granma existe el sistema de información geográfica Tourdroid Bayamo para dispositivos móviles con soporte Android en su versión 2.3 o superior. Es una guía virtual que asocia información geográfica y visual de sitios de interés histórico, económico y cultural de la región. La investigación tiene como objetivo crear un sistema informático para agilizar el proceso de diseño y gestión de los recorridos virtuales para Tourdroid. (Spanish) [ABSTRACT FROM AUTHOR] Copyright of 3C TIC is the property of Area de Innovacion y Desarrollo, SL and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",3C TIC,SISTEMA INFORMÁTICO PARA EL DISEÑO Y GESTIÓN DE RECORRIDOS VIRTUALES PARA TOURDROID.,"de la Cruz Leyva, Viana; Ortiz Pacheco, Yoel Adrián; Enamorado Selema, Noel Ernesto"
15473716,10,,1,Association for Computer Educators in Texas,"Computational thinking is thinking like a computer scientist, the kind of thinking absolutely required to formulate computational solutions to algorithmic problems. Aristotle wrote, ""For things we have to learn before we can do them, we learn by doing them."" Which begs the question: How can a student do something that the student has not yet learned to do? Answer: Let the expert (teacher) do it with them, but provide a way for the student to actively participate in the process. Expert show-and-tell programs do not actively involve the student. The sink-or-swim approach, which requires the student to write large programs from scratch with little or no expert help, does actively involve the student, but ""swimmers"" are usually students who already can think computationally, whereas ""sinkers"" are students who cannot. This paper's answer for fostering computational thinking, the programming case study, requires the student to fully understand the problem and to actively engage in resolving it by answering computational thinking questions and by supplying ""missing code"" segments. A case study includes: 1) an introduction of background material required by the student to understand the statement of the problem and its solution; 2) a clear statement of the problem; 3) a sample of the program/user dialog to provide the student with test data; 4) a collection of computational/critical thinking questions which are keyed to the program listing; and 5) the program listing with code segments strategically elided which become the student's responsibility (aka, ""missing code""). [ABSTRACT FROM AUTHOR] Copyright of ACET Journal of Computer Education & Research is the property of Association for Computer Educators in Texas and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ACET Journal of Computer Education & Research,Using Programming Case Studies to Foster Computational Thinking.,"Hanna, Arthur D."
15391523,53,10.1080/15391523.2020.1760754,2,Taylor & Francis Ltd,"Over the past 7 years, we pioneered the development of a program blending dance choreography, computer programming, and a virtual environment to teach computational thinking, broadening pathways for more diverse students. We investigated the ways in which upper elementary and middle school students creating dance performances for virtual characters utilize embodied ways of thinking to engage with computational concepts, practices, and perspectives. Through quantitative and qualitative data analysis from five research contexts, we found that (a) students' computational thinking abilities improved; (b) distinct relationships formed between social, embodied interactions and student engagement with the virtual platform; and (c) students shifted their mental models of who computer scientists are and what they do after our interventions. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Coding moves: Design and research of teaching computational thinking through dance choreography and virtual interactions.,"Leonard, Alison E.; Daily, Shaundra B.; Jörg, Sophie; Babu, Sabarish V."
,,10.1145/3308561.3354608,21,Association for Computing Machinery,"Torino is a tangible programming environment designed for teaching the computational thinking curriculum in the UK to children who are blind or low vision (henceforth, just children) in an inclusive setting. In this paper we describe the experience of children in Bangalore, India, when Torino was introduced to them as a toy for creating and sharing stories, songs and music. We conducted 12 play sessions with 12 children (4 girls and 8 boys) with diverse backgrounds belonging to three different schools for the blind. We briefly present the reasons for play being central to our effort of bringing computational thinking to children who are blind and low vision in India, and share some experiences of the children and some insights that we have gathered so far: Children not only enjoyed every session, they rapidly moved from playing with pre-created examples, to making changes, to demanding that their favorite stories be told. In observing such play, we could infer that they have grasped the basic concepts of computational thinking? flow of control, variables, loops? though not articulated in that vocabulary. [ABSTRACT FROM AUTHOR] Copyright of ACM SIGACCESS Conference on Computers & Accessibility is the property of Association for Computing Machinery and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ACM SIGACCESS Conference on Computers & Accessibility,Computational Thinking as Play: Experiences of Children who are Blind or Low Vision in India.,"India, Gesu; Ramakrishna, Geetha; Bisht, Jyoti; Swaminathan, Manohar"
10494820,27,10.1080/10494820.2019.1610451,05-jun,Taylor & Francis Ltd,"Many worldwide initiatives consider both creativity and computational thinking as crucial skills for future citizens, making them a priority for today's learners. We studied the associations between these two constructs among middle school students (N = 57), considering two types of creativity: a general creative thinking, and a specific computational creativity. We did so using learning analytics, specifically, by operationalizing a log-based assessment of computational creativity. We find some evidence for an association between Computational Creativity and Computational Thinking: Demonstrating originality in an early stage of the game is associated with succeeding in this stage relatively easily, however negatively associated with progressing farther in the game. We also find that Computational Creativity is better explained by a state- rather than a trait-model. No associations were found between Creative Thinking and Computational Thinking. Furthermore, we find some striking associations between the two measures of creativity. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Creativity in the acquisition of computational thinking.,"Hershkovitz, Arnon; Sitman, Raquel; Israel-Fishelson, Rotem; Eguíluz, Andoni; Garaizar, Pablo; Guenaga, Mariluz"
07380569,36,10.1080/07380569.2019.1639593,3,Taylor & Francis Ltd,"The Ministry of Education in Saudi Arabia implemented a new computer science curriculum in 2008. There was speculation that many computer science teachers did not possess sufficient knowledge of computational thinking needed to teach this subject. To investigate this topic, a quantitative research study was conducted with 55 male computer science teachers in Riyadh, Saudi Arabia. Results of the study revealed that most of the computer science teachers had a low conceptual level of computational thinking, and some of the teachers had misconceptions about the exact nature of computational thinking. Findings indicated that computer science teachers did indeed need more training in what computational thinking means and how to teach this subject. [ABSTRACT FROM AUTHOR] Copyright of Computers in the Schools is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in the Schools,Exploring Saudi Computer Science Teachers' Conceptual Mastery Level of Computational Thinking Skills.,"Alfayez, Abdulaziz A.; Lambert, Judy"
07356331,57,10.1177/0735633117743918,1,Sage Publications Inc.,"The Computer Science Teachers Association has asserted that computational thinking equips students with essential critical thinking which allows them to conceptualize, analyze, and solve more complex problems. These skills are applicable to all content area as students learn to use strategies, ideas, and technological practices more effectively as digital natives. This research examined over 200 elementary students' pre- and posttest changes in computational thinking from a 10-week coding program using adapted lessons from code.org's Blockly programming language and CSUnplugged that were delivered as part of the regular school day. Participants benefited from early access to computer science (CS) lessons with increases in computational thinking and applying coding concepts to the real world. Interviews from participants included examples of CS connections to everyday life and interdisciplinary studies at school. Thus, the study highlights the importance of leveraging CS access in diverse elementary classrooms to promote young students' computational thinking; motivation in CS topics; and the learning of essential soft-skills such as collaboration, persistence, abstraction, and creativity to succeed in today's digital world. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Computational Thinking Equity in Elementary Classrooms: What Third-Grade Students Know and Can Do.,"Tran, Yune"
00010782,62,10.1145/3265747,3,Association for Computing Machinery,"The article discusses the use of computational action as a framework for computing education in order for students to both learn about computing, through computational thinking, and create with computing. Topics include the use of computational action to make computing education more inclusive, motivating, and empowering for students, the two dimensions of computational action which are computational identity and digital empowerment, and the application of computing skills in problem-based learning.",Communications of the ACM,Viewpoint From Computational Thinking to Computational Action: Envisioning computing education that both teaches and empowers.,"Tissenbaum, Mike; Sheldon, Josh; Abelson, Hal"
03601315,210,10.1016/j.compedu.2023.104961,,Elsevier B.V.,"In this paper, we review and meta-analyze the findings of experimental studies published between 2006 and 2022 that examined the effects of coding and programming interventions on children's core and higher order executive functions (response inhibition, working memory, cognitive flexibility, planning and problem solving). The systematic review and meta-analysis aimed to address three research questions: 1) Which executive functions are most impacted by the teaching of CT? 2) Which instructional modality (educational robotics/virtual coding/unplugged coding) is most effective in enhancing executive function skills in learners aged 4–16 years? and 3) Does the cognitive effectiveness of coding vary with children's age? A total of 19 studies with 1523 participants met the selection criteria for the systematic review. The meta-analysis included 11 of those studies. The results reveal beneficial effects of structured virtual and tangible coding (educational robotics) activities for preschoolers and first graders, and significant effects of more unstructured virtual coding activities (e.g., Scratch-based) for older students. A multivariate fixed-effects model meta-analysis shows that the teaching of coding significantly improves problem-solving with the highest effect (d ppc2 = 0.89), but also planning (d ppc2 = 0.36), and inhibition and working memory with lower effects (d ppc2 = 0.17, d ppc2 = 0.20). • Structured virtual and educational robotics activities improve younger children's EFs and problem solving. • Unstructured virtual coding activities are effective in boosting the problem solving skills of older students. • Coding interventions improve higher order EFs, more than elementary EFs. • The largest effects of coding interventions are observed on problem-solving. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,The cognitive effects of computational thinking: A systematic review and meta-analytic study.,"Montuori, Chiara; Gambarota, Filippo; Altoé, Gianmarco; Arfé, Barbara"
03601315,200,10.1016/j.compedu.2023.104794,,Elsevier B.V.,"Computational thinking (CT), a way to think about solving problems, is recognized as a basic skill for the 21st century. Although game-based learning (GBL) has been shown to improve student's CT skills, students may fail to self-evaluate or debate as they play games, thus failing to develop higher-order thinking. Also not widely explored is how teachers are to practice the CT core competencies during the learning process to cultivate students' problem-solving thinking. As the adoption of student-generated questions (SGQ) is an instructional strategy to promote higher-order thinking, we develop a GBL platform that uses this strategy to enhance students' CT skills, learning motivation, and learning confidence. For this purpose, fifty-three primary school students were recruited for this study, and data were collected during four classes of experimental CT activities. This study shows that the experimental group using the SGQ strategy with a GBL platform exhibited significantly higher CT skills than the control group. In addition, with respect to learning motivation and learning confidence it is found that the experimental group also outperformed the control group. This confirms that integrating the SGQ strategy and CT core competencies fosters higher-order cognitive thinking in students in problem-solving through gamification of the learning environment, resulting in higher motivation and confidence to complete experimental activities. • This study used student-generated questions (SGQ) in game-based learning platform. • This study integrated five core competencies of computational thinking into SGQ. • This result indicated that SGQ enhanced student's computational thinking skills. • It was studied that SGQ could improve student's learning motivation and confidence. • This study confirmed the contribution of SGQ to computational thinking skills. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Enhancing student's computational thinking skills with student-generated questions strategy in a game-based learning platform.,"Cheng, Yu-Ping; Lai, Chin-Feng; Chen, Yun-Ting; Wang, Wei-Sheng; Huang, Yueh-Min; Wu, Ting-Ting"
0020739X,50,10.1080/0020739X.2018.1501827,5,Taylor & Francis Ltd,"The invention of the computer has led to the establishment of a new research paradigm, computation, which has recently become more and more popular in scientific exploration. However, computation is not well represented in high school and university curricula in science and engineering, although it applies to a wide range of disciplines beyond computer science and software engineering. In light of the increasing need to provide students with computational education, this paper presents a novel way to develop computational thinking among students. The proposed approach is based on the implementation of Papert's theory of constructionism in electronic spreadsheets. In this approach, students build their knowledge while constructing the difference equation that describes a physical (or engineering) phenomenon, based on specific cases investigated in the spreadsheet. The method does not require the students to write code or perform complex calculations in the spreadsheet and makes it possible to teach advanced subjects at a relatively early stage. The method is demonstrated through contents taken from the secondary and tertiary curricula in mechanics and electromagnetism. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Mathematical Education in Science & Technology is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Mathematical Education in Science & Technology,Computational thinking and constructionism: creating difference equations in spreadsheets.,"Gero, Aharon; Levin, Ilya"
03601315,127,10.1016/j.compedu.2018.08.026,,Elsevier B.V.,"Abstract Building on Seymour Papert's view of empowering students by mastering programming, this study conceptualized programming empowerment as consisting of four components: meaningfulness, impact, creative self-efficacy, and programming self-efficacy. A sample of 287 primary school students in grades four to six completed a corresponding survey. Confirmatory factor analysis validated the proposed components of the programming empowerment instrument. A structural equation model indicated that students with greater interest in programming perceived it as more meaningful, had greater impact, had greater creative self-efficacy, and had greater programming self-efficacy. Also, students with attitudes toward collaboration that were more positive than others had greater creative self-efficacy. Boys showed more interest in programming than girls did. Students in higher grade levels than others viewed programming as less meaningful and had lower programming self-efficacy. These results support future studies that evaluate the impacts of interest-driven computational thinking and programming curricula with ample collaboration opportunities. Highlights • Empowerment consists of meaningfulness, impact, creative and programming self-efficacy. • The study validated the programming empowerment instrument. • Students with greater interest in programming perceive greater empowerment. • Students with positive collaboration attitude have greater creative self-efficacy. • Students in senior grades viewed programming as less meaningful than junior grades. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,"A study of primary school students' interest, collaboration attitude, and programming empowerment in computational thinking education.","Kong, Siu-Cheung; Chiu, Ming Ming; Lai, Ming"
08993408,28,10.1080/08993408.2018.1560550,4,Taylor & Francis Ltd,"A number of efforts have focused on preparing teachers to integrate CT within secondary disciplinary subject areas; however, there is little research on how CT ideas could be embedded within elementary subjects. We designed a professional development activity for elementary teachers to embed CT within science and examined how their understanding of CT emerged over the course of PD. This paper reports results from qualitative analysis of teacher responses to vignettes and open-ended questions, which presented teaching scenarios related to CT. We found that the vignettes allow us to see shift in teachersâ€™ thinking about CT from broad and generalized ideas to more elaborate versions of those ideas. We discuss that while vignettes provided a good method to portray changes in teacher views about CT, we need additional mechanisms to monitor how teachers conceptualize and come to integrate computational thinking into elementary schools. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Computational thinking in elementary classrooms: measuring teacher understanding of computational ideas for teaching science.,"Yadav, Aman; Krist, Christina; Good, Jon; Caeli, Elisa Nadire"
15219615,22,10.1109/MCSE.2020.3024012,6,IEEE,"The rapid, global spread of COVID-19 has led to an unprecedented rise in enrollments in online learning experiences among learners of all ages. In this article, we explore the impact of the global pandemic on a massive open online course, Problem Solving Using Computational Thinking, with a particular focus on the topics learners chose for their final projects. The Computational Thinking MOOC was designed using a project-based learning approach and aims to provide learners with an introduction to the ""big ideas"" of computational thinking using a range of case studies that encompass topics such as airport surveillance, epidemiology, and human trafficking. Beyond observing a sharp increase in enrollment and engagement at the time the pandemic began, we discuss ways in which the course's project-based pedagogy allowed learners to bring their present experiences and concerns together with the course's subject matter in order to meet the learning objectives for the course. Many learners chose to address aspects of the pandemic in the course's final project and applied ideas about computational thinking to peer-graded assignments that conveyed an individualized sense of importance and urgency. We assert that this approach, along with the inclusion of a timely epidemiology case study, enabled learners to more deeply internalize the role that computational thinking can play in their own lives and in society as a whole. [ABSTRACT FROM AUTHOR] Copyright of Computing in Science & Engineering is the property of IEEE and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computing in Science & Engineering,Exemplifying Computational Thinking Scenarios in the Age of COVID-19: Examining the Pandemic's Effects in a Project-Based MOOC.,"Pinto, Juan D.; Quintana, Chris; Quintana, Rebecca M.; Broude Geva, Sharon; Colbry, Dirk"
07356331,58,10.1177/0735633119872908,3,Sage Publications Inc.,"This study investigated young children's computational thinking (CT) development by integrating ScratchJr into a programming curriculum. Twelve third graders (six males and six females) voluntarily participated in an experiment-based computer class conducted at a public elementary school in Taiwan. This study adopted a case study methodology to investigate research questions in one specific case (8-week CT educational training). A one-group quasi-experimental pretest and posttest design with the support of qualitative observation was used to examine four research topics: CT competence progress, programming behaviors in a CT framework, factors influencing CT competence, and learning responses to CT training. The quantitative results indicated that students immersing in weekly programming projects significantly improved in terms of their CT competence, which was mostly retained 1 month after completion of the class. The programming behaviors indicated that students' CT concepts (sequence, event, and parallelism) and practice (testing and debugging as well as reusing and remixing) significantly improved. Moreover, parents' active involvement in take-home assignments influenced students' long-term CT competence retention. The qualitative results indicated that students enjoyed using tablet computers to learn ScratchJr programming and demonstrated various leaning behaviors in a three-stage instructional design model. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Using ScratchJr to Foster Young Children's Computational Thinking Competence: A Case Study in a Third-Grade Computer Class.,"Chou, Pao-Nan"
07475632,80,10.1016/j.chb.2017.09.030,,Elsevier B.V.,"Computational thinking (CT) is being consolidated as a key set of problem-solving skills that must be developed by the students to excel in our software-driven society. However, in psychological terms, CT is still a poorly defined construct, given that its nomological network has not been established yet. In a previous paper, we started to address this issue studying the correlations between CT and some fundamental cognitive variables, such as primary mental abilities and problem-solving ability. The current work deepens in the same direction as it aims to extend the nomological network of CT with non-cognitive factors, through the study of the correlations between CT, self-efficacy and the several dimensions from the ‘Big Five’ model of human personality: Openness to Experience, Conscientiousness, Extraversion, Agreeableness, and Neuroticism. To do so, the Computational Thinking Test (CTt) and some additional self-efficacy items are administered on a sample of 1251 Spanish students from 5th to 10th grade ( N = 1251), and the Big Five Questionnaire-Children version (BFQ-C) is also taken by a subsample from the above ( n = 99). Results show statistically significant correlations between CT and self-efficacy perception relative to CT performance ( r s = 0.41), in which gender differences in favor of males are found ( d = 0.42). Moreover, results show statistically significant correlations between CT and: Openness to Experience ( r = 0.41), Extraversion ( r = 0.30), and Conscientiousness ( r = 0.27). These findings are consistent with the existing literature except for the unexpected correlation between CT and the Extraversion factor of personality, which is consequently discussed in detail. Overall, our findings corroborate the existence of a non-cognitive side of CT that should be taken into account by educational policies and interventions aimed at fostering CT. As a final contribution, the extended nomological network of CT integrating cognitive and non-cognitive variables is depicted. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Extending the nomological network of computational thinking with non-cognitive factors.,"Román-González, Marcos; Pérez-González, Juan-Carlos; Moreno-León, Jesús; Robles, Gregorio"
09259724,26,10.1007/s10606-017-9292-y,04-jun,Springer Nature,"Computational algorithmic thinking (CAT) is the ability to design, implement, and assess the implementation of algorithms to solve a range of problems. It involves identifying and understanding a problem, articulating an algorithm or set of algorithms in the form of a solution to the problem, implementing that solution in such a way that the solution solves the problem, and evaluating the solution based on some set of criteria. CAT is an important scaffolded on-ramp as students develop more advanced computational thinking capabilities and apply computational thinking to solve problems that are more constrained and require greater expertise. Supporting Computational Algorithmic Thinking (SCAT) is both a longitudinal between-subjects research project and a free enrichment program supporting and guiding African-American middle school girls over three years as they iteratively design a set of complex games for social change. This article explores Scholars' reflections about the difficulties they faced while using CAT capabilities as they engaged in collaborative game design for social change over those three years. We particularly focus on how these difficulties changed over the course of three years as well as new difficulties that emerged from year to year as Scholars become more expert game designers and computational algorithmic thinkers. [ABSTRACT FROM AUTHOR] Copyright of Computer Supported Cooperative Work: The Journal of Collaborative Computing is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Supported Cooperative Work: The Journal of Collaborative Computing,Exploring the Difficulties African-American Middle School Girls Face Enacting Computational Algorithmic Thinking over three Years while Designing Games for Social Change.,"Thomas, Jakita; Rankin, Yolanda; Minor, Rachelle; Sun, Li"
00010782,62,10.1145/33631,11,Association for Computing Machinery,"The authors discuss the role of computers in thinking and education. They mention children's ability to think and solve problems computationally, presents examples of children thinking and performing using computers, and the need to redesign computer use to incorporate more comprehensively in education",Communications of the ACM,Education Computational Thinking Should Just be Good Thinking.,"Guzdial, Mark; Kay, Alan; Norris, Cathie; Soloway, Elliot"
21660727,1,,,Conferencia Iberica de Sistemas Tecnologia de Informacao,"Computational Thinking (CT) has been described as the use of abstraction, automation and analysis skills for problem solving, thus becoming a set of fundamental skills for the 21st century. Many initiatives have emerged to promote early development of CT skills. However, to date, there are no studies in which CT is developed in minority groups, such as individuals with Autism Spectrum Disorders. In this paper we present the design and evaluation of a Game Design Workshop aimed at teenagers with Autism Spectrum Disorders. An analysis of the artifacts produced by the participants of a pilot offering of the workshop was performed using a rubric for CT skills acquisition. The results showed that the participants, all of them with high-functioning autism and no previous experience with programming, acquired intermediate level skills related to CT. [ABSTRACT FROM AUTHOR] Copyright of CISTI (Iberian Conference on Information Systems & Technologies / Conferência Ibérica de Sistemas e Tecnologias de Informação) Proceedings is the property of Conferencia Iberica de Sistemas Tecnologia de Informacao and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",CISTI (Iberian Conference on Information Systems & Technologies / Conferência Ibérica de Sistemas e Tecnologias de Informação) Proceedings,Game Design Workshop to Develop Computational Thinking Skills in teenagers with Autism Spectrum Disorders.,"Munoz, Roberto; Barcelos, Thiago S.; Villarroel, Rodolfo; Frango Silveira, Ismar"
07356331,62,10.1177/07356331231225468,3,Sage Publications Inc.,"The relationship between computational thinking (CT) and academic self-efficacy for building students' academic resilience—a trait crucial for problem-solving, peer relationships, and confidence development—was investigated. A mixed-methods approach was employed in a study involving 60 participants; half were given CT instruction and half were instructed traditionally. Quantitative data were analyzed using analysis of covariance and path analysis, while MAXQDA software was employed for qualitative interview data. The study found a positive correlation between CT instruction and academic self-efficacy with increased academic resilience, particularly in the experimental group, and identified key factors contributing to resilience. This study demonstrates the effectiveness of computational thinking (CT) and academic self-efficacy in enhancing academic performance, offering a new understanding of how these elements can be integrated into education to boost student resilience. It establishes a direct empirical link between CT instruction and increased academic self-efficacy, underscoring the value of specific teaching methodologies in fostering resilience. The findings are significant for educators, policymakers, and stakeholders in developing strategies to enhance students' academic and personal success, thereby promoting their overall well-being. Recognizing the importance of CT and self-efficacy paves the way for customized educational programs that effectively support and empower students to thrive. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Empowering Students to Thrive: The Role of CT and Self-Efficacy in Building Academic Resilience.,"Wu, Ting-Ting; Silitonga, Lusia Maryani; Dharmawan, Budi; Murti, Astrid Tiara"
07356331,62,10.1177/07356331231209773,2,Sage Publications Inc.,"Computational thinking (CT) has received much attention in mathematics education in recent years, and researchers have begun to experiment with the integration of CT into mathematics education to promote students' CT and mathematical thinking (MT) development. However, there is a lack of empirical evidence and new theoretical perspectives on the mechanisms of interaction between CT and MT. To address this research gap, this study analyses the participants' thinking processes in solving programming-based mathematical problems from a flexibility perspective, focusing on the interplay between computational and mathematical thinking, that is, how CT and MT work together to influence and determine the problem-solver's choice of solution strategy. Using data collected from a large design-based study, we summarise two types of flexibility and six subtypes of flexibility demonstrated by participants in the programming-based mathematical problem-solving process using thematic analysis. These different types of flexibility provide researchers and mathematics educators with new theoretical perspectives to examine the interplay of CT and MT. Findings will also contribute toward student learning characteristics in programming-based mathematical problem-solving to sketch the big picture of how CT and MT emerge in complementary or mismatching ways. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Conceptualizing Flexibility in Programming-Based Mathematical Problem-Solving.,"Ye, Huiyan; Ng, Oi-Lam; Cui, Zhihao"
16875893,2015,10.1155/2015/856726,,Hindawi Limited,"Agent-based simulation of people’s behaviors and minds has become increasingly popular in recent years. It provides a research platform to simulate and compare alternative psychological and social theories, as well as to create virtual characters that can interact with people or among each other to provide pedagogical or entertainment effects. In this paper, we investigate computationally modeling people’s coping behaviors and in particular in relation to depression, in decision-theoretic agents. Recent studies have suggested that depression can result from failed emotion regulation under limited cognitive resources. In this work, we demonstrate how reappraisal can fail under high levels of stress and limited cognitive resources using an agent-based simulation. Further, we explored the effectiveness of reappraisal under different conditions. Our experiments suggest that for people who are more likely to recall positive memories, it is more beneficial to think about the recalled events from multiple perspectives. However, for people who are more likely to recall negative memories, the better strategy is to not evaluate the recalled events against multiple goals. [ABSTRACT FROM AUTHOR] Copyright of Advances in Human-Computer Interaction is the property of Hindawi Limited and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Advances in Human-Computer Interaction,Should I Stop Thinking About It: A Computational Exploration of Reappraisal Based Emotion Regulation.,"Si, Mei"
07380569,35,10.1080/07380569.2018.1462630,2,Taylor & Francis Ltd,"This study attempts to determine whether teachers' access to computational thinking (CT) and CT technologies varies by rurality (rural versus urban) of the school county and grade level taught (primary versus secondary). A total of 81 teachers from West Virginia, Georgia, and Oklahoma participated in this survey study. Overall, teachers found CT and CT tools useful and relevant to their teaching and had access to an essential level of technology in schools supporting computational thinking. However, teachers' CT skills and their teaching of CT were limited and varied depending on rurality and grade level. For instance, primary school teachers in rural settings reported significantly lower levels of CT skills than those in urban settings. Findings and implications are discussed. [ABSTRACT FROM AUTHOR] Copyright of Computers in the Schools is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in the Schools,Contextual Factors Influencing Access to Teaching Computational Thinking.,"Kale, Ugur; Akcaoglu, Mete; Cullen, Theresa; Goh, Debbie"
07475632,80,10.1016/j.chb.2017.09.025,,Elsevier B.V.,"Learning Computational Thinking concepts by all has gained quite importance in last years. Scratch is also one of the most used products to promote it worldwide. Yet, most teachers face difficulties when using it in the classroom with their students. With this idea in mind we developed and run a distance education course under the Project of Distance Education of the University of Coimbra specially designed for elementary school teachers to learn both Computational Thinking concepts and Scratch via an e-learning course using Moodle as a Learning Management System. In this paper we describe this first experience of teaching and learning online, the results obtained and also our future work about this course. Results of this first experience showed that it was possible for the trainees to learn Computational Thinking concepts and Scratch programming and also to develop useful products for their classroom practice using this modality of teaching and learning. As such, a second edition of the course is already planned to take place shortly. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Learning Computational Thinking and scratch at distance.,"Marcelino, Maria José; Pessoa, Teresa; Vieira, Celeste; Salvador, Tatiana; Mendes, António José"
03601315,116,10.1016/j.compedu.2017.09.004,,Elsevier B.V.,"The aim of this study is to determine how much various variables explain students' computational thinking (CT) skills. Furthermore, it was aimed to produce a model that explains and predicts the relations between computational thinking skills and various variables. Study group consists of 156 students who were studying in 5–12. Class in 2015–2016 academic year in different schools in Ankara. Relational screening model was used in this research. Two different data collection instruments were used in this research. The first one is “Personal Information Form”. The second one is “Computational Thinking Skills Scale”. Structural Equation Model was used in data analysis so as to produce a model that explains and predicts the relations between computational thinking skills and various variables. According to research results, it was found that computational thinking skill was highly predicted by variables, respectively; “thinking styles, academic success in mathematic class, attitude against mathematic class”. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Analysis of the relation between computational thinking skills and various variables with the structural equation model.,"Durak, Hatice Yildiz; Saritepeci, Mustafa"
22111662,22,10.1007/s10758-017-9328-x,3,Springer Nature,"A science, technology, engineering, and mathematics-influenced classroom requires learning activities that provide hands-on experiences with technological tools to encourage problem-solving skills (Brophy et al. in J Eng Educ 97(3):369-387, 2008; Matarić et al. in AAAI spring symposium on robots and robot venues: resources for AI education, pp 99-102, 2007). The study aimed to bring computational thinking, an applicable skill set in computer science, into existing mathematics and programming education in elementary classrooms. An essential component of computational thinking is the ability to think like a computer scientist when confronted with a problem (Grover and Pea in Educ Res 42(1):38-43. doi:, 2013). Computational perspectives (Berland and Wilensky in J Sci Educ Technol 24(5):628-647. doi:, 2015) refer to the frame of reference programmers or computer scientists adopt when approaching a problem. The study examined the effects of taking computational perspectives through various degrees of embodied activities (i.e., full vs. low) on students' achievement in mathematics and programming. The study employed a 2 (full vs. low embodiment) × 2 (with vs. without computational perspective taking) factorial condition to evaluate four learning conditions from a combination of embodiment and computational perspective-taking practice. The results from this experimental study ( N = 66 kindergarten and first graders) suggest that full-embody activities combined with the practice of computational perspective-taking in solving mathematics problem improved mathematics understanding and programming skills as demonstrated in Scrath Jr. among novice young learners. Moreover, the practice of using a computational perspective significantly improved students' understanding of core programming concepts regardless of the level of embodiment. The article includes recommendations for how to make the computational thinking process more concrete and relevant within the context of a standard curriculum, particularly mathematics. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",Introducing Computational Thinking to Young Learners: Practicing Computational Perspectives Through Embodiment in Mathematics Education.,"Sung, Woonhee; Ahn, Junghyun; Black, John"
00010782,60,10.1145/3148760,12,Association for Computing Machinery,"The article discusses the use of parallel computational thinking in programming applications to fully utilize multicore processors. Topics include the traditional use of sequential thinking in computer science education, the teaching of parallel computation as part of undergraduate computer science curricula, and the use of algorithmic models in relation to multicore device programming.",Communications of the ACM,Parallel Computational Thinking: Applications must be programmed to process instructions in parallel to take full advantage of the new multicore processors.,"Kirkpatrick, Keith"
10494820,28,10.1080/10494820.2019.1674879,3,Taylor & Francis Ltd,"This paper presents findings from a two-year qualitative study examining integration of computer science (CS) and computational thinking (CT) into elementary mathematics instruction. Integrated units were developed by elementary teachers and CS/CT coaches with support from university faculty with expertise in CS/CT and elementary mathematics. CS/CT instruction primarily relied on the Scratch environment, although some lessons made use of Code.org materials. This research primarily relied on two theories of integration (i.e. Kiray, 2012. A new model for the integration of science and mathematics: The balance model. Energy Education Science and Technology Part B: Social and Educational Studies, 4(3), 1181–1196) that provided insight into the level of interconnection between the disciplines and the relative amount of instructional time spent within each discipline. Findings revealed that cross-grade CS/CT concepts included sequencing, looping, and conditional logic. Within each category: (a) concepts were taught with increasing complexity across the grades, (b) the mathematics was dominant and CS/CT was important but secondary, and (c) three types of lessons emerged: No integration, partial integration, and full integration. Lastly, lessons generally included a transition from less integrated to more integrated activities with an initial focus on discipline-specific conceptual understanding prior to integrated activities. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,From classroom lessons to exploratory learning progressions: mathematics + computational thinking.,"Israel, Maya; Lash, Todd"
22973079,,10.3389/fmech.2024.1325623,,Frontiers Media S.A.,"The dominant phenomenon in laser welding processes is heat transfer by conduction, making it crucial to gain insights into energy distribution within the heat-affected region, including the melt pool. Thermal analysis enables the description of thermo-mechanical, metallurgical aspects, and also addresses studies related to fluid flow and energy transfer. As research in welding processes has advanced, these models have evolved. This is why it is now efficient to use computational modeling techniques as it allows us to analyze the behavior of laser welding during the process. This underlines the importance of this work which has carried out an exhaustive theoretical literature review with the objective of classifying and describing the numerical simulations of laser welding based on the physics involved. In that sense, the mathematical models and strategies used in laser welding are explored in a general way. Therefore, two types of laser welding by conduction and deep penetration are defined from this point and they are categorized according to the phenomena involved in Model Heat Conduction and Model Integral Multiphysics. This comprehensive review article serves as a valuable resource for higher education students by providing a structured and detailed exploration of laser welding and its mathematical modeling. By classifying and describing numerical simulations based on the physics involved, it offers a framework for students to understand the complexities of this field. Additionally, this innovative approach to organizing and presenting research contributes to educational innovation by facilitating a more efficient and effective learning experience, helping students acquire the knowledge and research skills necessary for advancements in the laser welding domain. [ABSTRACT FROM AUTHOR] Copyright of Frontiers in Mechanical Engineering is the property of Frontiers Media S.A. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Frontiers in Mechanical Engineering,Numerical simulations and mathematical models in laser welding: a review based on physics and heat source models.,"Jiménez-Xamán, M.; Hernández-Hernández, M.; Tariq, Rasikh; Landa-Damas, Saulo; Rodríguez-Vázquez, M.; Aranda-Arizmendi, A.; Cruz-Alcantar, P."
07365853,83,10.1016/j.tele.2023.102026,,Elsevier B.V.,"• A model was developed for exploring the determinants of AI Literacy. • Digital divide plays a critical role in influencing AI Literacy. • Computational thinking is positively associated with AI Literacy. • Cognitive absorption is related to digital divide, but not to AI Literacy. • Digital divide has a positive effect on computational thinking. To effectively utilize artificial intelligence (AI)-based technologies such as ChatGPT and realize their novel ethical issues, individuals must have a variety of knowledge and skills about AI. Such knowledge and skills have led to the emergence of AI literacy. Despite the importance of AI literacy in everyday life, little is known about its determinants. To better understand the determinants of AI literacy, we attempted to build a research model relying on previous research and different theoretical frameworks. The model incorporated digital divide, cognitive absorption, and computational thinking. As a major finding from the current study, computational thinking was found to be a significant determinant of AI literacy, which facilitate using, recognizing, and evaluating AI-based technologies. Moreover, we found out that individuals with physical access to information and communication technologies (ICTs) are more expected to use and recognize AI. Also, motivation and skills in using ICTs enable individuals to better evaluate the outcomes of AI-based technologies. The findings also showed that convenient access to ICTs contributes to a deep involvement with AI-based technologies in the use. Further, individuals with higher motivation and skills to use AI technologies are likely to have a pleasant experience after using these technologies. [ABSTRACT FROM AUTHOR] Copyright of Telematics & Informatics is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Telematics & Informatics,"Exploring the Determinants of Artificial Intelligence (AI) Literacy: Digital Divide, Computational Thinking, Cognitive Absorption.","Celik, Ismail"
10494820,26,10.1080/10494820.2017.1337036,3,Taylor & Francis Ltd,"Various aspects of computational thinking (CT) could be supported by educational contexts such as simulations and video-games construction. In this field study, potential differences in student motivation and learning were empirically examined through students' code. For this purpose, we performed a teaching intervention that took place over five weeks, with two-hour sessions per week, plus two more weeks for the pretest and post-test projects. Students were taught programming concepts through a science project; one group represented the function of a basic electric circuit by creating a simulation, while the other group represented the same function by creating a video game in which a player should achieve a score in order to win. Video game construction resulted in projects with higher CT skills and more primitives, as measured through projects' code analysis. Moreover, the video-game context seems to better motivate students for future engagement with computing activities. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Programming video games and simulations in science education: exploring computational thinking through code analysis.,"Garneli, Varvara; Chorianopoulos, Konstantinos"
22512195,,10.5176/2251-2195_CSEIT17.68,,Global Science & Technology Forum,"Teaching K-12 students computational thinking is the latest craze among scientists and is supposed to revolutionize critical thinking and improve the science, technology, engineering, and math interest pipeline. A slew of teaching plans, support materials, and curricula have been designed, developed, and promoted for use in classrooms worldwide. In this paper I argue that the foundations of computational thinking principles are sound and valid. However, the instructional approach is not transparent, developmentally appropriate, and lacks guiding scaffolds. One solution to these problems is to use a long-standing approach to strategic comprehension based on text structures - comparison, cause(s) for problem(s) and solution(s), sequence, and description. To showcase the usefulness of the text structures in computational thinking I present examples for every step of the Google computational thinking lessons explaining how the traditional approach can be made very useful to all students by including the teaching of text structures prior to or during computational thinking lessons. [ABSTRACT FROM AUTHOR] Copyright of Annual International Conference on Computer Science Education: Innovation & Technology is the property of Global Science & Technology Forum and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Annual International Conference on Computer Science Education: Innovation & Technology,Pragmatic Scaffolding for Computational Thinking Using Text Structures: Theoretical and Empirical Lenses on K-12 Classrooms.,"Wijekumar, Kay"
07475632,145,10.1016/j.chb.2023.107749,,Elsevier B.V.,"Computational thinking (CT) practices is a critical cognitive tool for students to overcome challenges in this technological era. Few studies investigated CT practices from a development perspective. A two-year intervention was implemented in 30 intervention and 22 control schools in Hong Kong to promote CT education (T1baseline: N = 13,056; T2: N = 16,367; and T3: N = 15,269). Senior primary students (grades 4 to 6) around 8–12 years old were targeted. Among them, 34% were girls at T1baseline. Their learning progression of cognitive development was assessed with a CT practices test. Data were analyzed using item response analysis. Learning trajectories of CT practices were modeled to understand how students' cognitive development differed between schools. Insights of findings were discussed in bringing CT practices to life. • A large-scale CT intervention was designed to foster primary students' cognitive development. • A CT practices test captured students' learning trajectories of cognitive development. • The intervention identified trajectories of students' learning process across treatment and control schools. • Fidelity of longitudinal intervention was tested with three methods to probe different insights. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Monitoring cognitive development through the assessment of computational thinking practices: A longitudinal intervention on primary school students.,"Kong, Siu-Cheung; Wang, Yi-Qing"
02664909,36,10.1111/jcal.12427,5,Wiley-Blackwell,"Massive open online course (MOOC) studies have shown that precourse skills (such as precomputational thinking) and course engagement measures (such as making multiple submission attempts with assignments when the initial submission is incorrect) predict students' grade performance, yet little is known about whether these factors predict students' course retention. In applying survival analysis to a sample of more than 20,000 participants from one popular computer science MOOC, we found that students' precomputational thinking skills and their perseverance in assignment submission strongly predict their persistence in the MOOC. Moreover, we discovered that precomputational thinking skills, programming experience, and gender, which were previously considered to be constant predictors of students' retention, have effects that attenuate over the course milestones. This finding suggests that MOOC educators should take a growth perspective towards students' persistence: As students overcome the initial hurdles, their resilience grows stronger. Lay Description: What is already known about this topicMOOCs have very low retention rates, ranging between 1% to 15%.Background and engagement factors have been shown to predict MOOC dropout.Precomputational thinking style has been shown to predict computer science performance, but no research has investigated its effect on retention in either traditional classrooms or in MOOCs.Auto‐adaptive feedback is a quickly and widely adopted assistant feature in MOOCs, particularly in computer science, but its impact on retention is not well understood.What this paper addsStudents' precomputational thinking skills and their perseverance in assignment submission strongly predict their persistence in the MOOC.This study identified predictors of dropout whose effects did not diminish over time, including foreign status, gaming hours on the computer, self‐reported extrovert personality, and motivation.This study discovered predictors of dropout whose effects were seen early in the course, but diminished in importance over the milestone sequence. These predictors were gender, age, precomputational thinking skills, and prior computer science experience.Implications for practice and/or policyDesign a gradual learning curve for beginners so that they can adapt to the course mindset and framework.Assure students who are frustrated in the beginning of the course that once they adapt to the course mindset, their lack of background knowledge will not define their future experience and persistence.Assisted with the auto‐adaptive feedback features, multiple trials in the course assignment can be an engaging and rewarding experience.MOOCs should develop pedagogies that explicitly encourage student to use a trial‐and‐error strategy, testing different scenarios and experimenting with different solutions, to make the most use of auto‐adaptive feedback features.MOOC educators should not only take a growth perspective towards students' knowledge and skill development, but also a growth perspective towards students' persistence: As students overcome the initial hurdles, their resilience grows stronger. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Computational thinking and assignment resubmission predict persistence in a computer science MOOC.,"Chen, Chen; Sonnert, Gerhard; Sadler, Philip M.; Malan, David J."
10613773,25,10.1002/cae.21779,1,Wiley-Blackwell,"ABSTRACT Computational thinking has been recognized as a collection of understandings and skills required for new generations of students not only proficient at using tools, but also at creating them and understanding the implication of their capabilities and limitations. This study proposes the combination of modeling and simulation practices along with disciplinary learning as a way to synergistically integrate and take advantage of computational thinking in engineering education. This paper first proposes a framework that identifies different audiences of computing and related computational thinking practices at the intersection of computer science and engineering. Then, based on a survey with 37 experts from industry and academia, this paper also suggests a series of modeling and simulation practices, methods, and tools for such audiences. Finally, this paper also reports experts' identified challenges and opportunities for integrating modeling and simulation practices at the undergraduate level. © 2016 Wiley Periodicals, Inc. Comput Appl Eng Educ 25:62-78, 2017; View this article online at ; DOI [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Modeling and simulation practices for a computational thinking-enabled engineering workforce.,"Magana, Alejandra J.; Silva Coutinho, Genisson"
01641212,195,10.1016/j.jss.2022.111516,,Elsevier B.V.,"The sustainable and digital future of work may imply a dramatic equilibrium change between social factors and technological ones. We argue that providing suitable tools to support End-User Development (EUD) in the workplace could represent a way to cope with such future changes. The contributions of this paper include the analysis and characterization of the most used EUD techniques and their crossover with a new conveyed model of Computational Thinking. The synthesis between these aspects is made explicit in the construct of EUDability, which is designed to capture the quality dimensions of EUD systems suitable to work scenarios where better roles and better tools for individuals may be shaped. EUDability has to do with identifying and assessing the difficulties of EUD techniques on one side and the Computational Thinking skills held by individuals on the other side. • A characterization of End-User Development applied in work scenarios is proposed. • The crossover between End-User Development and Computational Thinking is analyzed. • The definition of the EUDability construct is presented. [ABSTRACT FROM AUTHOR] Copyright of Journal of Systems & Software is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Systems & Software,EUDability: A new construct at the intersection of End-User Development and Computational Thinking.,"Barricelli, Barbara Rita; Fogli, Daniela; Locoro, Angela"
02664909,35,10.1111/jcal.12348,3,Wiley-Blackwell,"Computational thinking (CT), the ability to devise computational solutions for real‐life problems, has received growing attention from both educators and researchers. To better improve university students' CT competence, collaborative programming is regarded as an effective learning approach. However, how novice programmers develop CT competence through collaborative problem solving remains unclear. This study adopted an innovative approach, quantitative ethnography, to analyze the collaborative programming activities of a high‐performing and a low‐performing team. Both the discourse analysis and epistemic network models revealed that across concepts, practices, and identity, the high‐performing team exhibited CT that was systematic, whereas the CT of the low‐performing team was characterized by tinkering or guess‐and‐check approaches. However, the low‐performing group's CT development trajectory ultimately converged towards the high‐performing group's. This study thus improves understanding of how novices learn CT, and it illustrates a useful method for modeling CT based in authentic problem‐solving contexts. Lay Description: What is already known about this topic: Computational thinking competence includes computational concepts, computational practices, and computational perspectives.Collaborative programming has the potential to foster computational thinking competence development.What this paper adds: The low‐performing student group adopted a bottom‐up perspective at the beginning but transformed to a top‐down approach by the end.The low‐performing group's computational thinking development trajectory had convergent evolution towards the high‐performing group's trajectory.Implications for practice and/or policy: Computational thinking competence can be developed in collaborative contexts even when students begin with a bottom‐up approach.Computational thinking should go beyond the cognitive development of computational concepts to connect computational practice and computational identity.Quantitative ethnography approach has potential to model computational thinking competence in collaborative programming context. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Analysing computational thinking in collaborative programming: A quantitative ethnography approach.,"Wu, Bian; Hu, Yiling; Ruis, A.R.; Wang, Minhong"
07475632,80,10.1016/j.chb.2017.12.005,,Elsevier B.V.,"Several countries have usually adopted several priorities for developing ICT competences from kindergarten to secondary education. Most of them are focused on the development of key competences and/or coding skills. Although coding may be very attractive for young students and a very good practice or experience, it could be more interesting to develop students' logical thinking skills and problem-solving skills throughout programming approaches or computational thinking. This is a very exciting challenge with lots of possibilities regarding coding, robots, mobiles devices, Arduino-based application, game-based learning and so on. Thus, it is very important to explore the effect that these experiences have been taking into the pre-university students, both at primary and secondary education, with a special focus on the computational thinking as one of the components inside the toolbox to develop a reflexive and critical education in order to help children to solve problems using the technology with which they will live daily. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Exploring the computational thinking effects in pre-university education.,"García-Peñalvo, Francisco José; Mendes, Antònio José"
22279709,6,10.3390/informatics6040043,4,MDPI,"Research has shown that educational robotics can be an effective tool to increase students' acquisition of knowledge in the subjects of science, technology, engineering, and mathematics and promote, at the same time, a progression in the development of computational thinking (CT) skills in K–12 (kindergarten to 12th grade) education. Within this research field, the present study first sought to assess the effect of a robotics laboratory on the acquisition of CT-related skills in primary school children. The study also aimed to compare the magnitude of the effect of the laboratory across third- and fourth-grade students. For the purpose of the study, a quasi-experimental post-test-only design was adopted, and a group of 51 students, from third- and fourth-grade classrooms, participating in the robotics laboratories, were compared to a control group of 32 students from classrooms of the same grades. A set of Bebras tasks was selected as an overall measure of CT skills and was administered to children in both the intervention and control groups. Overall, the results showed that programming robotics artefacts may exert a positive impact on students' learning of computational thinking skills. Moreover, the effect of the intervention was found to be greater among third-grade children. [ABSTRACT FROM AUTHOR] Copyright of Informatics is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Informatics,Educational Robotics in Primary School: Measuring the Development of Computational Thinking Skills with the Bebras Tasks †.,"Chiazzese, Giuseppe; Arrigo, Marco; Chifari, Antonella; Lonati, Violetta; Tosto, Crispino"
07475632,72,10.1016/j.chb.2016.08.047,,Elsevier B.V.,"Computational thinking (CT) is being located at the focus of educational innovation, as a set of problem-solving skills that must be acquired by the new generations of students to thrive in a digital world full of objects driven by software. However, there is still no consensus on a CT definition or how to measure it. In response, we attempt to address both issues from a psychometric approach. On the one hand, a Computational Thinking Test (CTt) is administered on a sample of 1,251 Spanish students from 5th to 10th grade, so its descriptive statistics and reliability are reported in this paper. On the second hand, the criterion validity of the CTt is studied with respect to other standardized psychological tests: the Primary Mental Abilities (PMA) battery, and the RP30 problem-solving test. Thus, it is intended to provide a new instrument for CT measurement and additionally give evidence of the nature of CT through its associations with key related psychological constructs. Results show statistically significant correlations at least moderately intense between CT and: spatial ability ( r = 0.44), reasoning ability ( r = 0.44), and problem-solving ability ( r = 0.67). These results are consistent with recent theoretical proposals linking CT to some components of the Cattel-Horn-Carroll (CHC) model of intelligence, and corroborate the conceptualization of CT as a problem-solving ability. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Which cognitive abilities underlie computational thinking? Criterion validity of the Computational Thinking Test.,"Román-González, Marcos; Pérez-González, Juan-Carlos; Jiménez-Fernández, Carmen"
1045926X,40,10.1016/j.jvlc.2017.01.005,,Academic Press Inc.,"Nonprofessional end user programs have increased remarkably in volume and diversity. However, for such programs to be usable and reliable, their creators should be familiar with software engineering practices that are typically not part of their range of competence and source of enjoyment. While the expansion of computational thinking acquisition (CTA) initiatives at schools and the availability of improved programming environments have contributed to facilitate the learners’ coding tasks, much less has been done to facilitate the acquisition of software quality notions. This paper reports on a Brazilian CTA program guided by semiotic principles and describes a study of how the technology used in it prefigures elements of software engineering in the participants’ programs created with AgentSheets. Our research contributions touch on the semiotic potential of CTA infrastructures and on associated pedagogical considerations for expanding CTA programs with software engineering basics. We also propose items for an interdisciplinary research agenda. [ABSTRACT FROM AUTHOR] Copyright of Journal of Visual Languages & Computing is the property of Academic Press Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Visual Languages & Computing,Signifying software engineering to computational thinking learners with AgentSheets and PoliFacets.,"Monteiro, Ingrid Teixeira; Salgado, Luciana Cardoso de Castro; Mota, Marcelle Pereira; Sampaio, Andréia Libório; de Souza, Clarisse Sieckenius"
03601315,109,10.1016/j.compedu.2017.03.001,,Elsevier B.V.,"Based on a framework of computational thinking (CT) adapted from Computer Science Teacher Association's standards, an instrument was developed to assess fifth grade students' CT. The items were contextualized in two types of CT application (coding in robotics and reasoning of everyday events). The instrument was administered as a pre and post measure in an elementary school where a new humanoid robotics curriculum was adopted by their fifth grade. Results show that the instrument has good psychometric properties and has the potential to reveal student learning challenges and growth in terms of CT. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Assessing elementary students’ computational thinking in everyday reasoning and robotics programming.,"Chen, Guanhua; Shen, Ji; Barth-Cohen, Lauren; Jiang, Shiyan; Huang, Xiaoting; Eltoukhy, Moataz"
03601315,194,10.1016/j.compedu.2022.104707,,Elsevier B.V.,"Computational thinking (CT) education in K-12 requires extensive teacher development. This research investigates the effectiveness of a scalable and sustainable teacher development programme in promoting CT in primary education. This report presents two studies. Study 1 reports on the effectiveness of two 12-h courses using Scratch and App Inventor programming environments for CT development of teachers respectively, which involved 245 teachers from 47 primary schools. With teaching practices embedded, the programme, which used the framework of technological pedagogical content knowledge (TPACK), significantly enhanced teachers' content-related knowledge dimensions. The results indicate that the programme helped teachers develop advanced CT concepts such as data structures and procedures. Study 2, using thematic analysis, reports on CT strategies implemented in 47 schools through 94 school visits. The most mentioned strategies were the formation of teaching teams, lesson co-planning, and the integration of CT with subject teaching. The most mentioned challenges were teacher readiness, lesson time, and diversity – learners' abilities, interests, and approaches. Four types of support, including teacher development support, continuous and communal support, teaching materials support, and financial support were identified. The results suggest that a course-based programme with mixed programming environments and embedded teaching experience effectively develops teachers' capabilities. However, continuous support for teachers in implementing the initiative after completing the programme is important, especially in addressing learner diversity and integrating CT with subject teaching. • We evaluate a teacher development programme involving 245 teachers from 47 schools. • The programme enhanced the content-related knowledge of TPACK of these teachers. • We examine how the schools implement the CT initiative by visiting these 47 schools. • Common strategies include team formation, lesson co-planning, and subject integration. • Teacher readiness, lesson time & manpower, and learner diversity are major challenges. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,"Scaling up a teacher development programme for sustainable computational thinking education: TPACK surveys, concept tests and primary school visits.","Kong, Siu-Cheung; Lai, Ming; Li, Yugen"
03601315,192,10.1016/j.compedu.2022.104657,,Elsevier B.V.,"Designing artificial intelligence (AI) artefact learning has gone beyond command-line-based instruction, to include a low-barrier threshold with block-based programming. Such instructional design must not solely emphasise AI workings. Rather, it must offer students computational thinking (CT) practice to support their AI-related artefact creation while reducing their AI anxiety about future job replacement or sociotechnical blindness. In this study, this research explored an experiential learning approach to improve CT along with AI application capabilities when engaging undergraduate students in creating a voice assistant application (VA app). A total of 56 students participated in the study. The control group (CG) of 26 students used a conventional subject-based learning method, while the experimental group (EG) of 30 students adopted an experiential learning method. This study aimed to examine the differences in the learning achievement of CT and AI concept, as well as the perspectives of AI anxiety, and CT; in the meanwhile, this study analysed the students' learning behaviours using sequential behavioural analysis to discuss the learning process. Results showed that the CT ability of the EG was better than that of the CG, although no significant difference was found between the two groups' AI concepts and anxiety. The behaviour analysis also revealed that the EG students were willing to ask more questions, and conducted their VA evaluation, whereas the CG students were inclined to focus on the input and output of knowledge, and replicated what the teacher presented. Suggestions and implications are given for future research. • Helping students' voice assistant app creation using the experiential learning approach. • Contributing to developing students' CT and AI learning. • Analyzing students' learning behaviour patterns. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Effects of voice assistant creation using different learning approaches on performance of computational thinking.,"Hsu, Ting-Chia; Chang, Ching; Lin, Yi-Wei"
24317578,35,10.1051/itmconf/20203503002,,EDP Sciences,,ITM Web of Conferences,Forming Computational Thinking and Computer Modeling Project Activities in the Physics Course of the Technical University.,"Aleksandrov, A.A.; Padalkin, B.V.; Tsvetkov, Y.B.; Dimitrienko, Y.I.; Baranov, Alexander V."
10613773,32,10.1002/cae.22679,1,Wiley-Blackwell,"The current study aims to determine the programming performance (low and high) of the students between the ages of 12–24 who receive programming education, by descriptive analysis, to determine the current situation according to various variables and to redict them with machine learning algorithms. Thus, the change in programming performance, computational identity, computational thinking perspective, programming empowerment, and programming anxiety according to various variables was examined. The performances of different algorithms were compared in estimating the low and high programming performance of these variables. The research involved 763 students who were between the ages of 12 and 24 and had received programming education. Different scales were used to collect the opinions of students who received programming education. Descriptive analyses, one‐way analysis of variance (ANOVA), and machine learning algorithms were used in the analysis of the data set. Analyzes were made in Statistical Package for the Social Sciences (SPSS) and Knime software. Decision trees, k‐nearest neighbors, support vector machines, random forest, Naive Bayes classifiers, and logistic regression were used in the study. Students' programming performance, computational identity, computational thinking perspective, and programming empowerment mean scores differ in terms of gender and educational level variables. Research variables do not differ statistically in terms of academic success level variables. According to the programming performance level, students' computational identity, computational thinking perspective, and programming empowerment scores differ. No significant difference was found between programming anxiety scores. Decision trees of the algorithm with the highest accuracy result according to low and high programming performance conditions are [(0.966), (0.966)], respectively. The fact that these obtained scores are above 90% can be interpreted as sufficient estimation performance. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Classification and prediction‐based machine learning algorithms to predict students' low and high programming performance.,"Durak, Aykut; Bulut, Vahide"
13670751,15,10.1093/jigpal/jzm026,4,Oxford University Press / USA,"The paper discusses tools for teaching logic used in Logic & Proofs, a web-based introduction to modern logic that has been taken by more than 1,300 students since the fall of 2003. The tools include a wide array of interactive learning environments or cognitive mini-tutors; most important among them is the Carnegie Proof Lab. The Proof Lab is a sophisticated interface for constructing natural deduction proofs and is central, as strategically guided discovery of proofs is the distinctive focus of the course. My discussion makes explicit the broader intellectual context, but also the pursuit of pedagogical goals and their experimental examination. The intellectual context includes i) the theoretical background for the proof search algorithm AProS and its use for a dynamic Proof Tutor, and ii) the programmatic expansion of the course to Computational Logic. (I recommend that the reader enter the virtual classroom of Logic & Proofs: the interactive components just cannot be properly reflected in a narrative. It is also very easy to download AProS and observe its ways of searching for proofs.)1 [ABSTRACT FROM PUBLISHER] Copyright of Logic Journal of the IGPL is the property of Oxford University Press / USA and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Logic Journal of the IGPL,The AProS Project: Strategic Thinking & Computational Logic.,"Sieg, Wilfried"
23843004,10,,1,Korea Institute of Information & Communication Engineering,,International Conference on Future Information & Communication Engineering (ICFICE),A Study on Assessing of Computational Thinking.,Sook-Young Choi; Semin Kim
03601315,126,10.1016/j.compedu.2018.07.004,,Elsevier B.V.,"Computational Thinking (CT) is seen as an important competence that is required in order to adapt to the future. However, educators, especially K-12 teachers and researchers, have not clearly identified how to teach it. In this study, a meta-review of the studies published in academic journals from 2006 to 2017 was conducted to analyze application courses, adopted learning strategies, participants, teaching tools, programming languages, and course categories of CT education. From the review results, it was found that the promotion of CT in education has made great progress in the last decade. In addition to the increasing number of CT studies in different countries, the subjects, research issues, and teaching tools have also become more diverse in recent years. It was also found that CT has mainly been applied to the activities of program design and computer science, while some studies are related to other subjects. Meanwhile, most of the studies adopted Project-Based Learning, Problem-Based Learning, Cooperative Learning, and Game-based Learning in the CT activities. In other words, such activities as aesthetic experience, design-based learning, and storytelling have been relatively less frequently adopted. Most of the studies focused on programming skills training and mathematical computing, while some adopted a cross-domain teaching mode to enable students to manage and analyze materials of various domains by computing. In addition, since the cognitive ability of students of different ages varies, the CT ability cultivation methods and content criteria should vary accordingly. Moreover, most studies reported the learners' CT performance and perspectives, while their information society ability was seldom trained. Accordingly, the research trends and potential research issues of CT are proposed as a reference for researchers, instructors, and policy makers. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,How to learn and how to teach computational thinking: Suggestions based on a review of the literature.,"Hsu, Ting-Chia; Chang, Shao-Chen; Hung, Yu-Ting"
21698767,,,,IEOM Society International,"Various approaches can be adopted to develop students' computational thinking skills by teachers/academics. Despite the extensive literature on the adoption of computational skills, there is likely to be a lack of explanation of how computational skills are used for learning at different levels of education. So, this literature will explain various methods that can be used in developing computational skills in schools, which will make it easier for teachers or practitioners to choose what suitable techniques to apply in their classes. In conducting the literature, researchers selected 2064 articles in Science Direct and Google Scholar published in the 2015-2021 timeframe. Furthermore, 27 articles were selected and entered into the concept matrix table to synthesize the articles. Based on the literature, various learning methods develop the ability to think, which have their characteristics. To adopt these methods in learning instruction, it is necessary to consider the concept of computing, metacognitive practice, and student learning behavior. In addition, it is possible to combine several methods to achieve better results. [ABSTRACT FROM AUTHOR] Copyright of Proceedings of the International Conference on Industrial Engineering & Operations Management is the property of IEOM Society International and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Proceedings of the International Conference on Industrial Engineering & Operations Management,The Enticing Knowledge of Computational Thinking Development: Lessons Learnt from Recent Educational Literature.,"Oktavia, Dwi; Budiyanto, Cucuk Wawan; Yuana, Rosihan Ari"
22279709,6,10.3390/informatics6020025,2,MDPI,"Computational thinking and coding are key competencies in the 21st century. People with Down syndrome need to be part of this new literacy. For this reason, in this work, we present an exploratory study carried out with students with Down syndrome with cognitive ages of 3–6 years old using a tangible robot We applied the observational method during the sessions to analyze the participants' emotional states, engagement, and comprehension of the programming sequences. Results show that people with cognitive disabilities can acquire basic programming and computational skills using tangible robots such as KIBO. [ABSTRACT FROM AUTHOR] Copyright of Informatics is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Informatics,Computational Thinking and Down Syndrome: An Exploratory Study Using the KIBO Robot †.,"González-González, Carina S.; Herrera-González, Erika; Moreno-Ruiz, Lorenzo; Reyes-Alonso, Nuria; Hernández-Morales, Selene; Guzmán-Franco, María D.; Infante-Moro, Alfonso"
00010782,62,10.1145/3343445,11,Association for Computing Machinery,"The article discusses the Association for Computing Machinery's (ACM's) initiative known as CSpathshala for the promotion of computer science education and computational thinking in India, including its efforts to influence computer science education policy in India. The role the CSpathshala is set to play in teacher training for computer science curriculum in schools throughout India is discussed.",Communications of the ACM,CSpathshala: Bringing Computational Thinking to Schools.,"SHAH, VIPUL"
00010782,52,10.1145/1516046.1516054,6,Association for Computing Machinery,"The writer suggests that the current focus on computational thinking as a way of making computer science more attractive to other disciplines and potential students may be inadequate. Computational thinking is not clearly defined, is not specific to computer science, and does not describe the full scope of computer science. The great principles framework is used to show that computational thinking is only a practice used in computer science to achieve an objective.",Communications of the ACM,The Profession of IT Beyond Computational Thinking.,"Denning, Peter J."
00010782,51,10.1145/1378704.1378713,8,Association for Computing Machinery,"The goal of making computational thinking accessible to students across the entire campus is considered. In order to achieve this objective it will be necessary to understand how to improve the method of teaching computing. Computing education researchers are employing experimentation and design to address important questions about how humans come to understand computing, as well as how to facilitate a better understanding. Researchers draw on methods from education, sociology, and psychology with the aim of measuring learning about computing and understanding the factors that affect that learning. This research in computing education will prepare the way to making computational thinking a 21st century literacy that can be shared across the campus.",Communications of the ACM,Education: Paving the Way for Computational Thinking.,"Guzdial, Mark"
00010782,49,10.1145/1118178.1118215,3,Association for Computing Machinery,"Computational thinking is described, and its advantages in areas outside computer science are discussed. Computational thinking is the way humans address problems, and in computer science, it combines engineering and mathematical thinking. Once students have grasped the concept of computational thinking, they are able to apply it to areas other than computer science.",Communications of the ACM,Computational Thinking.,"Wing, Jeannette M."
03601315,187,10.1016/j.compedu.2022.104562,,Elsevier B.V.,"Although instruments for assessing students' computational thinking (CT) concepts in primary education have been developed, they have rarely been validated in terms of item response theory (IRT). We consider IRT to be a rigorous validation tool and apply it to a CT concepts test for primary education involving 13,670 students. A two-parameter logistic model was chosen over other IRT models, as it indicated an acceptable model fit and item fit. The discrimination parameters indicated that the instrument could effectively distinguish between students with various ability levels. Nominal response modelling in IRT was used to retrieve information from the students' responses, and those with a lower ability level were found to only consider one of the conditions provided, had no understanding of the repetition structure, and might have difficulties in associating a sprite with its corresponding codes. Based on ability estimates, we also found that the students' ability in terms of CT concepts increased with grades and that boys generally performed slightly better than girls. These results suggest that the instrument can be used to examine the learning achievements of students in terms of CT concepts. • We designed the test according to the focal knowledge, skills, and abilities (FKSAs) associated with the concepts. • We validated the CT concepts test using item response theory involving 13,670 primary school students. • This study contributes to the existing literature by validating a CT concepts test with methodological rigor. • We identified students' shortcomings based on their responses in understanding CT. • We found that students' CT concepts increased with grades, and boys performed slightly better than girls. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Validating a computational thinking concepts test for primary education using item response theory: An analysis of students' responses.,"Kong, Siu-Cheung; Lai, Ming"
20798954,8,10.3390/systems8040047,4,MDPI,"The purpose of this study was to investigate how computational modeling promotes systems thinking for English Learners (ELs) in fifth-grade science instruction. Individual student interviews were conducted with nine ELs about computational models of landfill bottle systems they had developed as part of a physical science unit. We found evidence of student engagement in four systems thinking practices. Students used data produced by their models to investigate the landfill bottle system as a whole (Practice 1). Students identified agents and their relationships in the system (Practice 2). Students thought in levels, shuttling between the agent and aggregate levels (Practice 3). However, while students could think in levels to develop their models, they struggled to engage in this practice when presented with novel scenarios (e.g., open vs. closed system). Finally, students communicated information about the system using multiple modalities and less-than-perfect English (Practice 4). Overall, these findings suggest that integrating computational modeling into standards-aligned science instruction can provide a rich context for fostering systems thinking among linguistically diverse elementary students. [ABSTRACT FROM AUTHOR] Copyright of Systems is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Systems,How Fifth-Grade English Learners Engage in Systems Thinking Using Computational Models.,"Haas, Alison; Grapin, Scott E.; Wendel, Daniel; Llosa, Lorena; Lee, Okhee"
09218890,75,10.1016/j.robot.2015.10.008,,Elsevier B.V.,"This work investigates the development of students’ computational thinking (CT) skills in the context of educational robotics (ER) learning activity. The study employs an appropriate CT model for operationalising and exploring students’ CT skills development in two different age groups (15 and 18 years old) and across gender. 164 students of different education levels (Junior high: 89; High vocational: 75) engaged in ER learning activities (2 hours per week, 11 weeks totally) and their CT skills were evaluated at different phases during the activity, using different modality (written and oral) assessment tools. The results suggest that: (a) students reach eventually the same level of CT skills development independent of their age and gender, (b) CT skills in most cases need time to fully develop (students’ scores improve significantly towards the end of the activity), (c) age and gender relevant differences appear when analysing students’ score in the various specific dimensions of the CT skills model, (d) the modality of the skill assessment instrument may have an impact on students’ performance, (e) girls appear in many situations to need more training time to reach the same skill level compared to boys. [ABSTRACT FROM AUTHOR] Copyright of Robotics & Autonomous Systems is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Robotics & Autonomous Systems,Advancing students’ computational thinking skills through educational robotics: A study on age and gender relevant differences.,"Atmatzidou, Soumela; Demetriadis, Stavros"
07356331,53,10.1177/0735633115608444,4,Sage Publications Inc.,"Computational thinking (CT) is a fundamental skill for students, and assessment is a critical factor in education. However, there is a lack of effective approaches to CT assessment. Therefore, we designed the Three-Dimensional Integrated Assessment (TDIA) framework in this article. The TDIA has two aims: one was to integrate three dimensions (directionality, openness, and process) into the design of effective assessment tasks; and the other was to assess comprehensively the three dimensions of CT including computational concepts, practices, and perspectives. Guided by the TDIA framework, we designed three pairs of tasks: closed forward tasks and closed reverse tasks, semiopen forward tasks and semiopen reverse tasks, and open tasks with a creative design report and open tasks without a creative design report. To further confirm each task’s applicability and its advantages and disadvantages, we conducted a test experiment at the end of the autumn semester in 2014 in a primary school for 3 weeks. The results indicated that (a) the reverse tasks were not more superior than the forward tasks; (b) the semiopen tasks and the open tasks were more effective than the closed tasks, and the semiopen tasks had higher difficulty and discrimination than the others; (c) the self-reports provided a helpful function for learning diagnosis and guidance; (d) the scores had no significant difference between the schoolboys and the schoolgirls in all six tasks; and (e) the six tasks’ difficulty and discrimination were all acceptable, and the semiopen tasks had higher difficulty and discrimination than the others. To effectively apply them, the following suggestions for teachers to design computational tasks are proposed: motivating students’ interest and enthusiasm, incorporating semifinished artifacts, involving learning diagnosis and guidance, and including multiple types of tasks in an assessment. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,An Exploration of Three-Dimensional Integrated Assessment for Computational Thinking.,"Zhong, Baichang; Wang, Qiyun; Chen, Jie; Li, Yi"
17465702,59,10.1093/itnow/bwx113,4,Oxford University Press / USA,The article discusses the use of computational thinking as an alternative method to teach digital skills in information technology (IT) education. According to Jeannette Wing that computational thinking will be a fundamental skill used by everyone in the world. It offers information on the Tech Kids to Code (TKTC) movement that advocates teaching coding skills using languages like Phyton which is a relatively friendly programming language.,ITNOW,TOWARDS • COMPUTATIONAL • THINKING.,"Beecher, Karl"
23843004,9,,1,Korea Institute of Information & Communication Engineering,,International Conference on Future Information & Communication Engineering (ICFICE),Novel Engineering: A novel way to integrate Computational Thinking into Liberal Arts.,Ki-Cheon Hong
07475632,41,10.1016/j.chb.2014.09.012,,Elsevier B.V.,"Programming is more than just coding, for, it exposes students to computational thinking which involves problem-solving using computer science concepts like abstraction and decomposition. Even for non-computing majors, computational thinking is applicable and useful in their daily lives. The three dimensions of computational thinking are computational concepts, computational practices and computational perspectives. In recent years, the availability of free and user-friendly programming languages has fuelled the interest of researchers and educators to explore how computational thinking can be introduced in K-12 contexts. Through an analysis of 27 available intervention studies, this paper presents the current trends of empirical research in the development of computational thinking through programming and suggests possible research and instructional implications. From the review, we propose that more K-12 intervention studies centering on computational practices and computational perspectives could be conducted in the regular classroom. To better examine these two dimensions, students could be asked to verbalize their thought process using think aloud protocol while programming and their on-screen programming activity could be captured and analyzed. Predetermined categories based on both past and recent programming studies could be used to guide the analysis of the qualitative data. As for the instructional implication, it is proposed that a constructionism-based problem-solving learning environment, with information processing, scaffolding and reflection activities, could be designed to foster computational practices and computational perspectives. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Review on teaching and learning of computational thinking through programming: What is next for K-12?,"Lye, Sze Yee; Koh, Joyce Hwee Ling"
08993408,28,10.1080/08993408.2018.1533297,3,Taylor & Francis Ltd,"Unplugged activities have been one approach to introduce computational thinking (CT) to students before any form of coding is involved. This paper reports on a study that examines the evaluation of the types of CT skills inculcated through an unplugged activity. Students in a grade 9 class were engaged in an unplugged activity on sorting before being asked to represent their understanding in the form of pseudo-English, flowchart or Python code. The assessment of CT skills comprises the aspects of decomposition, algorithmic design, generalization, abstraction and evaluation. Qualitative Comparative Analysis (QCA) was used to take a closer look at the unplugged CT activity and the subsequent artifact production. Such a QCA analysis can be used to inform a framework for designing instruction and tasks to target and teach certain types of CT knowledge in novice programmers, as well as for assessing an instruction package as to what CT knowledge is being covered. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Analysis of linkages between an unplugged activity and the development of computational thinking.,"Looi, Chee-Kit; How, Meng-Leong; Longkai, Wu; Seow, Peter; Liu, Liu"
15219615,19,10.1109/MCSE.2017.3151241,4,IEEE,"A decade of discourse to capture the essence of computational thinking has resulted in a broad set of skills whose teaching continue to pose challenges because of the reliance on the use of electronic computers and programming concepts. This article not only links computational thinking skills to fundamental cognitive competencies but also describes pedagogical tools that have proven effective in teaching them at early ages. [ABSTRACT FROM PUBLISHER] Copyright of Computing in Science & Engineering is the property of IEEE and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computing in Science & Engineering,The Essence of Computational Thinking.,"Yasar, Osman"
20763417,14,10.3390/app14156418,15,MDPI,"In the age of intelligence, information technology (IT) education has become the focus of attention in the education sector. However, traditional teaching methods fall short in motivating students and fostering higher-order thinking and have difficulty providing a personalized learning experience. Although AI chatbots can provide instant feedback as an innovative teaching tool, it is still challenging to fully enhance learner engagement. Based on this, this study developed a digital game-based AI chatbot system to enhance students' learning experience through digital game-based learning strategies. This study utilized a quasi-experimental design with the experimental group using a digital game-based AI chatbot and the control group using a traditional AI chatbot. A comparison was made between the two groups concerning student learning performance in IT courses, higher-order thinking (including problem-solving, computational thinking, and creativity), learning motivation, and flow experience. In addition, the behavioral patterns of high-achieving and low-achieving students in the experimental group were analyzed. The results showed that the experimental group was significantly better than the control group in academic performance, problem-solving, computational thinking, learning motivation, and flow experience, but there was no significant difference in creativity tendency. Behavioral pattern analysis showed that high-achieving students in the experimental group showed more systematic learning strategies, while low-achieving students relied more on immediate feedback and external help, but both high- and low-achieving groups were able to actively talk to the AI chatbot and actively explore problem-solving strategies in the digital game. Therefore, AI chatbots based on digital games can be effectively used in IT courses to help students construct knowledge and develop higher-order thinking. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),"The Impact of a Digital Game-Based AI Chatbot on Students' Academic Performance, Higher-Order Thinking, and Behavioral Patterns in an Information Technology Curriculum.","Xu, Yeqing; Zhu, Jingdong; Wang, Minkai; Qian, Fang; Yang, Yiling; Zhang, Jie"
00010782,54,10.1145/1965724.1965742,7,Association for Computing Machinery,"The article discuss the algorithmic composition of music, both prior and subsequent to the advent of the digital computer. In the eleventh century Guido d'Arezzo invented a formal method of setting words to music. A composition written by Guillaume Dufay in the fifteenth century is an early example of music based on numerical ratios. Noted composer Wolfgang Amadeus Mozart is believed to have resorted to algorithmic methods at least once. In 1956 Lejaren Hiller and Leonard Isaacson cooperated to produce the world's first computer-aided composition.",Communications of the ACM,Algorithmic Composition: Computational Thinking in Music.,"Edwards, Michael"
03601315,195,10.1016/j.compedu.2022.104721,,Elsevier B.V.,"The use of educational robotics for programming education has been shown to be effective in fostering students' computational thinking (CT) skills. However, physical educational robots are expensive, which may limit their wide use in the classroom. This study used augmented reality technology to develop a virtual educational robotic system (AR Bot for short), which offers 3D visual learning feedback to strengthen spatial ability, as well as delayed feedback and auto-scoring feedback to promote students' deeper CT processes. To examine the impact of AR Bot on programming learning, this study used a quasi-experimental design to compare an experimental group of 41 first-year university students who used AR Bot and a control group of 34 first-year university students who used Scratch. We assessed the impact of the two CT tools on students' internal learning processes (enjoyment of learning), CT skills (problem decomposition, algorithm design, and algorithm efficiency skills), and academic achievement. The results showed that students who used AR Bot had higher enjoyment of learning, algorithm design skills, and algorithm efficiency skills but not higher problem decomposition skills and academic achievement than students who used Scratch. Enjoyment of learning led to higher problem decomposition, algorithm design, and algorithm efficiency skills but not academic achievement. Problem decomposition and algorithm design skills, but not algorithm efficiency skills, led to academic achievement. The theoretical and practical implications of the proposed tool and other CT tools in programming education are discussed. • AR Bot is a virtual educational robotics with 3D visuals and delayed feedback. • Use of AR Bot promoted students' learning enjoyment compared to Scratch. • AR Bot-induced enjoyment led to higher computational skill dimensions. • AR Bot enhanced students' algorithm design and algorithm efficiency skills. • AR Bot-driven computational skills enhanced students' academic achievement. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,"Effect of augmented reality-based virtual educational robotics on programming students' enjoyment of learning, computational thinking skills, and academic achievement.","Ou Yang, Fang-Chuan; Lai, Hui-Min; Wang, Yen-Wen"
10613773,32,10.1002/cae.22698,2,Wiley-Blackwell,"The problem‐project‐oriented STEM education plays a significant role in training students' ability of innovation. Although the conceive‐design‐implement‐operate (CDIO) approach and computational thinking (CT) are hot topics in recent decades, there are still two deficiencies: the CDIO approach and CT are discussed separately and a general framework of coping with complex STEM problems in system modeling and simulation is missing. In this paper, a collaborative strategy based on the CDIO and CT is proposed for solving complex STEM problems in system modeling and simulation with a general framework, in which the CDIO is about ""how to do,"" CT is about ""how to think,"" and the project means ""what to do."" As an illustration, the problem of solving the period of mathematical pendulum is discussed in detail. The most challenging task involved in the problem is to compute the complete elliptic integral of the first kind (CEI‐1). In the philosophy of STEM education, all problems have more than one solution. For computing the CEI‐1, four methods are discussed with a top‐down strategy, which includes the infinite series method, arithmetic‐geometric mean method, Gauss–Chebyshev method, and Gauss‐Legendre method. The algorithms involved can be utilized for R & D projects of interest and be reused according to the requirements encountered. The general framework for solving complex STEM problems in system modeling and simulation is worth recommending to college students and instructors. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,CDIO‐CT collaborative strategy for solving complex STEM problems in system modeling and simulation: An illustration of solving the period of mathematical pendulum.,"Zhang, Hong‐Yan; Zhou, Yu; Li, Yu‐Tao; Li, Fu‐Yun; Jiang, Yong‐Hui"
22111662,20,10.1007/s10758-014-9237-1,1,Springer Nature,"This emerging technology report describes virtual environment interactions an approach for blending movement and computer programming as an embodied way to support girls in building computational thinking skills. The authors seek to understand how body syntonicity might enable young learners to bootstrap their intuitive knowledge in order to program a three-dimensional character to perform movements. We have gained insight into the desire for character realism. The lessons learned to date, as well as the challenges to integrating the physical and virtual and keeping the interactions rich are discussed. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",Embodying Computational Thinking: Initial Design of an Emerging Technological Learning Tool.,"Daily, Shaundra; Leonard, Alison; Jörg, Sophie; Babu, Sabarish; Gundersen, Kara; Parmar, Dhaval"
03601315,82,10.1016/j.compedu.2014.11.022,,Elsevier B.V.,"The purpose of this study was to investigate how elementary school teachers with limited computer science experience in a high-need school integrated computational thinking into their instruction. The researchers conducted a cross-case analysis across different instructional contexts (e.g., general education classrooms, library, art) that included multiple observations and interviews over four months. Major themes included: (a) a wide range of implementation models emerged depending on teaching contexts, (b) ongoing professional development and embedded coaching resulted in increasing participation in computing education, (c) teachers and administrators viewed barriers to implementing computing from a problem solving framework, and (d) struggling learners, including students with disabilities and those living in poverty, benefitted from computing education that included scaffolding, modeling, and peer collaboration. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Supporting all learners in school-wide computational thinking: A cross-case qualitative analysis.,"Israel, Maya; Pearson, Jamie N.; Tapia, Tanya; Wherfel, Quentin M.; Reese, George"
21698767,,,,IEOM Society International,"Computational thinking skill is advocated for children for their general problem-solving ability. However, children with vision deficiency are restrained from developing their computational thinking skills as the recently available tools do not cater for people with disability. This paper aims to address the need for computational thinking in children with visual impairments. This paper uses a literature review method following the Systematic Literature Review framework by collecting relevant articles on the development of computational thinking skills in blind children. Fourteen empirical reports published between 2017-2020 were aggregated from Google Scholar and SCOPUS. The papers, then analyzed using a critical analysis approach. The analysis reveals that children with visual impairment are largely overlooked in the computational thinking literature. Despite the vast amount of media facilitating computational thinking skills, only a few technologies accommodate children with visual disabilities. They are not only involved in shaping the characteristics of basic computing abilities but also encourage blind children to cultivate a passion for learning and encourage future spatial and computational thinking skills. [ABSTRACT FROM AUTHOR] Copyright of Proceedings of the International Conference on Industrial Engineering & Operations Management is the property of IEOM Society International and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Proceedings of the International Conference on Industrial Engineering & Operations Management,Addressing Computational Thinking Needs' of Visually Impaired Children.,"Andry Pamungkas, Mey Tias; Budiyanto, Cucuk Wawan; Suharno"
03601315,181,10.1016/j.compedu.2022.104445,,Elsevier B.V.,"Computational thinking (CT) skills help students both understand and utilize computing in various domains to cope with the challenges posed by the complex digital world. This study applied mind mapping to programming language instruction in a primary school, and explored the effects of mind mapping on students' CT skills when learning programming with Scratch as a programming tool. Two types of mind mapping, construct-by-self mind mapping (CBS-MM) and construct-on-scaffold mind mapping (COS-MM), were proposed to compare which type is more effective in terms of students' CT skills. Seventy-three public primary school fifth-grade students aged 10 to 11 participated in the study. The CBS group included 33 students learning with the CBS-MM instructional approach, while the COS group comprised 40 students learning with the COS-MM instructional approach. Data were obtained from nine topic Scratch programming assignments and pre- and post-CT skills surveys completed by the two groups. Paired sample t tests were used to analyze whether the two types of mind mapping approach could improve both groups' CT skills. One-way ANCOVA and one-way ANOVA were used to examine the difference in the two groups' CT skills. The results showed that both CBS-MM and COS-MM can improve students' CT skills; however, the COS group students could better improve their CT skills with the assistance of the COS-MM method compared with the CBS group students who learned with the CBS-MM method. The findings of this study can provide some enlightenment for relevant instructors to design instruction and implement programming teaching with different kinds of mind mapping support that facilitates students' CT. • Computational thinking (CT) skills are important for students in the digital world. • Construct-by-self mind mapping (CBS-MM) can improve students' CT skills. • Construct-on-scaffold mind mapping (COS-MM) can improve students' CT skills. • COS-MM could better improve students' CT skills than those with CBS-MM. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Effect of different mind mapping approaches on primary school students' computational thinking skills during visual programming learning.,"Zhao, Li; Liu, Xiaohong; Wang, Chenhui; Su, Yu-Sheng"
10494820,25,10.1080/10494820.2016.1181093,6,Taylor & Francis Ltd,"Much application software education in Taiwan can hardly be regarded as practical. The researchers in this study provided a flexible means of ubiquitous learning (u-learning) with a mobile app for students to access the learning material. In addition, the authors also adopted computational thinking (CT) to help students develop practical computing skills. Three classes of first-year students were chosen for the empirical study. They were divided into three groups: two experimental groups (CT&UL group and CT group) and one control group. According to the results in this study, students who received the treatment of u-learning could have significantly better computing skills in using PowerPoint and Word than those without. However, the treatment of web-mediated CT did not result in better development of students’ computing skills in this research. Finally, the researchers expect that this study provides a design and illustration of CT in a u-learning environment for schools and educators. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Exploring the effects of web-mediated computational thinking on developing students’ computing skills in a ubiquitous learning environment.,"Tsai, Chia-Wen; Shen, Pei-Di; Tsai, Meng-Chuan; Chen, Wen-Yu"
07475632,72,10.1016/j.chb.2017.01.005,,Elsevier B.V.,"It is possible to define Computational Thinking briefly as having the knowledge, skill and attitudes necessary to be able to use the computers in the solution of the life problems for production purposes. In this study, a scale has been developed for the purpose of determining the levels of computational thinking skills (CTS) of the students. CTS is a five-point likert type scale and consists of 29 items that could be collected under five factors. The study group of this work consists of 726 students educated at the levels of associate degree and undergraduate degree with formal education in Amasya University for the first application. For the second application 580 students who were educated in pedagogical formation education via distance education in Amasya University. The validity and reliability of the scale have been studied by conducting exploratory factor analysis, confirmatory factor analysis, item distinctiveness analyses, internal consistency coefficients and constancy analyses. As a result of the conducted analyses, it has been concluded that the scale is a valid and reliable measurement tool that could measure the computational thinking skills of the students. In addition; the digital age individuals are expected to have the computational thinking skill, and at what degree they have these skills, the revelation of whether the levels they have are sufficient or not are a requirement. Within this frame, it could be said that the scale could make significant contributions to the literature. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,A validity and reliability study of the computational thinking scales (CTS).,"Korkmaz, Özgen; Çakir, Recep; Özden, M. Yaşar"
0020739X,48,10.1080/0020739X.2016.1254296,3,Taylor & Francis Ltd,"The goal of this paper is to promote computational thinking among mathematics, engineering, science and technology students, through hands-on computer experiments. These activities have the potential to empower students to learn, create and invent with technology, and they engage computational thinking through simulations, visualizations and data analysis. We present nine computer experiments and suggest a few more, with applications to calculus, probability and data analysis, which engage computational thinking through simulations, visualizations and data analysis. We are using the free (open-source) statistical programming language R. Our goal is to give a taste of what R offers rather than to present a comprehensive tutorial on the R language. In our experience, these kinds of interactive computer activities can be easily integrated into a smart classroom. Furthermore, these activities do tend to keep students motivated and actively engaged in the process of learning, problem solving and developing a better intuition for understanding complex mathematical concepts. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Mathematical Education in Science & Technology is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Mathematical Education in Science & Technology,"Introducing computational thinking through hands-on projects using R with applications to calculus, probability and data analysis.","Benakli, Nadia; Kostadinov, Boyan; Satyanarayana, Ashwin; Singh, Satyanand"
03601315,193,10.1016/j.compedu.2022.104664,,Elsevier B.V.,"As we begin to identify essential skills for the future, there has been an increased focus on how to define and implement computational thinking within education. However, the question of how to engage children with coding activities within the context and limitations of the curriculum remains relatively explored. In our study, a human-centered design approach was followed to guide a small group of children through the co-design, implementation and evaluation of a board game. The board game had two versions: an offline version involving a robotic agent and an online version with its digital equivalent. A mixed-method approach was used to understand and compare levels of engagement, usability, and collaboration in both versions of the game. The tangible aspect of working with a robotic agent in the offline version led to greater levels of motivation and involvement with the game mechanics. Tangible robotics games tend to be more approachable for children. Our study shows that using such games by connecting the mathematics curriculum with coding problems can successfully engage participants in collaborative computational thinking activities. We contribute to the field by providing human-centered guidance for the creation of educational tools to develop computational thinking. Such guidance is not only applicable in technologically rich environments; it can also be applied in educational communities with limited access to technology. • A board game with an online and offline version was co-designed with children. • A gamified robotic agent was used to encourage problem-solving during coding activities. • Increased motivation was observed in the offline version of the game when it came to coding and moving the robotic agent. • Equal levels of engagement and perception of game mechanics were observedin both versions of the game. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,"Offline and online user experience of gamified robotics for introducing computational thinking: Comparing engagement, game mechanics and coding motivation.","Madariaga, Leonardo; Allendes, Carolina; Nussbaum, Miguel; Barrios, Gustavo; Acevedo, Nicolás"
00010782,62,10.1145/3344262,9,Association for Computing Machinery,"The authors discuss the issues of overenthusiastic programmers and computational thinking. They mention programmers who haven't learned to microtask and want to completely overhaul a project's architecture, the question of human-computer interfaces, and programming within a domain.",Communications of the ACM,"Why Programmers Should Curb Their Enthusiasm, and Thinking about Computational Thinking.","Bugayenko, Yegor; Guzdial, Mark"
03601315,181,10.1016/j.compedu.2022.104457,,Elsevier B.V.,"Programming attitude has received increasing attention in programming and computational thinking (CT) education. However, at present, analysis remains scant on the correlation between students' programming attitudes and their CT skills, and less attention is paid to the influencing effects of gender and programming experience. This study first validated a newly developed programming attitudes scale (χ2/df = 2.308, RMSEA = 0.073, CFI = 0.925, TLI = 0.912) among 1180 seventh-grade students (12–13 years old). It then analyzed the relationship between students' programming attitudes and CT skills considering gender differences. Students' programming attitudes significantly predicted their CT skills. Girls have higher CT skills than boys, but their more negative programming attitudes may affect their continued skill development. Third, the relationship among programming experience, programming attitudes, and CT skills was discussed among the sample (N = 175) with programming experience, revealing that programming attitudes played an intermediary role between programming experience and CT skills. Two specific factors of programming experience (first time learning programming and programming learning duration) had differing effects on students' programming attitudes and CT skills. For programming attitudes, the grade in which students got started with programming had no effect on their programming attitudes, but programming attitudes rose with increased programming learning time. For CT, students who learned programming starting in second grade possessed the highest CT level. In addition, there is an inverted U-shaped curve between students' programming learning duration and CT skills, peaked at the fourth year of programming learning career. Implications for promoting junior high school students' CT skills and their positive attitudes toward programming are also discussed. • The programming attitudes scale has sufficient reliability and validity. • Students' programming attitudes significantly predicted CT skills. • There are significant gender differences in CT skills and programming attitudes. • Programming attitudes play an intermediary role between programming experience and CT. • The two specific factors of programming experience had different effects on CT and programming attitudes. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Programming attitudes predict computational thinking: Analysis of differences in gender and programming experience.,"Sun, Lihui; Hu, Linlin; Zhou, Danhua"
07437315,105,10.1016/j.jpdc.2016.12.027,,Academic Press Inc.,"Nowadays, many fields of science and engineering are evolving through the joint contribution of complementary fields. Computer science, and especially High Performance Computing, has become a key factor in the development of many research fields, establishing a new paradigm called computational science. Researchers and professionals from many different fields require knowledge of High Performance Computing, including parallel programming, to develop fruitful and efficient work in their particular field. Therefore, at Universitat Autònoma of Barcelona (Spain), an interdisciplinary Master on “Modeling for Science and Engineering” was started 5 years ago to provide a thorough knowledge of the application of modeling and simulation to graduate students in different fields (Mathematics, Physics, Chemistry, Engineering, Geology, etc.). In this Master’s degree, “Parallel Programming” appears as a compulsory subject because it is a key topic for them. The concepts learned in this subject must be applied to real applications. Therefore, a complementary subject on “Applied Modeling and Simulation” has also been included. It is very important to show the students how to analyze their particular problems, think about them from a computational perspective and consider the related performance issues. So, in this paper, the methodology and the experience in introducing computational thinking, parallel programming and performance engineering in this interdisciplinary Master’s degree are shown. This overall approach has been refined through the Master’s life, leading to excellent academic results and improving the industry and students appraisal of this programme. [ABSTRACT FROM AUTHOR] Copyright of Journal of Parallel & Distributed Computing is the property of Academic Press Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Parallel & Distributed Computing,"Introducing computational thinking, parallel programming and performance engineering in interdisciplinary studies.","Cesar, Eduardo; Cortés, Ana; Espinosa, Antonio; Margalef, Tomàs; Moure, Juan Carlos; Sikora, Anna; Suppi, Remo"
03601315,177,10.1016/j.compedu.2021.104379,,Elsevier B.V.,"Malaysia has introduced computational thinking skills as part of a curriculum integration update to meet the global trends in 21st-century education, focusing on empowering digital literacy. Nevertheless, a preliminary investigation revealed an apparent lack of understanding of computational thinking skills in general among teachers. The study explores the feasibility of developing a localized E-learning system to train computational thinking skills among teachers. An E-learning system, termed as myCTGWBL, was developed on the basis of a newly proposed conceptual framework to present computational thinking teaching–learning repertoire to the teachers. The hypothesis is that myCTGWBL would develop teachers' computational thinking and its position in teaching–learning understanding. myCTGWBL relevance was tested through DeLone and McLean's information system and Urbach's collaboration quality construct. To determine the success factors, partial least squares structural equation modeling was used. A total of 369 teachers participated in a two-stage survey. Participants' understanding of computational thinking and perceptions were recorded at the pre- and post-intervention phases. Open-ended questions of the surveys were analyzed using a simple text analysis technique. The closed-ended questions surveys were analyzed using SPSS Statistics 22.0. A significant improvement in teachers' computational thinking teaching–learning repertoire in a relatively short period has been recorded. Teachers also demonstrated increased confidence in the future delivering computational thinking-based lessons. The E-learning conceptual framework has illustrated the predictive power between user intent, user satisfaction, and Computational thinking (CT) knowledge benefits. Results demonstrate that myCTGWBL could be used to guide future planning when establishing CT knowledge acquisition initiatives, particularly among teachers. • myCTGWBL has positive effects on teachers' computational thinking teaching and learning repertoire. • 369 teachers participated in the empirical testing. • The Partial Least Squares Structural Equation Modeling (PLS-SEM) explains the success factors of myCTGWBL. • Teachers claimed that continuous professional development would benefit the teaching and learning practices. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Computational thinking for teachers: Development of a localised E-learning system.,"Ung, Ling-Ling; Labadin, Jane; Mohamad, Fitri Suraya"
18472001,,,,Faculty of Organization & Informatics,"In this paper, we introduce a novel approach to facilitate the acquisition of complex learning concepts among early-age learners, which are typically designed for older age groups, through programming workshops. Our research demonstrates how 3rd-grade elementary school students can effectively comprehend and apply material typically taught in the 6th-grade curriculum, specifically related to the coordinate system and its navigation. We conducted a series of three iteration tests, with the first two being identical tests administered three months apart. The third test was intentionally designed to be more challenging and intricate to evaluate the student's ability to handle more difficult tasks after an additional three months. Our findings indicate that younger students can successfully grasp the fundamental concepts of the coordinate system and its navigation by utilizing Scratch1 programming and engaging in enjoyable exercises, such as homework assignments. [ABSTRACT FROM AUTHOR] Copyright of Central European Conference on Information & Intelligent Systems is the property of Faculty of Organization & Informatics and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Central European Conference on Information & Intelligent Systems,How Programming Helps Early-Age Learners Tackle Complex Concepts.,"Lipovac, Josipa; Potoč, Dorotea; Jagušt, Tomislav"
21660727,,,18,Conferencia Iberica de Sistemas Tecnologia de Informacao,"The ""Scratch4All"" project aims to reduce school dropout rates by encouraging and motivating students in the 1st, 2nd, and 3rd cycles of elementary schools to achieve academic success. In addition, the project promotes true equality of opportunity in terms of educational resources. A learning environment that contributes positively to the improvement of educational results is created through the use of new technologies, specifically programming in the Scratch language and robotics. Impact indicators were developed and used as project evaluation tools based on Theory of Change. This paper presents and analyzes the changes observed from the perspective of the project's teachers' stakeholders during the 2020/2021 school year. This group of beneficiaries is critical to the project's success and continuation, not only because of the special relationship they have with the students, but also with their families and the school. The assessment of impact is very positive in terms of indicators such as school success and motivation, particularly in Mathematics and Portuguese Language, as well as in the reduction of inequalities, access to new technologies, and contribution to gender equality. [ABSTRACT FROM AUTHOR] Copyright of CISTI (Iberian Conference on Information Systems & Technologies / Conferência Ibérica de Sistemas e Tecnologias de Informação) Proceedings is the property of Conferencia Iberica de Sistemas Tecnologia de Informacao and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",CISTI (Iberian Conference on Information Systems & Technologies / Conferência Ibérica de Sistemas e Tecnologias de Informação) Proceedings,A Teacher-Focused Impact Assessment in Scratch4All Project.,"Vasconcelos, Verónica; Bigotte, Emília; Marques, Luís; Almeida, Ricardo"
22747214,197,10.1051/matecconf/201819715011,,EDP Sciences,,MATEC Web of Conferences,Exploring Computational Thinking to Improve Energy-Efficient Programming Skills.,"Abdullah, Ade Gafar; Nandiyanto, Asep Bayu Dani; Anistyasari, Yeni; Ekohariadi; Kurniawan, Ari"
18657923,16,10.3991/ijim.v16i06.28391,6,International Journal of Interactive Mobile Technologies,"Harmonised with the shift of education to satisfying the requirements of modern societies for cultivating 21st century skills, we introduce the novel idea of the synergistic development of computational thinking skills and environmental awareness in the early primary school years, by employing mobile technologies. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,Employing Mobile Technologies to Investigate the Association Between Abstraction Skills and Performance in Environmental Studies in Early Primary School.,"Kanaki, Kalliopi; Kalogiannakis, Michail; Poulakis, Emmanouil; Politis, Panagiotis"
01641212,183,10.1016/j.jss.2021.111107,,Elsevier B.V.,"Computational Thinking (CT) has been investigated from different perspectives. This research aims to investigate how secondary school girls perceive CT practices – the problem-solving practices that students apply while they are engaged in programming – when using the micro:bit device in a collaborative setting. This study also explores the collaborative programming process of secondary school girls with the micro:bit device. We conducted mixed-methods research with 203 secondary school girls (in the state of Victoria, Australia) and 31 mentors attending a girls-only CT program (OzGirlsCT program). The girls were grouped into 52 teams and collaboratively developed computational solutions around realistic, important problems to them and their communities. We distributed two surveys (with 193 responses each) to the girls. Further, we surveyed the mentors (with 31 responses) who monitored the girls, and collected their observation reports on their teams Our study indicates that the girls found ""debugging"" the most difficult type of CT practice to apply, while collaborative practices of CT were the easiest. We found that prior coding experience significantly reduced the difficulty level of only one CT practice - ""debugging"". Our study also identified six challenges the girls faced and six best practices they adopted when working on their computational solutions. • Debugging is the most difficult CT practice for secondary school girls to apply. • CT collaborative practices are the easiest practices for secondary school girls. • Secondary school girls face six challenges when programming with the micro:bit. • School secondary girls adopt six best practices to address these challenges. [ABSTRACT FROM AUTHOR] Copyright of Journal of Systems & Software is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Systems & Software,How secondary school girls perceive Computational Thinking practices through collaborative programming with the micro:bit.,"Shahin, Mojtaba; Gonsalvez, Christabel; Whittle, Jon; Chen, Chunyang; Li, Li; Xia, Xin"
03601315,176,10.1016/j.compedu.2021.104353,,Elsevier B.V.,"Both computational thinking (CT) and creativity have been recognized as key skills for today's learners. Over the last decade, research of both skills in a single context has emerged. In this paper, we present a scoping review of 62 such empirical from 2011 to 2020. Our goal was to have a thorough understanding of the educational settings in which research on both CT and creativity was conducted, the theoretical foundations it has laid down, and the research tools used. Our findings indicate a geographical bias (dominance of the US and prominence of developed European countries), as well as a focus on secondary education and on STEM-related disciplines; this could be explained by the current situation of CT spread. We also found that when studying CT and creativity jointly, it is most common to define CT in a broader perspective than merely programming of computer science. Additionally, while creativity is largely referred to as product-related, CT is barely referred to as such. Taken together, our findings point out some gaps in the current research of CT and creativity and suggest how it should be expended on the fertile grounds of creativity, as the latter crosses geographical, age, and subject borders. Doing so may build a bridge between CT and creativity in a way that will benefit both. • We present a scoping review of studies of CT and creativity. • There are geographical, age, and subject gaps in these studies. • CT is mostly defined in a broader manner than programming or computer science. • Creativity is mostly referred to as product- or person-related, CT is barely measured by product. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Studying interrelations of computational thinking and creativity: A scoping review (2011–2020).,"Israel-Fishelson, Rotem; Hershkovitz, Arnon"
00010782,67,10.1145/3653308,8,Association for Computing Machinery,"The article discusses the integration of computing education into school curricula globally, emphasizing the need for clear and accessible definitions of computing to facilitate understanding and support from educators and policymakers. It highlights the Brazilian Computer Society's efforts in creating the ""Brazilian Computing Standards for School,"" which mandates computing education across all levels of Brazilian schools, focusing on computational thinking, digital world skills, and digital culture. This framework aims to equip students with essential computational skills, fostering ethical and innovative problem-solving abilities for success in a digitally driven world",Communications of the ACM,"Computing Everywhere, for Everyone, at Any Level.","Zorzo, Avelino F.; Motta, Claudia L. R. Da; Ribeiro, Leila; Granville, Lisandro Z."
07380569,40,10.1080/07380569.2023.2175634,3,Taylor & Francis Ltd,"Computational thinking and programming have emerged as central 21st-century skills. Several countries have embedded these skills in their school curricula. This study investigates how an optional programming course affects eighth-grade mathematical problem solving in Norway using a quasi-experimental design with pre- and post-tests. These tests consist of problem solving items from the 2003 Programme for International Student Assessment (Organisation for Economic Co-operation & Development, 2003a). The students taking these tests were divided into two groups: one with students enrolled in an optional programming course and one with students enrolled in other optional courses. Our results indicate no significant difference in the development of mathematical problem solving for the optional programming course students compared with those in other optional courses. Our discussion of these results offers further insights into how problem solving in computational thinking and programming align with mathematical problem solving. [ABSTRACT FROM AUTHOR] Copyright of Computers in the Schools is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in the Schools,Do Optional Programming Courses Affect Eighth-Grade Students' Mathematical Problem Solving?,"Refvik, Kim André Stavenæs; Opsal, Hilde"
07475632,122,10.1016/j.chb.2021.106836,,Elsevier B.V.,"Computational thinking (CT) practices have gained increasing importance in primary school education. However, there are few tools to measure primary school students' CT practices that are based on rigorous psychometric approaches. This study developed an operational definition for CT practices by exploring the key dimensions of their composition and, more importantly, developed and validated a generic test tool that can effectively assess students' CT practices. Items to measure CT practices were developed using the evidence-centered design (ECD) approach. These items prompted students to exhibit behaviors that demonstrated their skills in the four dimensions of CT practice, namely testing and debugging, algorithmic thinking, reusing and remixing, and abstracting and modularizing. A test consisting of these items was administered to 13,956 Grade 4–6 primary school students from 56 public schools in Hong Kong. The data were analyzed based on the item response theory (IRT) approach, together with other psychometric tests. A bi-factor three-parameter logistic model was ultimately adopted for test validation, as it fitted the data better than the corresponding two-parameter and one-parameter logistic models. The results validated the four-dimensional structure of the CT practices test. The reliability, test item characteristics, and CT practice abilities of students are also discussed. • Provided a theory-driven base for the test development of computational thinking practices. • Developed test tool of computational thinking practices based on the evidence-centered design approach. • Testlet response analysis was adopted for test validation and refinement. • The computational thinking practices test was generic for potential use in a broad range of CT contexts. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Item response analysis of computational thinking practices: Test characteristics and students' learning abilities in visual programming contexts.,"Kong, Siu Cheung; Wang, Yi Qing"
17465702,57,10.1093/itnow/bwv111,4,Oxford University Press / USA,"The article presents the views of Phillip Snalune, co-founder of the coding platform Codio, on computational thinking as an important skill for school students for their contribution to the changing workforce of Great Britain. Topics include application of computational thinking to commercial business or public service, and computer science becoming a mandatory subject in the curriculum.",ITNOW,THE BENEFITS OF COMPUTATIONAL THINKING.,"Snalune, Phillip"
07356331,61,10.1177/07356331231171622,6,Sage Publications Inc.,"Pattern recognition is an important skill in computational thinking. In this study, an equation puzzle game was developed by combining pattern recognition with algebraic reasoning, and scaffolding was designed to support learners' learning. Sixty participants were enrolled in this study, divided into a control group and an experimental group to compare the results and differences in game achievement, flow, anxiety, and motivation of participants with and without algebraic reasoning scaffolding. The results of the study showed that the participants in both groups had positive flow and motivation during the game, did not feel over-anxious, and there was no significant difference in the game achievement of the two groups. In addition, the game with the scaffolding may have the potential to make a positive correlation between game achievement and psychological status. The results of this study indicated that the game did not cause too much anxiety to the participants. The scaffolding-based design achieves the intended effect on the participants' assistance and facilitates the participants' engagement in pattern recognition problem solving. And as learners became more focused and engaged, they could also perform better in the game. This game mechanism can be used as a reference for designing pattern recognition games. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Learning Pattern Recognition Skills From Games: Design of an Online Pattern Recognition Educational Mobile Game Integrating Algebraic Reasoning Scaffolding.,"Chen, Yu-Chi; Chao, Chi-Yu; Hou, Huei-Tse"
10494820,28,10.1080/10494820.2020.1711326,3,Taylor & Francis Ltd,"There is considerable debate and ambiguity around what constitutes ""computational thinking"" (CT). In contrast to Computer Science which is generally treated as a distinct field of study, CT as a construct highlights the integral relationship between computing and other fields. Many recent efforts seek to map computational thinking by making high-level connections to other school disciplines. We argue that while these efforts may help identify specific curricular areas in which computing is likely to take place, they do not sufficiently capture the specificity and dynamism that is characteristic of meaningful computational integration. Worse, they exclude generative examples of computing integration that exist outside of the traditional STEM context or researcher-led efforts. In this special issue, we offer a counterproposal to one-size-fits-all frameworks of CT by exploring in detail how local, emergent definitions of CT develop across a diversity of spaces of learning. Reflecting on these examples can help researchers and educators alike cultivate an awareness of the ways in which learners and educators leverage computing to think, create, and participate across a variety of spaces. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Stories from the field: locating and cultivating computational thinking in spaces of learning.,"Wilkerson, Michelle Hoda; D'Angelo, Cynthia M.; Litts, Breanne K."
03601315,169,10.1016/j.compedu.2021.104222,,Elsevier B.V.,"This longitudinal study examined changes in Computational Thinking (CT) skills in first and second grade students exposed to a developmentally appropriate coding curriculum. The ""Coding as Another Language"" (CAL) curriculum spans seven weeks and uses the KIBO robot to engage students in learning that integrates programming and literacy concepts. We compared children receiving CAL (N = 667) to a control group (N = 181) who participated in typical classroom activities without coding (No-CAL). TechCheck, a validated ""unplugged"" CT assessment suitable for young children regardless of their coding experience, was used to measure CT. Over the course of the study, children who received CAL-KIBO improved on TechCheck (M change = 0.94, p <.001) whereas the No-CAL group did not change significantly (M change = 0.27, p =.07). Accounting for demographic factors, baseline performance and classroom (teacher) effects, CAL exposure was a significant predictor of post-test CT scores (p <.01). Improvements in CT measured by TechCheck over seven weeks of the CAL-KIBO curriculum were consistent with approximately six months of development without coding instruction. Secondary analysis stratified by grade revealed decisive evidence that CAL exposure improved scores in first grade and anecdotal evidence that second grade scores improved. The CT domains that showed improvement in children who received CAL-KIBO included algorithms, modularity, and representation. Young children who learned to code improved in solving unplugged problems that were not explicitly taught in the coding curriculum. This provides evidence that a developmentally appropriate curriculum for teaching young children to code can accelerate their acquisition of CT skills. • We examined the impact of the CAL-KIBO coding curriculum on children's computational thinking (CT). • An unplugged CT assessment (TechCheck) was used to compare coders to non-coding controls. • CT improved significantly in coders ages 5–9 compared to age-matched controls. • CT improvements after 7 weeks of coding equated to 6 months of normal development. • Algorithms, modularity, and representation probes showed improvements in children who coded. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Learning to code and the acquisition of computational thinking by young children.,"Relkin, E.; de Ruiter, L.E.; Bers, M.U."
03601315,168,10.1016/j.compedu.2021.104196,,Elsevier B.V.,"Interest in coding education has exploded in the past five years, especially in elementary and early secondary education. Teachers who are largely new to coding are expected to guide entire student bodies through the fundamentals of coding and computational thinking. But little is known about which coding and computational thinking (CT) concepts teachers feel most comfortable with and which concepts they struggle with. This study describes 127 elementary coding teachers' changes in their beliefs about teaching coding and CT as they participated in year-long continuous professional development. Novice elementary coding teachers demonstrated most growth in their self-efficacy for teaching sequences, algorithms and loops. They were less secure in their knowledge of conditionals, variables, and functions. For computational thinking, teachers were most confident in their ability to identify patterns, think algorithmically, understand logic, and evaluate outcomes, showing less growth with decomposition and abstraction. • Learn sequence, algorithms, and logic more readily than variables, conditional logic, and functions. • Report lower confidence with decomposition and abstraction than other computational thinking practices. • are less confident in their ability to foster computational perspectives; and. • Develop greater confidence to teach coding through hands-on activities and in-class implementation. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Measuring the effect of continuous professional development on elementary teachers' self-efficacy to teach coding and computational thinking.,"Rich, Peter J.; Mason, Stacie L.; O'Leary, Jared"
07475632,120,10.1016/j.chb.2021.106746,,Elsevier B.V.,"Educational research on predicting learners' computer programming performance has yielded practical implications that guide task designs in computer education. There have been attempts to investigate learners' computer programming patterns using high-frequency and automated data collection. This approach can be considered as process-based analysis as opposed to outcome-based analysis (i.e., the use of test or exam scores). In this process-based approach to investigate learners' computer programming process, we included two critical constructs in our research, self-regulated learning and computational thinking skills. We aimed to identify learners' computer programming patterns in the context that novice students learn a computer programming language, Python, in an online coding environment. We examined the relationships between the learners' coding patterns, self-regulated learning, and computational thinking skills. Initially, we adopted a traditional approach with the aggregate data of learners' computer programming behaviors. We then utilized a computational analytics approach to learner performance, self-regulated learning, and computational thinking skills, with ever-changing computer programming patterns. In our initial approach, the indicators of aggregate computer programming data were not associated with learners' learning performance and computational thinking skills. In the computational analysis approach, many indicators revealed significant differences between the identified patterns regarding computational thinking skills and self-regulated learning. Recommendations about the use of programming log data analysis methods and future scaffolding for computer programming learners are addressed. • The averaged indicators in learners' codes did not reveal significant associations with learner performance. • Coding behaviors categorized into groups by a computational technique showed different levels of self-regulated learning. • Time-spent patterns on coding were related to learners' computational thinking skills. • The patterns of successful coding task completion were related to learners' final grades. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,"Applying computational analysis of novice learners' computer programming patterns to reveal self-regulated learning, computational thinking, and learning performance.","Song, Donggil; Hong, Hyeonmi; Oh, Eun Young"
07475632,120,10.1016/j.chb.2021.106707,,Elsevier B.V.,"There has been growing interest in assessing computational thinking (CT) across diverse learners beyond the traditional forms of tests and assignments. Learning games offer the potential for innovative, stealth assessments of students' implicit learning from gameplay behaviors. This paper reports on the measurement of implicit CT practices demonstrated by upper elementary- and middle-school students as they play the CT learning game Zoombinis. The process of using the gameplay log data to build valid automated detectors of students' implicit CT practices is discussed. Findings from this study provide implications for analyzing gameplay behaviors at scale, leading to the development of models for the assessment of implicit STEM learning. • Described an emergent approach to the development of game-based learning assessments. • Used data-mining methods to create detectors of students' implicit computational thinking based on gameplay behaviors. • Results showed in-game measures were significantly related to external measures of computational thinking. • Applications of in-game measures as formative computational thinking assessments of teachers and designers. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Assessing implicit computational thinking in Zoombinis puzzle gameplay.,"Rowe, Elizabeth; Almeda, Ma Victoria; Asbell-Clarke, Jodi; Scruggs, Richard; Baker, Ryan; Bardar, Erin; Gasca, Santiago"
10024956,38,10.16791/j.cnki.sjg.2021.08.004,8,Experimental Technology & Management Editorial Office,"Mathematical innovation practice base is the important place for cultivating students’ innovative thinking and innovative ability, which is of great significance to the construction of “Double first-class” universities. The base construction should focus on the basic situation of the university, development strategy and its own characteristics, pay attention to refining ideas, clear objectives, enriching the construction content, reflecting the core value, and strengthening the construction of training ability. Through mechanism innovation, the enthusiasm of young teachers and students is stimulated, the social resources such as industry, enterprise, etc., are made full use of to create an innovative practice base characterized by mathematical and computational thinking. (English) [ABSTRACT FROM AUTHOR] 数学创新实践基地是培养学生创新思维和创新能力的重要场所，对于“双一流”大学建设具有十分重要 的意义。基地建设应着眼于学校基本情况、发展战略和自身特色，注重提炼理念、明确目标、丰富建设内容、体 现核心价值，以及强化训练能力建设等。通过机制创新，激发青年教师和学生的积极性，充分利用行业、企业等 社会资源，合力打造以数学化与计算思维为特色的创新实践基地。 (Chinese) [ABSTRACT FROM AUTHOR] Copyright of Experimental Technology & Management is the property of Experimental Technology & Management Editorial Office and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Experimental Technology & Management,新工科背景下数学创新实践基地建设的探索.,黄 平; 杨启贵
21580502,77,,5,International Technology & Engineering Educators Association,"The article reports that Robomatter's virtual robotics programming curriculum, which is endorsed by the International Technology and Engineering Educators Association (ITEEA), has helped students gain computational thinking, according to a study by the Carnegie Mellon Robotics Academy and the University of Pittsburgh's Learning Research and Development Center.",Technology & Engineering Teacher,ITEEA-Endorsed Curriculum Helps Students Show Significant Gains in Computational Thinking.,
15980170,21,10.7472/jksii.2020.21.4.69,4,Korean Society for Internet Information,"This paper presents direction for efficient software education. Due to the impact of the Fourth Industrial Revolution, the whole world is interested in software education. However, simply teaching how to code is not software education. The thinking abilities used in coding for software implementation are even more important. Therefore, computational thinking is getting great attention. Several institutions suggest factors for computational thinking and encourage to teach in a relevant way based on the suggestion. In this study, the verification of the factors they suggested was conducted through a questionnaire. The total of 419 freshman students of the College of Social Sciences who were taking â€œComputational Thinking and Software Codingâ€ class participated in the survey at the beginning and the end of the semester. We first analyzed Wing's proposal that summarized the concept of computational thinking, and reviewed the proposal of ISTE (International Society for Technology in Education) for defining computational thinking factors for coding education, also checked on the suggestion of Google for factors necessary for software coding. As a result of research analysis, this paper suggests a direction for efficient software education. [ABSTRACT FROM AUTHOR] Copyright of Journal of Korean Society for Internet Information is the property of Korean Society for Internet Information and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Korean Society for Internet Information,The Study on Direction of the Software Education.,Oakyoung Han; Jaehyoun Kim
03601315,180,10.1016/j.compedu.2022.104431,,Elsevier B.V.,"Computational thinking (CT) is considered an emerging competence domain linked to 21st-century competences, and educational robotics (ER) is increasingly recognised as a tool to develop CT competences. This is why researchers recommend developing intervention methods adapted to classroom practice and providing explicit guidelines to teachers on integrating ER activities. The present study thus addresses this challenge. Guidance and feedback were considered as critical intervention methods to foster CT competences in ER settings. A between-subjects experiment was conducted with 66 students aged 8 to 9 in the context of a remote collaborative robot programming mission, with four experimental conditions. A two-step strategy was employed to report students' CT competence (their performance and learning process). Firstly, the students' CT learning gains were measured through a pre-post-test design. Secondly, video analysis was used to identify the creative computational problem-solving patterns involved in the experimental condition that had the most favourable impact on the students' CT scores. Results show that delayed feedback is an effective intervention method for CT development in ER activities. Subject to delayed feedback, students are better at formulating the robot behaviour to be programmed, and, thus, such a strategy reinforces the anticipation process underlying the CT. • Educational robotics (ER) tasks lack guidelines to foster computational thinking (CT). • We analysed the impact of delayed visual feedback and guidance on CT in an ER task. • The presence or absence of guidance has no significant impact on student learning. • Delayed feedback (DF) helps foster CT, in particular ""computational perspectives"". • DF's benefits seem to stem from students spending more time reflecting on the task. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,The role of feedback and guidance as intervention methods to foster computational thinking in educational robotics learning activities for primary school.,"Chevalier, Morgane; Giang, Christian; El-Hamamsy, Laila; Bonnet, Evgeniia; Papaspyros, Vaios; Pellet, Jean-Philippe; Audrin, Catherine; Romero, Margarida; Baumberger, Bernard; Mondada, Francesco"
03601315,179,10.1016/j.compedu.2021.104425,,Elsevier B.V.,"There is increasing effort to integrate Computational Thinking (CT) curricula across all education levels. Therefore, research on CT assessment has lately progressed towards developing and validating reliable CT assessment tools, which are crucial for evaluating students' potential learning progress and thus the effectiveness of suggested curricular programs. Several CT assessment tools were developed for elementary, high-school, and university students over the last years. Moreover, associations between CT scores and other cognitive abilities were unraveled. However, studies on the topic in primary school level are scarce. Like the general concept of intelligence, CT remains broadly defined as the ability to combine algorithmic operations to form complex solutions in order to solve problems effectively, utilizing concepts of computer science with or without the use of computers. In this study, we aimed at specifying a cognitive definition of CT, focusing on the under-investigated population of primary school children. Since validated assessment tools for this age group were not available, we adapted a validated CT test, which was initially designed for middle school students. In our study participated 192 third and fourth graders. The analyses revealed promising results on the reliability of the adapted CT assessment for primary school students. Moreover, findings indicated CT's positive associations with i. complex numerical abilities, ii. verbal reasoning abilities, and iii. non-verbal visuospatial abilities. Our results indicate similarities but also differences in associations of CT with other cognitive abilities in primary school children compared to other age groups. In summary: i. numerical abilities seem to associate with CT at the primary school level, whereas this seems not the case later on in education, ii. verbal abilities seem to associate with CT both along primary and secondary education levels, and iii. non-verbal reasoning abilities seem to associate with CT from primary education level to the university level and beyond. These differences imply that several basic cognitive abilities support CT abilities and CT development differentially across ages. • The cognitive development of computational thinking is differential across age. • Computational thinking builds on a convolute of several other cognitive abilities. • Computational thinking is associated with verbal reasoning abilities. • Computational thinking is associated with non-verbal visuospatial abilities. • Computational thinking is correlated to numerical abilities in primary school. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,A cognitive definition of computational thinking in primary education.,"Tsarava, Katerina; Moeller, Korbinian; Román-González, Marcos; Golle, Jessika; Leifheit, Luzia; Butz, Martin V.; Ninaus, Manuel"
15320626,26,10.1002/cpe.3288,13,Wiley-Blackwell,"SUMMARY The conceptual framework and initial steps taken by a project that aims to incorporate computational scientific thinking into the university-level classes taken by preservice and in-service teachers (education majors) are described. The project is called INSTANCES, an almost-acronym for incorporating computational scientific thinking advances into education and science courses, and is supported by National Science Foundation as part of their Transforming Undergraduate Education in Science, Technology, Engineering, and Mathematics program. The overall goal of the project is to provide an introduction to scientific thinking with computation. Mathematics, programming, algorithmic thinking, and computing accuracy are explicit elements of the science education curriculum, and they are included as integral elements in modules that walk teachers through various examples of computational scientific thinking. Brief descriptions of the modules and their use are presented. Copyright © 2014 John Wiley & Sons, Ltd. [ABSTRACT FROM AUTHOR] Copyright of Concurrency & Computation: Practice & Experience is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Concurrency & Computation: Practice & Experience,INSTANCES: incorporating computational scientific thinking advances into education and science courses.,"Landau, Rubin; Mulder, Greg; Holmes, Raquell; Borinskaya, Sofya; Kang, NamHwa; Bordeianu, Cristian"
03601315,72,10.1016/j.compedu.2013.10.020,,Elsevier B.V.,"By engaging in construction-based robotics activities, children as young as four can play to learn a range of concepts. The TangibleK Robotics Program paired developmentally appropriate computer programming and robotics tools with a constructionist curriculum designed to engage kindergarten children in learning computational thinking, robotics, programming, and problem-solving. This paper documents three kindergarten classrooms' exposure to computer programming concepts and explores learning outcomes. Results point to strengths of the curriculum and areas where further redesign of the curriculum and technologies would be appropriate. Overall, the study demonstrates that kindergartners were both interested in and able to learn many aspects of robotics, programming, and computational thinking with the TangibleK curriculum design. [Copyright &y& Elsevier] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Computational thinking and tinkering: Exploration of an early childhood robotics curriculum.,"Bers, Marina Umaschi; Flannery, Louise; Kazakoff, Elizabeth R.; Sullivan, Amanda"
07356331,49,10.2190/EC.49.4.b,4,Sage Publications Inc.,"The paper-and-pencil programming strategy (PPS) is a way of representing an idea logically by any representation that can be created using paper and pencil. It was developed for non-computer majors to improve their understanding and use of computational thinking and increase interest in learning computer science. A total of 110 non-majors in their sophomore year were assigned to either a Logo or a PPS course with attendance being 2 hours per week for 15 weeks. To measure the effectiveness of PPS, the Group Assessment of Logical Thinking and a self-assessment survey pre- and post-test were used. Findings indicated that PPS not only improved students' overall logical thinking as much as did Logo programming learning, but also increased scores on one more subscale of logical thinking than did the Logo course. In addition, PPS significantly helped students understand the concept of computational thinking and increased their interest in learning computer science. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Paper-and-Pencil Programming Strategy toward Computational Thinking for Non-Majors: Design Your Solution.,"Kim, Byeongsu; Kim, Taehun; Kim, Jonghoon"
03601315,162,10.1016/j.compedu.2020.104083,,Elsevier B.V.,"Computational Thinking (CT) through programming attracts increased attention as it is considered an ideal medium for the development of 21st century skills. This intense attention leads to K-12 initiatives around the world and a rapid increase in relevant research studies. However, studies show challenges in CT research and educational practice. In addition, the domain has not been mapped to facilitate comprehensive understanding of the domain challenges and development of CT curricula. The purpose of this study is to develop a conceptual model based on a systematic literature review that maps the CT through programming in K-12 education domain. The proposed Computational Thinking through Programming in K-12 education (CTPK-12) conceptual model emerges from the synthesis of 101 studies and the identification of CT Areas. The proposed model consists of six CT Areas (namely Knowledge Base, Learning Strategies, Assessment, Tools, Factors and Capacity Building) and their relationships. The model could aid domain understanding and serve as a basis for future research studies. In addition, it could support the integration of CT into K-12 educational practices, providing evidence to educational stakeholders and researchers as well as bringing closer research, practice and policy. Image 1 • Studies are reviewed to develop a conceptual model for Computational Thinking (CT) through programming in K-12 education. • The proposed CTPK-12 model illustrates CT research Areas and their Relationships. • The model's CT Areas include Knowledge Base, Learning Strategies, Assessment, Tools, Factors and Capacity Building. • The model reveals unexploited CT Areas, namely Factors and Capacity Building. • The model enables formulating unexplored research questions, such as which tools support which learning strategies. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Mapping computational thinking through programming in K-12 education: A conceptual model based on a systematic literature Review.,"Tikva, Christina; Tambouris, Efthimios"
07475632,115,10.1016/j.chb.2020.106587,,Elsevier B.V.,"This paper reports on a research study of 45 classes in US schools (grades 3–8) using Zoombinis, a popular Computational Thinking (CT) learning game for ages 8 to adult. The study examined the relationship among student gameplay, related classroom activity, and the development of students' CT practices in Zoombinis classes. A combination of research methods, including educational data-mining on game data logs, cluster analysis on teacher logs of classroom activity, and multilevel modeling, was used to determine the impact of the duration and nature of student gameplay, as well as the extent and nature of classroom activity, on student CT practices. Automated detectors of gameplay CT practices built for this research were significant predictors of external post-assessment scores, and thus show promise as implicit assessments of CT practices within gameplay. Students with high duration of gameplay and high gameplay CT practices scored highest on external post-assessment of CT practices, when accounting for pre-assessment scores. This research suggests that Zoombinis is an effective CT learning tool and CT assessment tool for elementary- and middle-school students. • Automated data mining detectors detected students' Computational Thinking in Zoombinis. • Longer duration of gameplay related to more Computational Thinking exhibited outside the game. • More CT practices exhibited in gameplay related to more Computational Thinking exhibited outside the game. • Students' gender, grade level, or other CT activity were not related to more Computational Thinking outside the game. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,"The development of students' computational thinking practices in elementary- and middle-school classes using the learning game, Zoombinis.","Asbell-Clarke, J.; Rowe, E.; Almeda, V.; Edwards, T.; Bardar, E.; Gasca, S.; Baker, R.S.; Scruggs, R."
03601315,161,10.1016/j.compedu.2020.104060,,Elsevier B.V.,"Computational thinking (CT) is a key 21st-century skill. This paper contributes to CT research by investigating CT predictors among upper secondary students in a longitudinal and natural classroom setting. The hypothesized predictors are grouped into three areas: student characteristics, home environment, and learning opportunities. CT is measured with the Computational Thinking Test (CTt), an established performance test. N = 202 high-school students, at three time points over one school year, act as the sample and latent growth curve modeling as the analysis method. CT self-concept, followed by reasoning skills and gender, show the strongest association with the level of CT. Computer literacy, followed by duration of computer use and formal learning opportunities during the school year, have the strongest association with CT growth. Variables from all three areas seem to be important for predicting either CT level or growth. An explained variance of 70.4% for CT level and 61.2% for CT growth might indicate a good trade-off between the comprehensiveness and parsimony of the conceptual framework. The findings contribute to a better understanding of CT as a construct and have implications for CT instruction, e.g., the role of computer science and motivation in CT learning. • A conceptual framework of predictors of the initial level and development of computational thinking. • Areas of predictors: student characteristics, home environment, learning opportunities. • Investigation over one school year in a naturalistic classroom setting using latent growth curve modeling. • Gender differences can be partially explained by female students' lower self-concept and self-determined motivation. • Deliberate effort may be necessary for effectively integrating computational thinking in computer science instruction. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,On the predictors of computational thinking and its growth at the high-school level.,"Guggemos, Josef"
03601315,160,10.1016/j.compedu.2020.104023,,Elsevier B.V.,"Computational thinking (CT) skills are becoming essential in all aspects of work and life, and CT has become part of the K-12 curriculum around the world. Yet, more research is needed to better understand how to help elementary school students acquire CT skills effectively. The purpose of this study was to examine the effectiveness of partial pair programming (PPP) on elementary school students' CT skills and self-efficacy (SE). The study included four 4th grade classes, with a total of 171 students, who were taking the course entitled ""Computational Thinking with Scratch"" with the same teacher for one semester. Two classes (84 students) were in the Experimental Group (EG, 44 boys and 40 girls) while two other classes (87 students) were in the Control Group (CG, 45 boys and 42 girls). The students in the EG were paired up for the programming assignments while the students in the CG did the assignments on their own. The results showed that the students in the EG improved their CT skills and SE more significantly than those in the CG group. There was a low correlation between CT and SE in the post-test of both groups. The interviews with the teacher and the students afterwards provided insights in understanding the results. The findings suggest that in K-12 programming teachers could use PPP as an effective approach to improve students' CT skills, programming SE, and beyond. • Partial Pair Programming (PPP) significantly improved CT skills of 4th grade students. • PPP significantly improved self-efficacy (SE) of the 4th grade students. • There is low correlation between CT and SE. • PPP significantly improved boys' CT skills in all pairs, girls in boy-girl pairs. • PPP significantly improved boys' programming SE, not girls' SE. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,The effectiveness of partial pair programming on elementary school students' Computational Thinking skills and self-efficacy.,"Wei, Xuefeng; Lin, Lin; Meng, Nanxi; Tan, Wei; Kong, Siu-Cheung; Kinshuk"
0144929X,41,10.1080/0144929X.2021.1949042,13,Taylor & Francis Ltd,"The aim of this study is to provide insights concerning the effects of the ubiquitous digital environment on the way people think and the subsequent need to equip young individuals with the necessary skills. Several studies focus on defining the so-called digital skills, also providing indications that higher cognitive skills are required. However, they do not examine how young individuals could perform better to adapt to the continuously evolving digital environment. To address this gap, the study introduces and analyses the construct of digital intelligence, representing the new way of thinking and behaviour in the digital environment. For the purposes of the study, a set of tests was given to students at Greek high schools, targeting 15–16 years old students and employing original tests to assess digital intelligence. According to the findings, digital intelligence is composed of: (1) logical reasoning, algorithms, and evaluation, (2) abstraction, decomposition, and patterns and generalisation, (3) digital emotional intelligence and communication, (4) digital safety and security, and (5) digital identity, use, literacy, and rights. Assessing digital intelligence, as proposed in this study, could be used to assist vocational guidance, employee selection and evaluation, and development of revised school curricula. [ABSTRACT FROM AUTHOR] Copyright of Behaviour & Information Technology is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Behaviour & Information Technology,Exploring the construct of the new way of thinking in the digital environment.,"Stiakakis, Emmanouil; Barboutidis, George"
08993408,31,10.1080/08993408.2021.1918380,2,Taylor & Francis Ltd,"Shifting away from written assessment, Metcalf and colleagues investigate assessments that ask learners to enact CT practices, employing their CT knowledge and skills to generate computational artifacts. Acknowledging the plurality of context where CT learning occurs, this special issue also includes work by Weintrop and colleagues exploring how CT is assessed in library contexts. The last decade has seen rapid growth in the presence of computational thinking (CT) in educational contexts. [Extracted from the article] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Assessing computational thinking: an overview of the field.,"Weintrop, David; Wise Rutstein, Daisy; Bienkowski, Marie; McGee, Steven"
22512195,,10.5176/2251-2195_CSEIT38,,Global Science & Technology Forum,"The beginning of the twenty first century ushered a new reality where the scale of computational problems requires solutions involving concurrency at multiple levels of hardware/software abstraction. This is the reality that the next generations of computer science graduates will be facing. However, it is well known that most of the traditional computer science programs in most of the universities are not adequately prepared for producing graduates with the required competencies that respond to these new demands. This paper presents the strategies, methods, experiences and lessons learned at the Department of Computer Science of the University of Puerto Rico at Río Piedras to respond to these realities by permeating our undergraduate curriculum with parallel computational thinking. [ABSTRACT FROM AUTHOR] Copyright of Annual International Conference on Computer Science Education: Innovation & Technology is the property of Global Science & Technology Forum and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Annual International Conference on Computer Science Education: Innovation & Technology,Asserting Parallel Computational Thinking into an Undergraduate Computer Science Curriculum.,"Orozco, Edusmildo; Arce-Nazario, Rafael; Musial, Peter; Lucena-Román, Cynthia; Santiago, Zoraida"
25044990,6,10.3390/make6010028,1,MDPI,"Artificial neural networks (ANNs) have proven to be among the most important artificial intelligence (AI) techniques in educational applications, providing adaptive educational services. However, their educational potential is limited in practice due to challenges such as the following: (i) the difficulties in incorporating symbolic educational knowledge (e.g., causal relationships and practitioners' knowledge) in their development, (ii) a propensity to learn and reflect biases, and (iii) a lack of interpretability. As education is classified as a 'high-risk' domain under recent regulatory frameworks like the EU AI Act—highlighting its influence on individual futures and discrimination risks—integrating educational insights into ANNs is essential. This ensures that AI applications adhere to essential educational restrictions and provide interpretable predictions. This research introduces NSAI, a neural-symbolic AI approach that integrates neural networks with knowledge representation and symbolic reasoning. It injects and extracts educational knowledge into and from deep neural networks to model learners' computational thinking, aiming to enhance personalized learning and develop computational thinking skills. Our findings revealed that the NSAI approach demonstrates better generalizability compared to deep neural networks trained on both original training data and data enriched by SMOTE and autoencoder methods. More importantly, we found that, unlike traditional deep neural networks, which mainly relied on spurious correlations in their predictions, the NSAI approach prioritizes the development of robust representations that accurately capture causal relationships between inputs and outputs. This focus significantly reduces the reinforcement of biases and prevents misleading correlations in the models. Furthermore, our research showed that the NSAI approach enables the extraction of rules from the trained network, facilitating interpretation and reasoning during the path to predictions, as well as refining the initial educational knowledge. These findings imply that neural-symbolic AI not only overcomes the limitations of ANNs in education but also holds broader potential for transforming educational practices and outcomes through trustworthy and interpretable applications. [ABSTRACT FROM AUTHOR] Copyright of Machine Learning & Knowledge Extraction is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Machine Learning & Knowledge Extraction,Augmenting Deep Neural Networks with Symbolic Educational Knowledge: Towards Trustworthy and Interpretable AI for Education.,"Hooshyar, Danial; Azevedo, Roger; Yang, Yeongwook"
20885334,14,,1,INSIGHT - Indonesian Society for Knowledge & Human Development,"The rapid advancement of Artificial Intelligence (AI) technology has brought about significant positive changes across society. However, it has also introduced challenges like privacy breaches, data bias, and spreading fake news. In response, several countries, including South Korea, have provided ethical guidelines and policies for AI. Yet, these measures often fall short of keeping pace with the speed and diversity of AI development. To address these issues, this study developed a comprehensive approach by integrating ethical considerations into AI education, covering the entire AI technology development and application process. It involved analyzing previous research on AI and AI ethics education and creating a draft of an integrated AI education program focused on problem-solving based on computational thinking and ethical practicality. The draft was refined and supplemented through two rounds of expert Delphi surveys, ultimately leading to an ""Integrated AI Education Program."" This proposed program emphasizes that the knowledge content of AI technology and ethical considerations should not be treated separately but addressed together. It aims to enhance moral and social capacities alongside the experience of thinking like a computer scientist when solving real-life problems. Through this, the program supports the ultimate goal of AI education: to foster computational thinking while providing an educational experience that considers both technology and ethics. This study is expected to advance the discussion on integrating AI ethics into AI education curricula and contribute to developing socially responsible AI developers and users. [ABSTRACT FROM AUTHOR] Copyright of International Journal on Advanced Science, Engineering & Information Technology is the property of INSIGHT - Indonesian Society for Knowledge & Human Development and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","International Journal on Advanced Science, Engineering & Information Technology",Development of a Content Framework of Artificial Intelligence Integrated Education Considering Ethical Factors.,Jeonghun Lee; Misun Hong; Jungwon Cho
21660727,,,,Conferencia Iberica de Sistemas Tecnologia de Informacao,"This paper presents the initial results of a research that aims to evaluate the contribution of the Scratch visual programming language in the development of computational thinking in comparison to the use of pseudocode. The comparison scenario was the teaching of programming logic for higher education students of the Physics course. The research was outlined with the methodology of action research, allowing the evaluation of the use of language at the end of the approach of each content delivered during the research. The presented results refer to the approach of two contents, of the four established for the conclusion of the research. The steps of approaching each content were initiated with the application of the diagnostic evaluation, and finalized with the evaluation of performance. The results indicate a progression in knowledge about programming logic. In this way, it was possible to verify that the use of the Scratch language contributed to the learning of programming logic. (English) [ABSTRACT FROM AUTHOR] Esse artigo apresenta os resultados iniciais de uma pesquisa que visa avaliar a contribuição da linguagem de programação visual Scratch no desenvolvimento do pensamento computacional, em comparação com o uso de pseudocódigo. O cenário de comparação foi o ensino de lógica de programação para alunos do ensino superior do curso de Física. A pesquisa foi delineada com a metodologia de pesquisa-ação, possibilitando a avaliação da utilização da linguagem ao final da abordagem de cada conteúdo ministrado durante a pesquisa. Os resultados apresentados referem-se à abordagem de dois conteúdos, dos quatro estabelecidos para a conclusão da pesquisa. As etapas de abordagem de cada conteúdo foram iniciadas com a aplicação da avaliação diagnóstica, e finalizadas com a avaliação de desempenho. Os resultados indicam uma progressão no conhecimento sobre lógica de programação. Desta forma, foi possível verificar que a utilização da linguagem Scratch contribuiu para o aprendizado de lógica de programação. (Portuguese) [ABSTRACT FROM AUTHOR] Copyright of CISTI (Iberian Conference on Information Systems & Technologies / Conferência Ibérica de Sistemas e Tecnologias de Informação) Proceedings is the property of Conferencia Iberica de Sistemas Tecnologia de Informacao and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",CISTI (Iberian Conference on Information Systems & Technologies / Conferência Ibérica de Sistemas e Tecnologias de Informação) Proceedings,Comparação entre o Uso de Pseudocódigo e a Programação Visual no Ensino de Programação: Uma avaliação a partir da ferramenta Scratch.,"Rezende, Críscilla M. C.; Bispo Jr., Esdras L."
03601315,173,10.1016/j.compedu.2021.104284,,Elsevier B.V.,"Content area K-12 teachers are increasingly asked to integrate computing and computational thinking into their classrooms, yet they often have little experience with computing. The purpose of this study was to understand how science teachers, new to computing and integrating computational thinking into their classrooms, supported students as computational problem solvers. In the project from which this research was drawn, 8th grade science teachers in three US school districts integrated computer game design into their study of climate systems and climate change. We conducted participant observation, collected teacher implementation logs and interviewed 15 teachers engaged in the three-year design research project, Building Systems from Scratch. Analysis through grounded theory yielded several results related to teachers' orientations, strategies, and use of resources to create systems of distributed expertise. We identified five major themes: a) releasing responsibility to students, b) co-learning with students, c) encouraging students' independent problem solving, d) building interdependence among students, and e) providing multiple other resources. Findings are discussed in relation to the literature on integrating computational thinking into content area classrooms. • Science teachers' orientations to incorporating computational thinking practices. • Science teachers distribute expertise to support computational problem-solving. • Opportunities and tensions for independent student computational problem-solving. • Strategies for teachers new to integrating computational practices. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Science teachers can teach computational thinking through distributed expertise.,"Tucker-Raymond, Eli; Cassidy, Michael; Puttick, Gillian"
00010782,59,10.1145/2955114,8,Association for Computing Machinery,"The author offers an argument that computational thinking should be understood as computational participation in K-12 education. Topics include the nature of student interest in computer programming, the creation of applications in a communal context by students, and the need for broader participation in computer science education by K-12 students.",Communications of the ACM,From Computational Thinking to Computational Participation in K-12 Education.,"Kafai, Yasmin B."
00010782,59,10.1145/2933410,7,Association for Computing Machinery,"Blog posts from the website http://cacm.acm.org are presented, including a post on the teaching of computational thinking in K-12 U.S. schools and a post on the conference SC16 and high-performance computing (HPC).",Communications of the ACM,"Progress in Computational Thinking, and Expanding the HPC Community.","Wing, Jeannette; Stanzione, Dan"
03601315,150,10.1016/j.compedu.2020.103832,,Elsevier B.V.,"The inclusion of computational thinking (CT) in the classroom is something that the present and future society is demanding. However, this domain remains largely unexplored, especially in the first years of Primary Education. The purpose of this study is to evaluate whether the inclusion of the so-called unplugged activities favours the development of CT in the students of the early years of Primary Education. To this end, a quasi-experimental study has been carried out to explore the eventual benefit of a mixed approach that combines both unplugged and plugged-in activities. In particular, 84 second-grade students took part in the experiment. Three questions were evaluated: the development of their CT skills, their motivation towards the proposed instruction, and the influence of students' gender in the two previous areas. The intervention was designed on a selection of activities extracted from Code. org courses, and was divided into two phases, one in which one group worked with unplugged activities and the other with plugged-in activities, and a second where both groups worked with plugged-in activities. Analysing the three proposed questions through tests performed before, in between and after the instruction, it is concluded that the inclusion of unplugged activities in the instruction seems beneficial taking into account CT, motivation and gender. • Unplugged activities improve computational thinking skills in early Primary Education. • A computational thinking instruction with unplugged activities enhances motivation. • Gender does not influence computational thinking skills acquisition. • Gender influences motivation towards a computational thinking instruction. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Computational thinking through unplugged activities in early years of Primary Education.,"del Olmo-Muñoz, Javier; Cózar-Gutiérrez, Ramón; González-Calero, José Antonio"
07475632,106,10.1016/j.chb.2019.106230,,Elsevier B.V.,"This study aimed at investigating whether Computational Thinking (CT) Perspectives can foster Computational Identity (CI) among primary school students in programming learning from the perspective of situated learning theory. This study conceptualized CT perspectives as a multidimensional construct that comprises (1) ability to connect, (2) ability to question, and (3) ability to express, and CI with four subcomponents including (1) programming affiliation, (2) programming engagement, (3) programming actualization, and (4) programming goal setting. Students who received at least 6-month programming training for computational thinking development were invited to participate in this study. Results of Confirmatory Factor Analysis (CFA) suggested that the CT perspectives instrument (n = 100) and CI instrument (n = 241) reached good fit and therefore were validated in the pilot study. In the main study, survey answers (N = 215) including CT perspectives and CI were collected. Results of Structural Equation Modeling (SEM) showed positive relationships between CT perspectives and CI formation among primary school students. Mediation results further revealed that ability to question can foster CI formation through ability to express, while ability to connect can directly foster CI formation. Implications were discussed at the end of the study. • Learning visual programming contributes to positive learning outcomes. • CT perspectives facilitated by visual programming contribute to CI formation. • Young learners' willingness to connect with peers is positively related to CI formation. • Young learners' willingness to express with programming artifacts is positively related to CI formation. • Young learners' willingness to question is positively related to CI formation only if they are willing to express. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Formation of computational identity through computational thinking perspectives development in programming learning: A mediation analysis among primary school students.,"Kong, Siu Cheung; Wang, Yi Qing"
07475632,105,10.1016/j.chb.2019.03.018,,Elsevier B.V.,"The study examined the effects of learning with the Bee-Bot on young boys' and girls' computational thinking within the context of two scaffolding techniques. The study reports statistically significant learning gains between the initial and final assessment of children's computational thinking skills. Also, according to the findings, while both boys and girls benefited from the scaffolding techniques, a statistically significant interaction effect was detected between gender and scaffolding strategy showing that boys benefited more from the individualistic, kinesthetic, spatially-oriented, and manipulative-based activity with the cards, while girls benefited more from the collaborative writing activity. In regards to the children's problem-solving strategies during debugging, the results showed that the majority of them used decomposition as a strategy to deal with the complexity of the task. These results are important, because they show that children at this very young age are able to cope with the complexity of a learning task by decomposing it into a number of subtasks that are easier for them to tackle. The research contributes to the body of knowledge about the teaching of computational thinking. In addition, the study has practical significance for curriculum developers, instructional leaders, and classroom teachers, as they can use the results of this study to design curricula and classroom activities with a focus on the broader set of computational thinking skills, and not only coding. • The study examined the effects of learning with the Bee-Bot on computational thinking. • A gender-friendly learning environment was designed. • An interaction effect was found between gender and scaffolding strategy. • Young children used decomposition as a problem-solving strategy during debugging. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Developing young children's computational thinking with educational robotics: An interaction effect between gender and scaffolding strategy.,"Angeli, Charoula; Valanides, Nicos"
07475632,105,10.1016/j.chb.2018.12.027,,Elsevier B.V.,"Computational thinking (CT) is a key skill in the 21st century. However, it is not clear which is the most effective way to acquire and improve CT. Big research efforts are made to determine which pedagogical means should be used. One research trend is based on the idea that teaching programming since Primary Education suffices to improve CT. In our previous work, we proposed and validated a methodology based on metaphors and used of Scratch (MECOPROG) to teach basic programming concepts to children. It is our hypothesis H that by applying MECOPROG, students will develop their CT. To check H, we carried out an experiment with 132 Primary Education Students (9–12 years in age). At the beginning of the experiment, all students were asked to fill in a programming concepts test and two tests to measure their CT. During the sessions, all students were taught according to MECOPROG. Finally, they took the three tests again. A significant increase in the results on all the tests has been measured, supporting the use of metaphors and Scratch to teach computer programming concepts to Primary Education students to develop their CT. • Computational Thinking can be improved using metaphors and Scratch. • Primary Education students' Computational Thinking can be improved. • Primary Education students can learn basic programming concepts. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Can computational thinking be improved by using a methodology based on metaphors and scratch to teach computer programming to children?,"Pérez-Marín, Diana; Hijón-Neira, Raquel; Bacelo, Adrián; Pizarro, Celeste"
03601315,141,10.1016/j.compedu.2019.103613,,Elsevier B.V.,"Although several investigations of spatial reasoning and mental rotation skills have been conducted in research areas linked to STEM education, to the best of our knowledge, few of these studies have examined the relationship between spatial reasoning and computational thinking. Given this gap in the literature, the present study investigates the role and action of spatial reasoning, and specifically the effects of mental rotation on computational thinking within an embodied and enacted perspective. To achieve this, we carried out a study involving 92 students in five primary-school classes (1st grade - 5th grade). The findings reveal a positive correlation between computational thinking skill and mental rotation ability. • Computational thinking is a high-level cognitive process closely connected to sensorimotor factors. • Complex processes underlying computational thinking emerge from concrete, situated, and action-based practices. • The findings reveal a positive correlation between computational thinking skill and mental rotation ability. • Gender does not influence the relationship between coding ability and mental rotation skills. • This relationship is quite stable among the different school grades of primary school. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,The effects of mental rotation on computational thinking.,"Città, Giuseppe; Gentile, Manuel; Allegra, Mario; Arrigo, Marco; Conti, Daniela; Ottaviano, Simona; Reale, Francesco; Sciortino, Marinella"
03601315,141,10.1016/j.compedu.2019.103607,,Elsevier B.V.,"As computational thinking (CT) is being embraced by educational systems worldwide, researchers and teachers have posed important questions such as ""what to teach"" and ""what can be learned."" These questions are universally crucial to the learning of all subjects. Nevertheless, there is no up-to-date, systematic overview of CT education for K-9 students that attempt to provide answers to these crucial questions. Thus, this systematic review presents a synthesis of 55 empirical studies, providing evidence of the development of computational thinking through programming in Scratch, one of the most popular visual block programming languages in schools. The purpose of this review is to systematically examine the CT skills that can be obtained through Scratch in K-9 based on empirical evidence. This systematic review has adopted Brennan and Resnick's (2012) framework as the basis for defining and identifying the expected CT skills in K-9. The major findings entail what computational thinking skills students in K-9 can learn through Scratch in relation to the framework mentioned above, taking the progression of learning into account. Additional CT skills that are not captured by the framework were identified including input/output, reading, interpreting and communicating code, using multimodal media, predictive thinking, and human-computer interaction. These additional CT skills are not currently presented in Brennan and Resnick's (2012) framework and can be considered as possible supplements to their framework. Furthermore, the paper discusses the difficulties regarding assessment and the progression of the identified skills, as well as problems with study designs. Finally, the paper sets out suggestions for future studies based on the current research gaps. • The paper identified computational thinking skills that can be obtained through Scratch in compulsory education. • The paper presented a quantitative analysis of the methodology of the empirical studies. • The paper described the learning challenges and difficulties associated with the identified computational thinking skills. • The paper provided an overview of the progression of the computational thinking skills according to the learners' ages. • The paper revealed some problems in scientific reporting. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,A systematic review of learning computational thinking through Scratch in K-9.,"Zhang, LeChen; Nouri, Jalal"
02721716,34,10.1109/MCG.2014.46,3,IEEE,"Visual programming in 3D sounds much more appealing than programming in 2D, but what are its benefits? Here, University of Colorado Boulder educators discuss the differences between 2D and 3D regarding three concepts connecting computer graphics to computer science education: ownership, spatial thinking, and syntonicity. [ABSTRACT FROM PUBLISHER] Copyright of IEEE Computer Graphics & Applications is the property of IEEE and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",IEEE Computer Graphics & Applications,Beyond Minecraft: Facilitating Computational Thinking through Modeling and Programming in 3D.,"Repenning, Alexander; Webb, David C.; Brand, Catharine; Gluck, Fred; Grover, Ryan; Miller, Susan; Nickerson, Hilarie; Song, Muyang"
07380569,41,10.1080/07380569.2023.2178868,1,Taylor & Francis Ltd,"This study aims to identify effective teaching strategies and challenges in computer science (CS) teaching and K-12 CS teachers' needs for professional development (PD). The data were collected through semi-structured interviews with five K-12 CS teachers and eight CS instructors in higher education and analyzed using thematic analysis. The findings indicated that (1) connecting the classroom to the real world, project-based assessment, and teamwork are effective teaching strategies; (2) teaching challenges include CS teachers' knowledge gaps, students' technology access and use, and elective courses; and (3) teachers' PD opportunities and needs include content and pedagogical knowledge and an ongoing learning community. The findings offer implications for K-12 CS education and teachers' PD. [ABSTRACT FROM AUTHOR] Copyright of Computers in the Schools is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in the Schools,"K-12 Computer Science Teaching Strategies, Challenges, and Teachers' Professional Development Opportunities and Needs.","Zhu, Meina; Wang, Cheng"
15391523,55,10.1080/15391523.2021.1967817,3,Taylor & Francis Ltd,"We report on a case study of eight grade 5 to 6 students (ages 12–14) involved in a three-day ""digital-making summer camp"" focused on mathematical problem-solving through block-based programming combined with programmable electronics. Data analysis focused on the computational thinking (CT), mathematics, and problem-solving challenges that surfaced during the activities and on the students' developing perspectives about themselves as computational thinkers and problem solvers. Our results suggest the students developed various CT and problem-solving competences and dispositions during the digital-making activities. However, they experienced difficulties with ill-structured problems. This study supports the creative uses of digital making as complementary to K-12 mathematics learning. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Students' in-moment challenges and developing maker perspectives during problem-based digital making.,"Ng, Oi-Lam; Liu, Minnie; Cui, Zhihao"
03601315,151,10.1016/j.compedu.2020.103872,,Elsevier B.V.,"The implementation of effective professional development courses for K-12 teachers on computational thinking (CT) in relation to programming remains a challenge. There is a lack of high-quality empirical research on teacher development in CT in relation to programming. This study addressed that situation by providing empirical evidence of the design and evaluation of such a teacher development program in primary schools. Seventy-six in-service teachers participated in a program comprising two 39-h courses. One course focused on the fundamental subject knowledge of programming for CT development together with pedagogy. The other focused on the development of advanced knowledge while providing opportunities to practice teaching in the classroom and to reflect on the practice. The results indicate that the participants developed a better understanding of CT concepts and practices and improved in three of the four content knowledge related dimensions of technological pedagogical content knowledge (TPACK) across the two courses. The three dimensions were content knowledge of programming for CT development, technological content knowledge of the use of block-based programming environments for programming for CT development, and use of the environment to teach programming for CT development with the appropriate pedagogy in context. Analysis of the participants' self-reported reflections suggested that the two courses and the teaching experience acquired during the prolonged second course were the two main sources of improvement. This study demonstrates the importance of providing an effective teacher development program with a focus on CT concepts and practices. The program offers teachers a sustained period in which to practice in the classroom and reflect on their teaching while developing their capacity to implement CT in relation to programming. • A teacher development program for CT in relation to programming was designed and evaluated. • Teachers' CT concepts and practices improved consistently in the program. • In-service teachers attended the program and improved in all content-knowledge related TPACK dimensions. • A sustained period of active participation in programming activities was essential. • Opportunities to reflect on pedagogy in practicing CT in programming activities was important. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,"Teacher development in computational thinking: Design and learning outcomes of programming concepts, practices and pedagogy.","Kong, Siu-Cheung; Lai, Ming; Sun, Daner"
0020739X,34,,2,Taylor & Francis Ltd,"Computational geometry is a new (about 30 years) and rapidly growing branch of knowledge in computer science that deals with the analysis and design of algorithms for solving geometric problems. These problems typically arise in computer graphics, image processing, computer vision, robotics, manufacturing, knot theory, polymer physics and molecular biology. Since its inception many of the algorithms proposed for solving geometric problems, published in the literature, have been found to be incorrect. These incorrect algorithms rather than being 'purely mathematical' often contain a strong kinesthetic component. This paper explores the relationship between computational geometric thinking and kinesthetic thinking, the effect of the latter on the correctness and efficiency of the resulting algorithms, and their implications for education. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Mathematical Education in Science & Technology is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Mathematical Education in Science & Technology,On the role of kinesthetic thinking in computational geometry.,"SellarÈs, J. Antoni; Toussaint, Godfried"
20763417,14,10.3390/app14156409,15,MDPI,"Topological interlocking assembly (TIA) and computational architecture treat form as an emergent property of a material system, where the final shape results from the interplay of geometries and geometric interdependencies influenced by contextual constraints (material, structure, and fabrication). This paper posits that TIA is an ideal pedagogical tool for introducing students to computational architecture, and its theoretical foundations and design principles. Specifically, defining TIA as a material system provides a robust educational approach for engaging students with computation; fostering design processes through bottom-up, hands-on investigations; expressing design intents as procedural logic; understanding generative geometric rules; and exploring the flexibility of parametric variations. The methodology is detailed and illustrated through a design workshop and study unit from the Bachelor's and Master's programs at the Faculty for the Built Environment, University of Malta. Four case studies of TIA—of tetrahedra, cones, octahedra, and osteomorphic blocks—demonstrate how these exercises introduce students to computational thinking, parametric design, and fabrication techniques. This paper discusses the advantages and limitations of this pedagogical methodology, concluding that integrating computational architecture in education shifts students' design processes to investigation and innovation-based approaches, enabling them to address contemporary design challenges through context-driven solutions. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),Topological Interlocking Assembly: Introduction to Computational Architecture.,"Miodragovic Vella, Irina; Markovic, Sladjana"
07475632,114,10.1016/j.chb.2020.106575,,Elsevier B.V.,"Several studies have reported that adaptivity and personalization in educational computer games facilitate reaching their full educational potential. However, there is little effort to develop adaptive educational computer games for promoting students' computational thinking (CT). In this study, an adaptive computer game is introduced, called AutoThinking, that not only promotes both CT skills and conceptual knowledge, but also provides adaptivity in both game-play and learning processes. To evaluate the possible effects of the game, an experimental study was carried out with 79 students in an elementary school in Estonia. AutoThinking and a conventional technology-enhanced learning approach were used for teaching CT to the experimental and control group, respectively. Our results reveal that AutoThinking improved students' CT skills and conceptual knowledge better than the conventional approach. It was also found that students with a low and high level of prior knowledge made higher improvement in knowledge gain using the adaptive game compared to the traditional approach, especially those students with lower prior knowledge. Finally, our findings show that the adaptive game could also improve students' learning attitude toward CT better than the conventional approach, especially those students with higher prior learning attitudes. • We developed an adaptive educational game for promoting computational thinking. • The game improved students' CT conceptual knowledge and skills. • The game improved students' learning attitude toward CT. • Students with lower prior knowledge benefited more from the game. • Students with higher prior learning attitude benefited more from the game. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,An adaptive educational computer game: Effects on students' knowledge and learning attitude in computational thinking.,"Hooshyar, Danial; Malva, Liina; Yang, Yeongwook; Pedaste, Margus; Wang, Minhong; Lim, Heuiseok"
26734591,55,10.3390/engproc2023055049,,MDPI,"Many of today's computational design systems based on explicit or graphic programming software require designers to determine relationships for morphogenesis based on computational thinking supported by the abstraction process. This computational thinking process can reduce the ability to generate analogies in design development and adverse vision related to computational tools. It also reduces the innovation capacity of small companies that produce handicrafts and design teaching in a customized way. This research promotes a computational model based on machine learning combined with an analog creation process. Machine learning engines determine the objects similarity percentage between students' objects and master objects through a forecasting model. There is a proposal to combine parametric design systems, such as Grasshopper3D, with cloud computing and an edge computing device. [ABSTRACT FROM AUTHOR] Copyright of Engineering Proceedings is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Engineering Proceedings,Handcrafting Objects made with Machine Learning: An Object Design Approach with Computer Vision †.,"Reategui, Jose L."
00010782,62,10.1145/3332409,8,Association for Computing Machinery,,Communications of the ACM,Never Too Late to Share Computational Thinking.,"Lowney, Geoffrey A."
07356331,61,10.1177/07356331221102312,1,Sage Publications Inc.,"Block programming has been suggested as a way of engaging young learners with the foundations of programming and computational thinking in a syntax-free manner. Indeed, syntax errors—which form one of two broad categories of errors in programming, the other one being logic errors—are omitted while block programming. However, this does not mean that errors are omitted at large in such environments. In this exploratory case study of a learning environment for early programming (Kodetu), we explored errors in block programming of middle school students (N = 123), using log files drawn from a block-based online. Analyzing 1033 failed executions, we found that errors may be driven by either learners' knowledge and behavior, or by the learning environment design. The rate of error types was not associated with the learners' and contextual variables examined, with the exception of task complexity (as defined by SOLO taxonomy). Our findings highlight the importance of learning from errors and of learning environment design. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,"Types of Errors in Block Programming: Driven by Learner, Learning Environment.","Ben-Yaacov, Anat; Hershkovitz, Arnon"
07475632,105,10.1016/j.chb.2019.106185,,Elsevier B.V.,"Computational Thinking is a term applied to describe the increasing attention on students' knowledge development about designing computational solutions to problems, algorithmic thinking, and coding. It focuses on skills children develop from practicing programming and algorithms, and enables the development of qualities such as abstract thinking, problem solving, pattern recognition, and logical reasoning. Contemporary educational and infrastructural developments, like ""CS for All"" (https://www.csforall.org/), ISTE's Standards for Students in Computational Thinking (https://www.iste.org/explore/Solutions/Computational-thinking-for-all?articleid=152), Computer Science Teachers Association's Concepts of Computational Thinking (http://advocate.csteachers.org/2014/09/15/computational-thinking-and-beyond/), and the appearance of tools such as robotics, 3D printing, microprocessors, and intuitive programming languages posit Computational Thinking as a very promising area to support these learning competences. In this special issue of Computers in Human Behavior , the Editors report four studies conducted by interdisciplinary teams. The introduction to the special issue also draws attention to the great potential and need for further research in the area of Computational Thinking Education to engage students in meaningful learning so as to develop useful thinking skills and digital competences. Finally, the Editorspropose directions for future research and practice in Computational Thinking Education. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Computational thinking education: Issues and challenges.,"Angeli, Charoula; Giannakos, Michail"
00010782,59,10.1145/2949401,7,Association for Computing Machinery,"A letter to the editor is presented that responds to the March 2016 blog post ""Computational Thinking, 10 Years Later"" and the March 2006 column ""Computational Thinking"" by Jeannette Wing.",Communications of the ACM,Rethinking Computational Thinking.,"Botha, Fred"
03601315,141,10.1016/j.compedu.2019.103633,,Elsevier B.V.,"In this study, we evaluated the cognitive and attitudinal influences of playing a video game, Penguin Go, designed to target the development of middle school students' computational thinking (CT) skills. In addition to the overall effectiveness of the game, we investigated the impact of a specific game feature—constraints on the number of blocks in a solution. Results showed that after playing Penguin Go for less than two hours, students' CT skills improved significantly, but the additional constraints did not generate a significant impact on learning. In addition, the game overall did not influence students' attitudes toward computer science, but the constraints condition of the game negatively influenced students' attitudes toward computer science. Implications of the findings and possible directions for future research regarding using these types of games to foster computational thinking skills are discussed. • A quantitative evaluation of a video game targeting computational thinking. • Students' computational thinking skills improved significantly. • No significant impact on students' attitudes toward computer science. • Constraints on the number of blocks did not foster more learning. • Constraints on the number of blocks negatively affected students' CS attitudes. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Can playing a video game foster computational thinking skills?,"Zhao, Weinan; Shute, Valerie J."
00104620,55,10.1093/comjnl/bxs074,7,Oxford University Press / USA,"We recommend using the term Computation in conjunction with a well-defined model of computation whose semantics is clear and which matches the problem being investigated. Computer science already has a number of useful clearly defined models of computation whose behaviors and capabilities are well understood. We should use such models as part of any definition of the term computation. However, for new domains of investigation where there are no appropriate models it may be necessary to invent new formalisms to represent the systems under study. [ABSTRACT FROM PUBLISHER] Copyright of Computer Journal is the property of Oxford University Press / USA and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Journal,Computation and Computational Thinking.,"Aho, Alfred V."
21924880,9,10.3991/ijep.v9i2.9942,2,International Society of Engineering Education (IGIP),"In this paper we present a case study of the mobile learning game sCool [1]. Based on previous work presented Steinmaurer et. al. in [2] we have expanded our study with the introduction of a second experiment and with new additional aspects. sCool is a multi-platform game that is intended to encourage and support children learning computational thinking and coding in Python. The learning content is highly adaptable; educators can thus create own courses on an individual basis for the needs of their students. These courses involve a concept- learning and a practical mode. First, the students learn a specific concept and in a second step, they have to apply it in a practical task. For this purpose, we created a course to teach some basic programming concepts. Two student groups of different school types participated in class as a formal learning activity. In this paper we present the results of the evaluation of sCool in coding classes. Therefore, we focus on the performance, game engagement, emotions and the perception of the girls. Within this study we found out, that the students are interested in learning to code but do have problems to transfer the learned content to similar fields. We also found out, that there are slightly differences in the performance of the different types of students in terms of gender and school type. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Engineering Pedagogy is the property of International Society of Engineering Education (IGIP) and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Engineering Pedagogy,sCool - Game-Based Learning in Computer Science Class.,"Steinmaurer, Alexander; Pirker, Johanna; Gütl, Christian"
17298806,16,10.1177/1729881418820425,1,Sage Publications Inc.,"The development of skills related to computer programming and robotics and the introduction of computational thinking principles in high schools are worldwide trends today. An effective way of initiating young students in this world consists in proposing them stimulating challenges. This work presents a robotic platform that has been successfully used to develop a competition (called Drone Challenge) in which students had to program the navigation system for a simulated unmanned aerial vehicle (or drone). Both the competition and the supporting platform are described in detail. In particular, the article provides a deep technical description of the main components of the platform, namely the drone simulator and the navigation development framework. The results of the survey conducted after the challenge point to the suitability of the working platform deployed. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Advanced Robotic Systems is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Advanced Robotic Systems,Drone challenge: A platform for promoting programming and robotics skills in K-12 education.,"Bermúdez, Aurelio; Casado, Rafael; Fernández, Guillermo; Guijarro, María; Olivas, Pablo"
03601315,148,10.1016/j.compedu.2019.103798,,Elsevier B.V.,"With the increasing attention to Computational Thinking (CT) in education, there has been a concomitant rise of needs and interest in investigating how to assess CT skills. This study systematically reviewed how CT has been assessed in the literature. We reviewed 96 journal articles to analyze specific CT assessments from four perspectives: educational context, assessment construct, assessment type, and reliability and validity evidence. Our review results indicate that (a) more CT assessments are needed for high school, college students, and teacher professional development programs, (b) most CT assessments focus on students' programming or computing skills, (c) traditional tests and performance assessments are often used to assess CT skills, and surveys are used to measure students' CT dispositions, and (d) more reliability and validity evidence needs to be collected and reported in future studies. This review identifies current research gaps and future directions to conceptualize and assess CT skills, and the findings are expected to be beneficial for researchers, curriculum designers, and instructors. • A review of current CT assessments about context, construct, assessment type, and psychometric evidence. • Fewer CT assessments were examined in high school, college, and professional development than in elementary school. • Most CT assessments focused on students' programming or computing skills. • Traditional and portfolio assessments were often used to assess CT, and surveys were used to measure CT dispositions. • Half of the studies reported reliability and validity evidence of their CT assessment. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Assessing computational thinking: A systematic review of empirical studies.,"Tang, Xiaodan; Yin, Yue; Lin, Qiao; Hadad, Roxana; Zhai, Xiaoming"
18657923,15,10.3991/ijim.v15i22.24963,22,International Journal of Interactive Mobile Technologies,"The objective of this research was to develop a Problem-Based Learning (PBL) Model which used a cloud-based constructivist learning environment to enhance Thai undergraduate creative thinking and digital media skills. Initially using a mixed-methods approach, a five-step model was conceptualized. Thereafter, a panel of five academic experts gave input into the model's design from which the model was expanded to include six related learning environments. The instrument used in the research was a problem-based assessment form. Data collection was carried out utilizing group chats and analyzed using descriptive statistics including the mean and standard deviation. The results of the study revealed that the initial model contained five steps including (1) problem identification, (2) problem analysis, (3) research, (4) presentations, and (5) summary and evaluation, which is integrated into the model's additional six learning environment elements. These six learning environments were (1) problem-based, (2) resources, (3) cognitive tools, (4) collaboration, (5) scaffolding, and finally, (6) coaching. When applying the proposed model and related environments, there was a consensus from the experts that the model had excellent suitability and can be used as a model for teaching and learning at the bachelor's degree level. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,A Problem-Based Learning (PBL) and Teaching Model using a Cloud-Based Constructivist Learning Environment to Enhance Thai Undergraduate Creative Thinking and Digital Media Skills.,Parawee Srikan; Paitoon Pimdee; Punnee Leekitchwatana; Akan Narabin
09445846,30,10.1002/ckon.202200058,8,Wiley-Blackwell,"Die molekulardynamische Simulation ist eine weit verbreitete Methode, die Einblicke in die submikroskopische Ebene von Vielteilchensystemen erlaubt und die Berechnung makroskopischer und struktureller Eigenschaften ermöglicht. Sie kann auch didaktisch hilfreich zur Vermittlung von Wechselwirkungen und den daraus resultierenden molekularen Prozessen sein. Der Umgang mit der Frage, wie eine solche Simulation abläuft, kann zum Verständnis chemischer Inhalte beitragen. Dieses „Wie"" erfordert eine Auseinandersetzung mit den Simulationsmethoden und den molekularen Modellen auf der Grundlage einsehbarer Programmcodes. Bei solchen Glass‐Box Simulationen ist der Code Teil der Behandlung chemischer Inhalte. Dabei wird informatisches Denken genutzt, um mit Algorithmen molekulare Vorgänge zu erläutern. In diesem Artikel werden die van der Waals‐Wechselwirkung, die Geschwindigkeitsverteilung sowie die Struktur von Fluiden und Feststoffen behandelt. Neben einer Visualisierung der submikroskopischen Prozesse ermöglicht dieser Ansatz auch Erkenntnisse über die Natur von Modellen. Hinzu kommt, dass Programmierfähigkeiten in den Naturwissenschaften von großer Bedeutung sind und auch im schulischen Bereich für die damit verbundenen Möglichkeiten sensibilisiert werden sollte. (German) [ABSTRACT FROM AUTHOR] Copyright of Chemkon - Chemie Konkret is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Chemkon - Chemie Konkret,Glass‐Box Molekulardynamische Simulationen zur Vermittlung der van der Waals‐Wechselwirkung.,"Kraska, Thomas"
14780771,20,10.1177/14780771221139911,4,Sage Publications Inc.,"In a problem-based, digital-intensive learning environment, the increased proliferation of computational tools used for architectural design has led to a fundamental transformation in architectural studios. Many studies have shown that this has significantly led to the change in cognition of design environments in academia. Design decisions are made through a recursive process that is cyclically refined by allowing constant feedback and testing. This paper represents an observational study with an aim to understand the impact of digital mediums on design processes and design outcomes focusing on associative modeling using VPL. It contextualizes the difference, the associative modeling system as a parametric subset brings to design thinking when used as a medium to explore architectural design. It analyzes specific attributes of associative modeling, otherwise native to computational thinking, that contribute to the legibility of the design process. The paper demonstrates how associative modeling allows the design process to be examined and edited at any stage during and even after algorithmic development, bringing in flexibility. It is argued that digital design tool affordances enable students to develop multilayered and more structured design logic that augments cognition bringing more legibility to the design thinking process. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Architectural Computing is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Architectural Computing,"""Legibility"" a product of obligatory processes in parametric architectural design: A study of implications of associative modeling on design thinking in a parametric architectural design studio.","Sardeshpande, Dhanashree; Gokhale, Vasudha"
,,10.1145/3434074.3447201,,Association for Computing Machinery,"In this paper we present the results from a study in which participants (n=26, aged 6-9) were exposed to two different ER systems, one based on tangible tile-based programming and one on visual block-programming. During the transition from the first to the second system, mediated transfer of knowledge regarding computational concepts, were observed. Furthermore, the participants CT skills were likewise observed to improve throughout the study, across both ER systems. [ABSTRACT FROM AUTHOR] Copyright of ACM/IEEE International Conference on Human-Robot Interaction is the property of Association for Computing Machinery and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ACM/IEEE International Conference on Human-Robot Interaction,"Educational Robotics and Mediated Transfer: Transitioning from Tangible Tile-based Programming, to Visual Block-based Programming.","Maigaard, Bjarke Kristian; Marie, Didde; Lyk, Lukas Juhl; Nielsen, Jacob"
03601315,215,10.1016/j.compedu.2024.105016,,Elsevier B.V.,"Student-centered pedagogy (SCP) is highly considered for its potential to facilitate cognitive learning in Computational Thinking (CT) education. However, there is a noticeable gap in understanding its influence on students' cognitive development from a multilevel perspective. This study delves into cognitive learning theories and aims to bridge the existing gap by introducing a three-level conceptual model to illustrate how the influence of SCP on students' cognitive CT abilities is mediated through the cognitive learning processes. This multilevel approach simultaneously explores SCP within the intricate school environment where factors at the school, teacher, and student levels are closely intertwined. Data was collected from 82 programming teachers and their 2433 students across 43 Hong Kong primary schools. Using multilevel modeling, results indicate that the adoption of SCP is significantly anchored by school support on teacher professional development (TPD), which in turn enhances students' cognitive learning (i.e., active, interactive, constructive, and reflective learning) in class, further contributing to their enhanced cognitive CT abilities. The findings underscore the nuances of SCP adoption in school scenarios, advocating for strategic approaches to maximize student achievements in CT education. Recommendations for future research are discussed. • Presents an integrative model bridging school support, pedagogy, and cognitive abilities from three levels of analysis. • Investigates how teachers' pedagogical strategy influences students' cognitive abilities via cognitive learning. • Explores relationships of active, interactive, constructive, and reflective learning to predict cognitive abilities. • Underscores the value of school support for professional development in teachers' pedagogical strategy. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,"The impact of school support for professional development on teachers' adoption of student-centered pedagogy, students' cognitive learning and abilities: A three-level analysis.","Kong, Siu-Cheung; Wang, Yi-Qing"
15411672,28,10.1109/MIS.2013.141,6,IEEE,"How can the AI community set about promoting a better understanding of AI's accomplishments and greater awareness of its potential across multiple disciplines? [ABSTRACT FROM AUTHOR] Copyright of IEEE Intelligent Systems is the property of IEEE and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",IEEE Intelligent Systems,From Computational Thinking to AI Thinking.,"Zeng, Daniel"
02664909,38,10.1111/jcal.12591,1,Wiley-Blackwell,"Over the past decade, the call to foster computational thinking (CT) in every child has received considerable attention. However, there is little understanding of whether children are developmentally ready to think computationally and what specific CT concepts and skills can be developed at various ages. This study explored the developmental and gender differences in CT skills of 197 Grade 4–6 students (aged 9–13) before being exposed to instruction and investigated the age–gender interaction effects on their CT acquisition in an intervention combining both programming and non‐programming (unplugged) activities. Results show that students' CT skills followed a developmental progression before instruction. Gender difference across ages was insignificant in conditionals, logical operators, pattern recognition and generalization skills. Additionally, students of different ages developed CT differently during the intervention, and their CT acquisition was unaffected by gender. Implications for practice and research in CT education were discussed. Lay Description: What is currently known about the topic: Learning progressions for computational thinking have been defined in K‐12 curricula globally.Engaging in programming and non‐programming (unplugged) activities can increase students' CT skills.Controversial results have been reported on the age–gender interaction effects on CT development.Lack of understanding on children's actual progressive development of CT. What this paper adds: A developmental progression was found in CT skills of students aged 9–13. Students aged 12 and above had some a priori understanding of CT.No gender difference across ages existed in conditionals, logical operators, pattern recognition and generalization skills before instruction.Students aged 9–11 benefitted the most from an intervention combining both programming and unplugged activities compared to older students. Students' CT acquisition in the intervention was unaffected by gender.Given the intervention, students aged 9 and above developed conditionals, logical operators and pattern recognition skills. However, generalization skill was developed only for students aged 12 and above. Implications for practice and policy: The findings lay the foundation for designing evidence‐based age‐appropriate CT learning progression and pedagogies.Age‐appropriate learning content: Given appropriate learning experiences, students aged 9 and above may be ready to learn certain CT concepts and skills, including conditionals, logical operators and pattern recognition.CT pedagogies: Using programming and unplugged activities to develop CT requires careful consideration of students' cognitive development and gender needs. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Exploring age and gender differences of computational thinkers in primary school: A developmental perspective.,"Jiang, Shan; Wong, Gary K. W."
10494820,30,10.1080/10494820.2019.1636090,1,Taylor & Francis Ltd,"This study used robot-based practices to develop an activity that incorporated the 6E model. The sixth-grade students learned interdisciplinary knowledge about how to use Arduino electronic components, microcontrollers, and hands-on tools to make a ""Crab Robot."" In addition, the students learned how to use Scratch programming language to control the robot and complete the ""Crab Robot Crossing the Road"" task. The study implemented a quasi-experimental design to examine whether the students who learned the robot-based activity using the 6E model acquired better learning motivation, learning performance, computational thinking ability, and hands-on ability than those who learned the activity through lectures. This study adopted purposive sampling to select 70 sixth-grade students from four classes, which were divided into the experimental group (6E model) and the control group (lectures). The experiment was conducted over a period of 18 weeks (for a total duration of 1,440 minutes). The results from the pretests-posttests showed that both groups of students improved their learning motivation, learning performance, computational thinking ability, and hands-on ability; however, the experimental group's scores were significantly better. More importantly, this study provides a pedagogy manuscript for instructors who want to teach mechatronics programs and programming design education. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Using robot-based practices to develop an activity that incorporated the 6E model to improve elementary school students' learning performances.,"Hsiao, Hsien-Sheng; Lin, Yi-Wei; Lin, Kuen-Yi; Lin, Chien-Yu; Chen, Jheng-Han; Chen, Jyun-Chen"
22348255,22,10.56977/jicce.2024.22.2.153,2,Korea Institute of Information & Communication Engineering,"This study aims to summarize the effects of Arduino-based educational programs through a meta-analysis. Eleven eligible primary studies were obtained through a systematic literature review and coded accordingly. The results are as follows: The meta-analysis revealed that the overall effect size for all the studies was 0.518. Analysis of the moderator variables indicated statistically significant differences between them. Regarding the learning domains, the results were ranked in descending order of the cognitive and affective domains. Within the cognitive domain, the effect sizes were ranked in descending order as follows: logical thinking, content knowledge, convergence competency, self-efficacy, computational thinking, and creative problemsolving skills. In terms of subject areas, the descending order of effect sizes was agriculture, STEAM, environmental science, practical arts, artificial intelligence, informatics, and computers. Regarding school level, the results were ranked in the following descending order: college, elementary school, middle school, and high school. [ABSTRACT FROM AUTHOR] Copyright of Journal of Information & Communication Convergence Engineering is the property of Korea Institute of Information & Communication Engineering and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Information & Communication Convergence Engineering,Meta-Analysis of Cognitive and Affective Effects of Arduino-Based Educational Programs.,Bong Seok Jang
02664909,37,10.1111/jcal.12570,5,Wiley-Blackwell,"In the last few years, programming, computational thinking, and robotics are more frequently integrated into elementary education. This integration can be done in many different ways. However, it is still unclear which teaching methods work in which situations. To provide some clarity in this area, we compared two methods of integrating programming into a primary robotics workshop for learners aged ten to twelve. In one method, students create programs from scratch; in the other, they start with a faulty program they have to fix. These teaching methods were evaluated using the framework of learning ecology, which provides a holistic framework for assessing complex learning environments. We identified different indicators of learning ecology and assessed our workshops using a mixed‐methods approach. Our results showed no difference between the groups on the intrinsic dimension of a learning ecology. However, on the experiential dimension, the learners in the create group scored better on all tests. Our results show the value of a multidimensional assessment of learning ecology to understand different teaching techniques. Additionally, the results provide us with important insights on how to integrate programming into a primary robotics curriculum enabling teachers to select better methods for teaching computing in their classroom. Lay Description: What is already known about this topic?: More and more countries are adding programming and computational thinking to their primary school curriculaTeacher need practical, efficient and effective ways to integrate programming into their coursesTeachers often opt for scaffolding techniques when teaching programming, however there is no conclusive research about which techniques work in which situations What this paper adds?: This research compares two methods for integrating programming into primary roboticsThese methods are evaluated using the intrinsic and experiential dimensions of learning ecology to get a deeper understanding of the underlying learning processesWe show that using learning ecology as a framework for learning can give deeper insights into learning practiceOur experiments show that integrating programming should preferably be done by letting learners create programs from scratch and not fix programs with errors Implications for practice and/or policy: Provide teachers with insights into the effects of different integration methods for programmingAllowing teachers to reason about why certain techniques are less effective than othersHanding teachers a framework for assessing the way they choose to integrate programming into their curriculum [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Comparing learning ecologies of primary graphical programming: create or fix?,"Neutens, Tom; Barbion, Evelien; Coolsaet, Kris; wyffels, Francis"
20763417,11,10.3390/app11031073,3,MDPI,"Traditional in-app virtual reality (VR)/augmented reality (AR) applications pose a challenge of reaching users due to their dependency on operating systems (Android, iOS). Besides, it is difficult for general users to create their own VR/AR applications and foster their creative ideas without advanced programming skills. This paper addresses these issues by proposing an interactive extended reality toolkit, named BlocklyXR. The objective of this research is to provide general users with a visual programming environment to build an extended reality application for digital storytelling. The contextual design was generated from real-world map data retrieved from Mapbox GL. ThreeJS was used for setting up, rendering 3D environments, and controlling animations. A block-based programming approach was adapted to let users design their own story. The capability of BlocklyXR was illustrated with a use case where users were able to replicate the existing PalmitoAR utilizing the block-based authoring toolkit with fewer efforts in programming. The technology acceptance model was used to evaluate the adoption and use of the interactive extended reality toolkit. The findings showed that visual design and task technology fit had significantly positive effects on user motivation factors (perceived ease of use and perceived usefulness). In turn, perceived usefulness had statistically significant and positive effects on intention to use, while there was no significant impact of perceived ease of use on intention to use. Study implications and future research directions are discussed. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),BlocklyXR: An Interactive Extended Reality Toolkit for Digital Storytelling.,"Jung, Kwanghee; Nguyen, Vinh T.; Lee, Jaehoon; Kim, Chang-Hun"
00010782,60,10.1145/3128899,9,Association for Computing Machinery,,Communications of the ACM,Time to Retire 'Computational Thinking'?,"Paulson, Lawrence C."
00010782,60,10.1145/3128899,9,Association for Computing Machinery,,Communications of the ACM,Computational Thinking Is Not Necessarily Computational.,"Glass, Robert L."
00010782,60,10.1145/3128899,9,Association for Computing Machinery,,Communications of the ACM,Computational Thinking Is Not Necessarily Computational.,"Denning, Peter J."
0020739X,53,10.1080/0020739X.2020.1837402,7,Taylor & Francis Ltd,"A growing emphasis on computational thinking worldwide necessitates student proficiency in creating algorithms. Focusing on the use of counterexamples for developing student-invented algorithms, I reanalyze two pieces of data from previously published research, pertaining to two different cases of students' algorithmatizing activity. In both cases, after multiple iterations of testing and revising in response to counterexamples, the student(s) had not created a generalized algorithm. Going beyond a dichotomous right or wrong perspective, the analysis provides insights into how educators can build on the small nuanced revisions that students conduct on their algorithms, rather than expecting students to make one gigantic leap from an incorrect to a correct algorithm, and regarding the absence of such a leap as failure. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Mathematical Education in Science & Technology is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Mathematical Education in Science & Technology,Explicating how students revise their algorithms in response to counterexamples: building on small nuanced gains.,"Tupouniua, John Griffith"
01678329,39,10.3233/EFI-230020,2,IOS Press,"The article presents an open educational resource (OER) to introduce humanities students to data analysis with Python. The article beings with positioning the OER within wider pedagogical debates in the digital humanities. The OER is built from our research encounters and committed to computational thinking rather than technicalities. Furthermore, we argue that students best learn with the 'whole game' methodology. Learners need to be exposed to meaningful activities as soon and as far as possible. The article presents two examples that implement our approach. The first introduces Python as a data analysis language to students of the humanities. It is different because it concentrates on the principles of the computational thinking behind data analysis rather than programming details. The second example takes the students into the world of machine learning and the whole game of social and cultural research with it. Students learn useful skills such as web scraping but will also run their own machine learning algorithms to follow concrete research questions. [ABSTRACT FROM AUTHOR] Copyright of Education for Information is the property of IOS Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Education for Information,An open educational resource to introduce data analysis in Python for the Humanities.,"Blanke, Tobias; Colavizza, Giovanni; van Hout, Zarah"
18657923,14,10.3991/ijim.v14i18.16631,18,International Journal of Interactive Mobile Technologies,"Educational robotics can consider one of the newest trends in education and they have been introduced into the classrooms ranging from kindergarten through high school as a means of enriching the learning environment and promote knowledge-building activities. Especially, robotics technologies offer opportunities for young age children, for a practical, hands-on understanding of the things they meet in their daily life but do not fully understand, such as proximity sensors, motion detectors, and light sensors, reasoning failures (software bugs) and connection problems (Wi-Fi, Bluetooth disconnection). In this article, we presented robots that can be used in early childhood and first primary classes of education. The purpose of this article is not to advocate against an educational robot or robotic kit but indeed to inform the educational community so that to make informed decisions regarding the introduction of this kind of technology into the classroom. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,Robots and Robotics Kits for Early Childhood and First School Age.,"Papadakis, Stamatios"
19183666,12,10.16995/dscn.8105,1,Open Library of Humanities,"The paper tries to counter some misassumptions about the computer and computation especially in relation to humanities and human behavior and they amount to what the author calls “the computational fallacy. The paper discusses a number of points such as the physiology of the computer, the Etymology of basic terms in the field, and the current approaches especially in mainstream digital humanities which reduce computation to a set of “tools”. The paper then proceeds to discuss some counter arguments such as rethinking the notion of programmability which should substitute “calculation” as the core of computation, considering the transformative nature of the computer and its media using the ideas of some theorists like Manovich and Drucker, and some new approaches that view computation differently like Computational Thinking, Algorithmic criticism, and Speculative computing. (English) [ABSTRACT FROM AUTHOR] Cet article essaie de contrer quelques suppositions erronées sur l’ordinateur et la computation, plus particulièrement leur relation aux sciences humaines et au comportement humain qui équivaut à ce que l’auteur appelle « the computational fallacy » ou l’erreur computationnelle. Cet article aborde de nombreux points, tels que la physiologie de l’ordinateur, l’étymologie de termes de base dans ce domaine, ainsi que les approches courantes, particulièrement les approches dominantes dans les humanités numériques qui réduisent la computation comme un ensemble « d’outils ». Ensuite, l’article poursuit en discutant les contre-arguments comme les nouvelles réflexions des notions de programmation qui devraient substituer le calcul au cœur de la computation, considérant la nature transformante de l’ordinateur et ses médias utilisant les idées de quelques théoristes dont Manovich et Drucker, et quelques nouvelles approches qui voient la computation différemment comme « Computational Thinking » ou la pensée computationnelle, « Algorithmic criticism » ou la critique algorithmique et « Speculative computing » ou la computation spéculative. (French) [ABSTRACT FROM AUTHOR] Copyright of Digital Studies / Champ Numérique is the property of Open Library of Humanities and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Digital Studies / Champ Numérique,The Computational Fallacy: A New Model for Understanding the Role of Computers in Humanities.,"Aljayyousi, Mohammad Ibrahim"
07356331,60,10.1177/07356331211017793,1,Sage Publications Inc.,"The integration of visual programming in early formal education has been found to promote computational thinking of students. Teachers' intuitive perspectives about optimal learning processes – ""folk psychology"" – impact their perspectives about teaching ""folk pedagogy"" and play a significant role in integrating educational technologies, such as visual programming, within the formal curriculum. This study was conducted based on the mixed method research paradigm. First, a folk pedagogy questionnaire was distributed to 89 teachers who integrate differing technologies in their classroom in order to identify the teachers' pedagogical perspectives: constructivist versus instructivist. Then, semi-structured interviews were conducted with 24 teachers who teach Scratch in order to gain a deeper understanding of their instructivist/constructivist perspectives and actual pedagogical practices and strategies. Finally, we analyzed 96 students' programming artifacts to explore differences, if any, in students' outcomes related to the pedagogical perspectives of their teachers. Findings revealed that pedagogical perspectives are reflected in teaching strategies and assessment practices employed in a visual programming environment. It is promising that teaching visual programming promoted constructivist pedagogy even among instructivist teachers and was consequently reflected in student perspectives and expressed in their programming artifacts. We discuss theoretical and educational implications of these findings. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Active Learning by Visual Programming: Pedagogical Perspectives of Instructivist and Constructivist Code Teachers and Their Implications on Actual Teaching Strategies and Students' Programming Artifacts.,"Kesler, Avital; Shamir-Inbal, Tamar; Blau, Ina"
10494820,30,10.1080/10494820.2019.1643741,1,Taylor & Francis Ltd,"Block-based programing languages (BBPL) provide effective scaffolding for K-12 students to learn computational thinking. However, the output-based assessment in BBPL learning is insufficient as we can not understand how students learn and what mistakes they have had. This study aims to propose a data-driven method that provides insight into students' problem-solving process in a game-based BBPL practice. Based on a large-scale programing dataset generated by 131,770 students in solving a classical maze game with BBPL in Hour of Code, we first conducted statistical analysis to extract the most common mistakes and correction trajectories students had. Furthermore, we proposed a novel program representation method based on tree edit distance of abstract syntax tree to represent students' programing trajectories, then applied a hierarchical agglomerative clustering algorithm to find the hidden patterns behind these trajectories. The experimental results revealed four qualitatively different clusters: quitters, approachers, solvers and knowers. The further statistical analysis indicated the significant difference on the overall performance among different clusters. This work provides not only a new method to represent students' programing trajectories but also an efficient approach to interpret students' final performance from the perspective of programing process. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Programming trajectories analytics in block-based programming language learning.,"Jiang, Bo; Zhao, Wei; Zhang, Nuan; Qiu, Feiyue"
13807501,83,10.1007/s11042-023-17756-x,19,Springer Nature,"Various studies have suggested that computational thinking needs to be highlighted as one of the essential abilities and it should be taught in the standard K-10 curriculum. However, the standard K-10 curriculum does not always contain accessible technology that uses interactive teaching methods and efficient analytical skill development. Also, most practical computational thinking applications that are being created seem to be complex and expensive for educational settings. In this work, we introduce PlutoAR, a marker-based augmented reality (AR) interpreter that is scalable, inexpensive, portable, and can be used as a platform for kids to enhance their skills in an inclusive way. PlutoAR incorporates AR through an interactive toolkit to give students the experiences of both the real and virtual worlds, overcoming the limitations of traditional and non-interactive setups. With the help of technology-based solutions, this effort intends to enable students from all demographic groups to engage in the learning process, regardless of their level of competence. The PlutoAR mobile application presently runs on any Android device with a camera. It creates inbuilt AR experiences like stories, basic elementary mathematics, navigating mazes utilising conditional loops to solve them, and the intuition of gravity. The usability of the PutoAR application is verified by performing the qualitative and quantitative analysis through user feedback. The application seems to be acceptable by users with a System Usability Scale (SUS) score of more than 80. In future, we intend to provide flexibility to the user for adding new content inside the application whenever needed and to promote AR-based collaboration among the students. [ABSTRACT FROM AUTHOR] Copyright of Multimedia Tools & Applications is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Multimedia Tools & Applications,PlutoAR: a scalable marker-based augmented reality application for interactive and inclusive education.,"Dash, Ajaya Kumar; Behera, Santosh Kumar; Dogra, Debi Prosad"
00010782,49,,9,Association for Computing Machinery,"A letter to the editor is presented in response to the article ""Computational Thinking"" from the March 2006 issue.",Communications of the ACM,"Call It Problem Solving, Not Computational Thinking.",
18257321,16,10.13128/formare-18064,1,Firenze University Press,"The paper presents a coding experience in primary school (""Colozza"" in Campobasso). Within the theoretical framework offered by computational thinking, using App Inventor, it was created a calculator for smartphone in the Android environment. High school students (from a technical secondary school) guided the pupils in primary school, making an interesting form of cooperation between primary and secondary schools. (English) [ABSTRACT FROM AUTHOR] Il contributo presenta una esperienza di coding nella scuola primaria dell'Istituto Comprensivo statale ""Colozza"" di Campobasso. All'interno della cornice teorica offerta dal pensiero computazionale, utilizzando App Inventor, è stata realizzata una calcolatrice per smartphone in ambiente Android. A guidare gli allievi della primaria sono stati gli studenti dell'Istituto Tecnico Industriale ""Marconi"" di Campobasso realizzando una interessante forma di collaborazione tra istituti scolastici di ordine diverso. (Italian) [ABSTRACT FROM AUTHOR] Copyright of Form@re is the property of Firenze University Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Form@re,Start App: una esperienza di coding tra scuola primaria e scuola secondaria.,"Bruni, Filippo; D'Onofrio, Luigi; Nisdeo, Michela"
10613773,29,10.1002/cae.22394,5,Wiley-Blackwell,"Experiences gained from the domain‐specific courses showed that students focus mostly on how to implement solutions and less on what must be considered within the solution. In the case of information systems‐related courses, students focus on system development using specific languages and frameworks while often disregard the required logical checks and constraints. This paper introduces annotated functional decomposition (AFD) to assist students in overcoming the challenge of understanding the logic of an information system. AFD leverages methodological concepts from computational thinking and represents a problem decomposition approach that is extended with additional levels of decomposition. These levels of decomposition are orthogonal and implemented with annotations that enrich a decomposition with information regarding control and data flow, as well as reuse and implementation details. AFD could be exercised with a supporting AFD Tool developed as an Eclipse IDE plugin that performs syntax and semantic checks along with the generation of UML sequential diagrams. The AFD Tool and its source code are available free of charge. Quantitative and qualitative evaluations of AFD Tool usage during an information systems course revealed that students who used AFD achieved higher average grades than those who used UML for solving the same problems, and moreover that students perceived AFD as easy to understand and use. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Annotated functional decomposition.,"Tubić, Stefan; Cvetanović, Miloš; Radivojević, Zaharije; Stojanović, Saša"
09535438,35,10.1093/iwc/iwac041,2,Oxford University Press / USA,"Technologies permeate contemporary society, and the ability to use computer science concepts in problem-solving is essential to everyone. This paper presents an epistemic tool of semiotic engineering whose meaning is resignified to the context of teaching programming to initial learners. Aiming to help these students absorb programming concepts, we structured a gradual form of presentation using the interaction with a new system as a journey through a new culture, based on the Cultural Viewpoint Metaphors theory. After that, we applied this resignification in an introductory programming workshop using visual programming and the BBC Micro:bit embedded device. Results from the workshop revealed that this gradual introduction could help novices in the programming concepts learning process, showing the potential of this approach in teaching programming. [ABSTRACT FROM AUTHOR] Copyright of Interacting with Computers is the property of Oxford University Press / USA and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interacting with Computers,Cultural Viewpoint Metaphors Resignification to Teach Programming.,"Corrêa, Joseline Melo; Mota, Marcelle Pereira"
18657923,16,10.3991/ijim.v16i20.34247,20,International Journal of Interactive Mobile Technologies,"The purpose of the article is to highlight how students' computational thinking, which is a critical thinking skill, can be developed through educational robotics and programming. It is a fun and engaging learning activity that encourages students to collaborate, delve into a problem, construct knowledge, and cultivate critical thinking. Educational robotics is therefore an innovative teaching tool, which contributes to the implementation of the above goal and follows the principles of building, specifically the construction of knowledge (Mikropoulos & Bellou, 2010). It develops students' critical thinking, strengthens their mental models, and activates known learning mechanisms leading them to a deeper level of understanding and assimilation of knowledge, which cannot be accomplished with traditional teaching methodologies. It has also been proven to be able to help students solve complex problems as well as contribute to the development of computational thinking skills (Atmatzidou & Demetriadis, 2014), which should characterize the entire literate population and complement the other three basic reading skills, writing, and mathematics (Mavroudis, Petrou & Fesakis, 2014). [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,"Coding with Block Programming Languages in Educational Robotics and Mobiles, Improve Problem Solving, Creativity & Critical Thinking Skills.","Moraiti, Ioanna; Fotoglou, Anestis; Drigas, Athanasios"
00030996,105,10.1511/2017.124.13,1,"Sigma Xi, The Scientific Research Honor Society, Inc.","The article discusses the impact of the computer revolution on how people think about science, experimentation and research. Topics addressed include description of algorithms for solving systems of differential equation on discrete grids, designed by John von Neumann, the polymath who helped design the first stored program computers, origin of the term computational science and computational thinking, and information on computational model.",American Scientist,Computational Thinking in Science.,"Denning, Peter J."
19003102,11,10.16925/in.v11i18.989,18,Universidad Cooperativa de Colombia,"This article is a case report on the program entitled ""Innovation and Enterprise"" (""Innova y Emprende""), a permanent extension project at the Engineering Faculty of the Universidad Fasta. In this program, a series of workshops was held with the education community. One such workshop was called ""Little Big Dreamers"" (""Pequeños Grandes Soñadores"") and was held in Mar del Plata, Argentina, from March to September 2014. The objective was to empower fifth and sixth grade secondary students at Basic Middle School N° 45 to encourage them to dream and plan their futures. Technology was employed as the facilitating medium for realizing their dreams. The students learned to design their own presentations using Scratch (a programming language for children and adolescents) to develop computational thinking and creativity; they created characters according to their own personal image and incorporated rap music with rhythm and lyrics to express their way of seeing the world. The results obtained through this project helped to awaken the curiosity of the participating adolescents, to develop the necessary abilities for enterprise and find the needed enthusiasm to successfully finish the project. (English) [ABSTRACT FROM AUTHOR] Este artículo es un reporte de caso del programa ""Innova y Emprende"", proyecto de extensión permanente de la Facultad de Ingeniería de la Universidad FASTA. En este programa, se articularon una serie de talleres en los cuales se trabajó con toda la comunidad educativa. Uno de estos talleres se denominó ""Pequeños Grandes Soñadores"", que se realizó en Mar del Plata, Argentina, de marzo a septiembre del 2014. El objetivo de este taller se enfocó en lograr empoderar a los alumnos de quinto y sexto del nivel secundario de la Escuela Media Básica N.° 45 con el fin de estimularlos para soñar y planificar su futuro. Se recurrió a la tecnología como medio facilitador en la realización de los sueños. Los alumnos aprendieron a diseñar sus propias presentaciones en Scratch (lenguaje de programación para niños y adolescentes), desarrollando el pensamiento computacional y la creatividad; crearon los personajes de acuerdo con su propia imagen personal e incorporaron la música, sus raps con ritmos y letra que expresan su modo de ver el mundo. Los resultados obtenidos con este proyecto permitieron despertar la curiosidad en los adolescentes participantes, desarrollar en ellos habilidades necesarias para el emprendimiento y conseguir el entusiasmo necesario para finalizar con éxito el proyecto. (Spanish) [ABSTRACT FROM AUTHOR] Este artigo é um relatório de caso do programa ""Inova e Empreende"", projeto de extensão permanente da Faculdade de Engenharia da Universidad Fasta. Nesse programa, articulou-se uma série de oficinas nas quais se trabalhou com toda a comunidade educativa. Uma dessas oficinas denominou-se ""Pequenos Grandes Sonhadores"", que se realizou no Mar Del Plata, Argentina, de março a setembro de 2014. O objetivo dessa oficina centrou- se em conseguir empoderar os alunos do quinto e sexto anos do ensino Fundamental da Escola Media Básica n. 45 com o objetivo de estimulá-los a sonhar e a planejar seu futuro. Recorreu-se à tecnologia como meio facilitador na realização dos sonhos. Os alunos aprenderam a elaborar suas próprias apresentações em Scratch (linguagem de programação para crianças e adolescentes), desenvolvendo o pensamento computacional e a criatividade; criaram os personagens de acordo com sua própria imagem pessoal e incorporaram a música, seus raps com ritmos e com letra que expressam seu modo de ver o mundo. Os resultados obtidos com esse projeto permitiram despertar a curiosidade nos adolescentes participantes, desenvolver neles habilidades necessárias para o empreendimento e conseguir o entusiasmo necessário para finalizar com sucesso o projeto. (Portuguese) [ABSTRACT FROM AUTHOR] Copyright of Ingeniería Solidaria is the property of Universidad Cooperativa de Colombia and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Ingeniería Solidaria,"""LA FÁBRICA DE SUEÑOS"": PROGRAMA DE EDUCACIÓN EMPRENDEDORA PARA ALUMNOS DE LA ESCUELA PRIMARIA Y MEDIA.","Vega, María Paula"
15980170,20,10.7472/jksii.2019.20.4.81,4,Korean Society for Internet Information,"Since 2015, the government has been striving to strengthen the software capabilities required for future talent through software-oriented university in Korea. In the university selected as a software-oriented university, basic software education is given to all departments such as humanities, social science, engineering, natural science, arts and the sports within the university in order to foster convergent human resources with different knowledge and software literacy. In this paper, we analyze the contents of basic software education for twenty universities selected as software-oriented universities. As a result of analysis, most of the basic software education which is carried out to the students of the non-majors students was aimed at improvement of problem solving ability centered on computational thinking for future society and improvement of convergence ability based on computer science. It uses block-based educational programming language and text-based advanced programming language to adjust the difficulty of programming contents and contents reflecting characteristics of each major. Problem-based learning, project-based learning, and discussion method were used as the teaching and learning methods for problem solving. In the future, this paper will help to establish the systematic direction for basic software education of non-majors students. [ABSTRACT FROM AUTHOR] Copyright of Journal of Korean Society for Internet Information is the property of Korean Society for Internet Information and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Korean Society for Internet Information,문제해결력 향상을 위한 비전공자 소프트웨어 기초교육 내용 분석 - 국내 SW중심대학 중심으로 -,장 은 실; 김 재 현
22344772,23,10.6109/jkiice.2019.23.7.801,7,Korea Institute of Information & Communication Engineering,"Recently, each university has been lecturing a lot on the liberal arts subject by emphasizing software education. However, students are often motivated by the difficulty of learning programming, the inability to recognize why they should learn programming, or even the fact that they do not try. The reason for the resilience is to guide programming learning to have the power to recover from the point of abandonment to proceed with the learning again. In this study, recovery elasticity pre-post-examination was conducted on the parts that learned scratches and those that learned Python. Studies have shown that while Scratch appears to be trying to accept and work harder, Python has been relatively more difficult than Scratch. It is expected that this study will help identify the factors that can sustain programming learning. [ABSTRACT FROM AUTHOR] Copyright of Journal of the Korea Institute of Information & Communication Engineering is the property of Korea Institute of Information & Communication Engineering and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of the Korea Institute of Information & Communication Engineering,기초교양필수 과목인 스크래치와 파이썬 프로그래밍 과목 수강생의 회복탄력성 분석,김세민; 유강수; 홍기천; 조영복
22344772,23,10.6109/jkiice.2019.23.6.704,6,Korea Institute of Information & Communication Engineering,"Programming learning has been recognized as a difficult subject for a long time. To solve these problems, various studies have been conducted. This study was conducted on motivation to break away from programming learning according to gender, one of the characteristics of learners. In this study, pre-post questionnaire surveys were conducted for male students and female students who were involved in scratch learning and Python learning. The results of the study showed that male students had higher confidence in programming learning than female students, but there was no significant difference in overall items. In addition, it was possible to find the difference in motivation to break out from the learning according to the major of students by gender. Through this study, it is expected that it will be helpful to prepare learning strategies to enhance learning motivation and satisfaction by considering learner characteristics in programming learning. [ABSTRACT FROM AUTHOR] Copyright of Journal of the Korea Institute of Information & Communication Engineering is the property of Korea Institute of Information & Communication Engineering and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of the Korea Institute of Information & Communication Engineering,기초교양필수 프로그래밍 수업에서 성별과 프로그래밍 과목에 따른 수강생의 학습이탈동기 분석,유강수; 김세민; 홍기천; 최숙영
20809751,,10.24917/20809751.11.11,,Press of Pedagogical University of Cracow,"Algorithms and algorithmic thinking are key topics in STEM Education. By using algorithms approximate solutions can be obtained for analytical unsolvable problems. Before new methods can be safely applied they have to be thoroughly tested in experiments. In this article we present a series of exercise where students can experiment with algorithms and test them using GeoGebra or the TI-N spire. Based on the results of such experiments the students can compare algorithms, showing them a heuristic and dynamical aspect of Mathematics. [ABSTRACT FROM AUTHOR] Copyright of Annales Universitates Paedagogicae Cracoviensis. Studia ad Didacticam Mathematicae Pertinentia is the property of Press of Pedagogical University of Cracow and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Annales Universitates Paedagogicae Cracoviensis. Studia ad Didacticam Mathematicae Pertinentia,Experiments with iterative methods for linear systems using GeoGebra and TI-Nspire.,"Milicic, Gregor; Plangg, Simon"
16463692,14,10.33965/ijcsis_2019140101,1,International Association for Development of the Information Society (IADIS),"Parents play an influential role in the lives of children studying in elementary school, and their attitudes toward education have a considerable influence on children's attitudes. In the context of computer programming education, parents' ignorance could affect their children's education and attitudes towards education adversely. A promising way to support parents is through informal workshops with their children, in which the former are exposed to the subjects and skills that the children will be learning. This study examined the impact of different types of workshop activities on parents' concerns regarding various aspects of their children's programming education. Three types of workshops were organized, each characterized by a particular activity; including a wooden robot with coding blocks, a robotics toy with visual programming language, and visual language. Data were collected from parents before and after their participation in these workshops. The results from the analysis of the data revealed that the impact of the three activities on the parents varied, with all three activities and workshops having a positive impact on the attitudes and confidence levels of parents in supporting their children at home with technology-related education in addition to enhancing their understanding of programming education. [ABSTRACT FROM AUTHOR] Copyright of IADIS International Journal on Computer Science & Information Systems is the property of International Association for Development of the Information Society (IADIS) and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",IADIS International Journal on Computer Science & Information Systems,THE IMPACT OF WORKSHOP ACTIVITIES ON PARENTS' CONCERNS ABOUT COMPUTER PROGRAMMING EDUCATION IN ELEMENTARY SCHOOL.,Yukiko Maruyama
18257321,19,10.13128/formare-24937,1,Firenze University Press,"The study presents a systematic literature review based on relevant articles at a national and international level and focused on the Educational Robotics activities proposed to children 0-6 years old. The systematic review was carried out following a defined process and the research identified 21 papers, 3 conceptual and 18 empirical. The study aims to encourage reflection on the role that Educational Robotics can play in the design of educational services, within a play-based learning perspective. (English) [ABSTRACT FROM AUTHOR] Il contributo presenta un'analisi sistematica della letteratura rintracciata a livello nazionale e internazionale con l'obiettivo di esplorare obiettivi e articolazione di attività/interventi di Robotica Educativa nei servizi educativi rivolti a bambini e bambine da 0 a 6 anni. I criteri di selezione adottati hanno condotto all'identificazione di 21 contributi, 3 concettuali e 18 empirici, la cui analisi si propone di incoraggiare la riflessione sul ruolo che la Robotica Educativa può rivestire nella progettazione educativa, in particolare entro una prospettiva di play-based learning. (Italian) [ABSTRACT FROM AUTHOR] Copyright of Form@re is the property of Firenze University Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Form@re,La robotica educativa nei servizi educativi 0-6: un'analisi sistematica della letteratura.,"Frison, Daniela"
20763417,13,10.3390/app132312869,23,MDPI,"Featured Application: This work can be used to build a model capable of identifying when a student needs help while performing block-based programming exercises, and providing personalized pedagogical help, or an automatic system that can guide the student when he/she is stuck. In the last few years, there has been increasing interest in the use of block-based programming languages as well as in the ethical aspects of Artificial Intelligence (AI) in primary school education. In this article, we present our research on the automatic identification of the need for assistance among primary school children performing Scratch exercises. For data collection, user experiences have been designed to take into account ethical aspects, including gender bias. Finally, a first-in-class distance calculation method for block-based programming languages has been used in a Long Short-Term Memory (LSTM) model, with the aim of identifying when a primary school student needs help while he/she carries out Scratch exercises. This model has been trained twice: the first time taking into account the gender of the students, and the second time excluding it. The accuracy of the model that includes gender is 99.2%, while that of the model that excludes gender is 91.1%. We conclude that taking into account gender in training this model can lead to overfitting, due to the under-representation of girls among the students participating in the experiences, making the model less able to identify when a student needs help. We also conclude that avoiding gender bias is a major challenge in research on educational systems for learning computational thinking skills, and that it necessarily involves effective and motivating gender-sensitive instructional design. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),Using LSTM to Identify Help Needs in Primary School Scratch Students.,"Imbernón Cuadrado, Luis Eduardo; Manjarrés Riesco, Ángeles; de la Paz López, Félix"
20763417,13,10.3390/app132312792,23,MDPI,"A proper and complete formation in technology (science, communications, programming, robotics, Computational Thinking, etc.) must be imparted at all educational levels for a lifelong education. However, students may lose motivation or interest due to the complexity and abstraction of some of the concepts imparted. In line with this, the work at hand looks to improve the interest and commitment of students by presenting the programming concepts and contents in a practical way. The teaching–learning process is based on the development of projects about robotics, which are adapted for courses and groups of different educational levels. The Design Thinking methodology is used to impart the content. This methodology allows the students to experiment, design and test different solutions for a given problem, increasing their motivation and interest, promoting creativity, and making the students conscious of their learning process. Two different projects are considered, a simulated one based on a sensor network to localise and track a robot in a closed area for vocational education students, and an experimental one about constructing a robot with several capabilities using Lego Mindstorms for compulsory secondary education students. The results obtained over three different groups of students are analysed and compared, and show that the methodology and projects selected can be adopted and adapted for different educational levels, increasing the proficiency of the students, their development, motivation and self-learning despite the difficulty and complexity of some concepts related to computer science. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),Applying Design Thinking to Enhance Programming Education in Vocational and Compulsory Secondary Schools.,"Díaz-Lauzurica, Belkis; Moreno-Salinas, David"
20830157,13,10.35784/iapgos.4421,4,Lublin University of Technology,"This article provides a bibliographic review of the use of cloud technologies in education, based on a analysis of publications indexed by the Web of Science database over the past 20 years. The review shows a significant increase in the popularity of cloud technologies in education, as well as an increase in studies related to various aspects of educational activities under the influence of Industry 4.0. The article identifies future research directions, including the development of mass online courses, virtualization of universities, and research on STEM and STEAM education. The text also discusses the challenges and opportunities associated with the use of cloud technologies in education, emphasizing the need for teacher training and the importance of visualization and visual analysis in education. Additionally, the given document is a list of references for various research articles covering topics such as social media adoption in education, computational thinking, blockchain applications in industry, research competencies in students, visual thinking development, digital transformation in higher education, artificial intelligence in education, and cloud computing in education. These articles provide a comprehensive overview of current trends and advancements in the field of technology in education. [Extracted from the article] Copyright of Informatics Control Measurement in Economy & Environment Protection / Informatyka, Automatyka, Pomiary w Gospodarce i Ochronie Środowiska is the property of Lublin University of Technology and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Informatics Control Measurement in Economy & Environment Protection / Informatyka, Automatyka, Pomiary w Gospodarce i Ochronie Środowiska",CLOUD TECHNOLOGIES IN EDUCATION: THE BIBLIOGRAPHIC REVIEW.,"Yurchenko, Artem; Rozumenko, Anzhela; Rozumenko, Anatolii; Momot, Roman; Semenikhina, Olena"
0020739X,53,10.1080/0020739X.2021.1998688,12,Taylor & Francis Ltd,"The Python programming language is a powerful tool in teaching Number Theory and other pure mathematics classes. Python can be used to make the content more interactive and applicable. I am illustrating this with a few code snippets that I have used in my Number Theory and Cryptography classes. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Mathematical Education in Science & Technology is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Mathematical Education in Science & Technology,The power of the snake: number theory with Python.,"Reitenbach, Markus"
10613773,29,10.1002/cae.22343,1,Wiley-Blackwell,"We adopt the concerns-based adoption model as an analytical lens to explore how Korean teachers perceive the mandated changes brought about by the policy to teach software (SW) education. The research questions are (a) How can teachers be grouped according to their perceived SW knowledge/skills and pedagogical beliefs? (b) What are the overall trends in teachers' stages of concern about SW education? and (c) How are the stages of concern about SW education distributed according to the different teacher types? The participants were 207 teachers who completed the online survey. Data were collected about their perceived SW knowledge/skills, pedagogical beliefs, and the seven stages of concern related to SW education. First, K-means clustering was performed to categorize teachers into four types based on their SW knowledge/skills and pedagogical beliefs. Overall, our findings indicate that 40% of the participants belonged to Type I, who have high SW knowledge/skills and pedagogical beliefs. Second, the concerns profile in Type I showed an M pattern in which they hold both self and impact concerns. Types II--IV showed a similar trend, such that the trends peak at Stage 0 (Awareness) and the intense concerns at the selflevel (Stage 1, Informational and Stage 2, Personal). All types demonstrated a tailing up phenomenon at Stage 6 (Refocusing). This study has implications for the design of concern-based interventions and makes suggestions to enable teachers to move toward more advanced levels to adopt computational thinking-based pedagogy in SW education. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Unpacking teachers' concerns about CT-based pedagogy: The case of software education in Korea.,Dongsim Kim; Hyo-Jeong So; DaHyeon Ryoo
18257321,20,10.13128/form-10026,3,Firenze University Press,"This article presents three didactic experiences. These were realised in the primary school and were finalised to achieving a gradual approach to computational thinking through an experimentation with the operative logic of the algorithms. The wealth of the cognitive objectives identified in the three didactic experiences and the use of active learning strategies have shifted the focus from a technical/functional approach to a more social, aesthetic and cultural one, oriented to developing ideational, creative and collaborative competencies. (English) [ABSTRACT FROM AUTHOR] In questo articolo sono presentate tre esperienze didattiche realizzate nella scuola primaria e finalizzate a un approccio graduale al pensiero computazionale attraverso la sperimentazione della logica operativa degli algoritmi. La ricchezza degli obiettivi cognitivi individuati nelle tre esperienze didattiche e l’utilizzo di strategie per l’apprendimento attivo hanno spostato il focus da un approccio tecnico/funzionale a uno più sociale, estetico e culturale, orientato a sviluppare competenze ideative, creative e collaborative. (Italian) [ABSTRACT FROM AUTHOR] Copyright of Form@re is the property of Firenze University Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Form@re,"A scuola di algoritmi tra creatività, collaborazione e corporeità.","Corazza, Laura; Panciroli, Chiara; Vignola, Patrizio"
,,10.1145/3441852.3476553,23,Association for Computing Machinery,"Introduction of computational thinking training in early childhood potentiates cognitive development and better prepares children to live and prosper in a future heavily computational society. Programming environments are now widely adopted in classrooms to teach programming concepts. However, these tools are often reliant on visual interaction, making them inaccessible to children with visual impairments. Also, programming environments in general are usually designed to promote individual experiences, wasting the potential benefits of group collaborative activities. We propose the design of a programming environment that leverages asymmetric roles to foster collaborative computational thinking activities for children with visual impairments, in particular mixed-visual-ability classes. The multimodal system comprises the use of tangible blocks and auditory feedback, while children have to collaborate to program a robot. We conducted a remote online study, collecting valuable feedback on the limitations and opportunities for future work, aiming to potentiate education and social inclusion. [ABSTRACT FROM AUTHOR] Copyright of ACM SIGACCESS Conference on Computers & Accessibility is the property of Association for Computing Machinery and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ACM SIGACCESS Conference on Computers & Accessibility,Fostering collaboration with asymmetric roles in accessible programming environments for children with mixed-visual-abilities.,"Rocha, Filipa; Guimarães, Guilherme; Gonçalves, David; Pires, Ana Cristina; Abreu, Lúcia Verónica; Guerreiro, Tiago"
00010782,65,10.1145/3490685,2,Association for Computing Machinery,"COMPUTATIONAL THINKING, WHICH centers around devising abstractions for problems so they can be solved with computational steps and efficient algorithms, is a concept that serves not only computer science (CS) but progressively more of science and everyday life. [ABSTRACT FROM AUTHOR] Copyright of Communications of the ACM is the property of Association for Computing Machinery and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Communications of the ACM,"Abstractions, Their Algorithms, and Their Compilers.","AHO, ALFRED; ULLMAN, JEFFREY"
20798954,12,10.3390/systems12030101,3,MDPI,"This document discusses the limitations of traditional epidemiological approaches in understanding the complex and multifactorial nature of disease outcomes. It highlights the importance of systems thinking and computational simulation models in capturing the dynamics and determinants of disease. The document presents a series of articles that demonstrate the application of these methods to various public health topics, including opioid use, emergency department utilization, and infectious disease outbreaks. It emphasizes the value of participatory approaches and stakeholder engagement in the design and implementation of these models. [Extracted from the article] Copyright of Systems is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Systems,Systems Thinking and Models in Public Health.,"Giabbanelli, Philippe J.; Page, Andrew"
15391523,54,10.1080/15391523.2020.1858464,3,Taylor & Francis Ltd,"The study's purpose was to examine the contribution of a programmable robot to an intervention program for promoting spatial ability (spatial relations, visual-memory, mental rotation) of preschool children. Eighty-four participants were randomly assigned to three intervention groups: programmable-robot-based intervention, traditional intervention, control group. Spatial ability was examined pre- and post-10 intervention sessions. Findings indicate that the children exposed to the programmable-robot intervention displayed significantly higher spatial-relations and mental-rotation improvement compared with the traditional intervention and control group. However, the robot did not contribute to visual-memory. The study emphasizes the importance of finding innovative ways to promote spatial ability in young children. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,"Robot programming intervention for promoting spatial relations, mental rotation and visual memory of kindergarten children.","Brainin, Einat; Shamir, Adina; Eden, Sigal"
07475632,93,10.1016/j.chb.2018.12.010,,Elsevier B.V.,"Abstract This study examines the impact of grouping by gender and group roles on robotics performance, computational thinking skills, and learning motivation towards computer programming. One hundred ninety-one students in fourth and fifth grade completed the project. LEGO Mindstorms EV3 robotics were used to compose and program music in groups of three to four students. The robotics project was completed over the course of fourteen weeks for 1 h each week. Gender-structured groups of all female, all male and mixed female and male were randomly assigned in each class. All groups in participating six classrooms were assigned one of three group roles implementation, which were fixed, rotating and no role. This study is significant towards identifying group scaffolds and supports that can produce benefits for all students in robotic activities. Results indicated that group roles matter when students are working on collaborative robotics projects. Three different implementations of group roles in robotics activities demonstrated an impact on robotics performance scores. Gender composition of the group did not impact groups' robotics performance. Group roles also impacted student computational thinking skills, while gender composition of the group still demonstrated no significant difference. Finally, while group roles demonstrated a difference in learning motivation towards computer programming, gender composition demonstrated no difference in learning motivation towards computer programming. Highlights • Group composition matters when students are working on collaborative robotics projects. • Group roles have impacts on student computational thinking skills and robotics performances. • Group roles have no impact on learning motivation towards computer programming. • Gender did not impact groups' robotics performance and computational thinking skills. • Gender did not impact learning motivation towards computer programming. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Grouping matters in computational robotic activities.,"Taylor, Kellie; Baek, Youngkyun"
07380569,35,10.1080/07380569.2018.1531613,4,Taylor & Francis Ltd,"All primary school children in England are required to write computer programs and learn about computational thinking. There are moves in other countries to this effect such as the U.S. K-12 Computer Science Framework (CSF) for development. Debates on how to program and what constitutes computational thinking are ongoing. Here we report on a study of programing by children aged 7 - 11 using Java and elements of computational thinking they experience. Our platform comprises a novel Story-Writing-Coding engine we have developed. We compare novice (children's) processes of coding an animated story with that of experts (college students) and evaluate the differences using four measures based on the progressive coding of a complete program. We also analyze the use of novice (children's) computational thinking in this coding process. This research is set against a backdrop of approaches to teaching programing and concepts of computational thinking in recent educational literature. [ABSTRACT FROM AUTHOR] Copyright of Computers in the Schools is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in the Schools,An Evaluation of Primary School Children Coding Using a Text-Based Language (Java).,"Price, C. B.; Price-Mohr, R. M."
,,10.1145/3183440.3195062,,Association for Computing Machinery,"Training computer scientists to address wicked problems means to focus respectively on the individual capability to think in a computational-oriented way (i.e., Computational Thinking), and on the social dimension of coding (i.e., Agile Values). In this study we propose the conceptual model of Cooperative Thinking, a new education construct of team-based computational problem solving. Cooperative Thinking is not only the sum of Computational Thinking and Agile Values, rather it is a new overarching competence suitable to deal with complex software engineering problems. We suggest to tackle the Cooperative Thinking construct as an education goal, to train new generations of software developers to Pareto-optimize both their individual and teaming performances. [ABSTRACT FROM AUTHOR] Copyright of ICSE: International Conference on Software Engineering is the property of Association for Computing Machinery and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ICSE: International Conference on Software Engineering,A conceptual model for cooperative thinking.,"Russo, Daniel; Missiroli, Marcello; Ciancarini, Paolo"
15391523,52,10.1080/15391523.2020.1713263,2,Taylor & Francis Ltd,"This mixed methods study examined how engagement in robotics and game design influenced students' self-efficacy, STEM attitudes, and computational thinking (CT) skills. Predominantly African-American students engaged in engineering and computer science tasks during informal learning environments. Results revealed students' self-efficacy scores on computer gaming increased significantly. Focus group data supported these findings, revealing that computer programing was challenging, but students enjoyed the tasks, added elements of culture in some cases, and valued the agency the tasks provided. Focal students were also able to make connections to STEM-related careers. Observational data demonstrated that focal students exhibited substantive CT during robotics and moderate CT during game design. Results support the idea that robotics and game design may be used to broaden underrepresented students' participation in STEM. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Informal STEM: learning with robotics and game design in an urban context.,"Newton, Kristie J.; Leonard, Jacqueline; Buss, Alan; Wright, Christopher G.; Barnes-Johnson, Joy"
22111662,25,10.1007/s10758-019-09423-8,1,Springer Nature,"This emerging technology report describes computational toys as tools for learning and building computational thinking (CT) skills in young children. We present both a framework to categorize computational toys as well as a separate framework to evaluate the toys' effectiveness for teaching CT skills. We then apply our frameworks to thirty computational toys targeting children ages 5 and 6 years old. By identifying physical and ideational features of computational toys, educators and researchers will be able to apply our findings to practice and expand upon CT pedagogical research in young learners. Our future research goals include to investigate how CT skills can be observed and measured in early childhood education. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",An Emerging Technology Report on Computational Toys in Early Childhood.,"Hamilton, Megan; Clarke-Midura, Jody; Shumway, Jessica F.; Lee, Victor R."
10234934,,,,Questex Media Group,"The article focuses on the CoolThink@JC initiative funded by the Hong Kong Jockey Club Charities Trust, which aims to improve the computational thinking ability of students in Hong Kong, China. Among the key components of the computational thinking includes algorithmic thinking, abstraction, and debugging. It mentions that the initiative was part of the government's goal to promote science, technology, engineering, and mathematics (STEM) education in the region.",ComputerWorld Hong Kong,HKJC hones computational thinking skills with HK$216m fund.,"Ko, Carol"
20885334,13,10.18517/ijaseit.13.5.19057,5,INSIGHT - Indonesian Society for Knowledge & Human Development,"Extending beyond technology, artificial intelligence (AI) is fundamentally changing how people live. It plays a key role in determining the competitiveness of countries and companies and is expected to change the competitive landscape of existing industries fundamentally. The better people understand AI, the better they can utilize it effectively and safely. Therefore, preparing a strategy to ensure that all citizens have access to AI education is important. This study aims to develop an AI liberal arts curriculum to improve the general public's ability to utilize and understand AI. Through literature analysis, AI core competencies for the general public were derived. The core competencies are Adaptability, Public Interest Consideration, Creative and Convergent Thinking, Collaboration, Computational Thinking, and Artificial Intelligence Literacy. The AI curriculum was designed considering AI core competencies, and the validity of the experts was verified for AI technology and education experts. We also conducted a comparative analysis of the content and level of AI curriculum for the general public based on the results of word frequency and topic modeling analysis of AI educationrelated papers collected from the Web of Science. The areas of the AI curriculum consisted of understanding artificial intelligence, application of artificial intelligence, and artificial intelligence. This study is significant in that the topics discovered are based on the frequency of words extracted from many AI education-related documents, and the results of topic modeling are considered in the curriculum development process. [ABSTRACT FROM AUTHOR] Copyright of International Journal on Advanced Science, Engineering & Information Technology is the property of INSIGHT - Indonesian Society for Knowledge & Human Development and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","International Journal on Advanced Science, Engineering & Information Technology",Development of AI Liberal Arts Curriculum for the General Public.,Yunjae Jang; Ilkyu Yoon; Hosung Woo
18657923,16,10.3991/ijim.v16i06.28905,6,International Journal of Interactive Mobile Technologies,"Though expanding computational thinking to primary school students has become more prevalent, there is a lack of appropriate didactics. Educational robotics offers a possible approach. However, innovations can only find their way into the classroom if teachers find them feasible and meaningful. Thus, appropriate training and further education of teachers are becoming a necessity. This paper reports on investigating professional development for teachers in programming robots by integrating the method of storytelling in their teaching. It draws on the Technology Usage Inventory (TUI) model to explore how an interdisciplinary intervention with programmable robots, combined with the storytelling method Tell, Draw & Code can influence the intention to use them in the classroom. Comparing the pre-and post-test and the qualitative data analysis shows a significant increase in positive attitudes towards the use of robots. The learning scenarios produced by the participants show how implementation can succeed. These findings highlight the need for teachers to explore, reflect, and experience the potential of new technologies as part of their teacher development to implement innovations sustainably. The quasi-experimental study shows that this problem-based and interdisciplinary didactic setting is particularly well received by teachers because it promotes computational thinking, narrative, and reading skills in primary school students in equal measure, and it can be easily taught and transferred. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,Examining Teachers' Intention to integrate Robotics-based Storytelling Activities in Primary Schools.,"Tengler, Karin; Sabitzer, Barbara"
00978493,103,10.1016/j.cag.2022.01.002,,Elsevier B.V.,"The ubiquity of smartphone and tablet devices, combined with the increasing availability of serious games, has enabled students to learn various abstract concepts in an appealing and convenient manner. While several researchers have explored the use of Augmented Reality (AR) in serious games, many of these games have not been critically explained or evaluated. To that end, we employed game-based learning methodologies and Game Learning Analytics (GLA) to systematize the design and evaluation of an AR-based serious game to teach programming. We evaluated our game for usability and effectiveness by conducting a user study on twenty-seven undergraduate students. The evaluation primarily consisted of a learning test conducted twice – before and after playing the game – along with a usability questionnaire that players completed after playing the game. Our results showed that players made significant progress after playing the game. The game helped players improve their basic programming skills, especially for the group having lower prior programming skills. The results highlighted various ways in which GLA can be used to benefit different stakeholders in the game. Based on players' qualitative responses, we also identified several areas of improvement, most prominently the trade-off between ease of use and game complexity. We provide suggestions and discuss implications for future work. • Design and evaluation procedures for an Augmented Reality-based serious game to teach programming are presented. • An empirical study with twenty-seven undergraduate students is conducted. • Students with lesser prior programming skills show significant improvement after playing the game. • A Game Learning Analytics framework is incorporated in the game for various stakeholder benefits. • Suggestions and implications for future work are presented. [ABSTRACT FROM AUTHOR] Copyright of Computers & Graphics is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Graphics,The design and evaluation of an AR-based serious game to teach programming.,"Sharma, Vandit; Bhagat, Kaushal Kumar; Huang, Huai-Hsuan; Chen, Nian-Shing"
10494820,32,10.1080/10494820.2022.2129392,5,Taylor & Francis Ltd,"This research reviews 56 robots in science education (RSE) research articles published in SSCI (Social Sciences Citation Index) journals in the Web of Science (WoS) database. The analysis results showed that there were three clusters of RSE studies: robots in elementary science education, robot-based STEM activities, and robot-facilitated computational thinking. In terms of the research issues, more studies were conducted across-disciplines. Regarding thematic classifications, ""general benefits of educational robots"" was the most frequently investigated issue, while ""diversity and broadening participation,"" and ""creativity and motivation"" were less frequently discussed. The most adopted research methods were quantitative and mixed methods, focusing on measuring learners' cognition and affect. Most of the interventions in the empirical studies adopted pedagogical interventions. In terms of the interaction issue, LEGO was adopted the most, followed by self-made robots; moreover, robots frequently played the role of tools in science education. From the perspective of specific robotics content knowledge, ""control"" (e.g. programming) comprised the majority. The most adopted learning strategy was project-based learning, followed by issue-based discussion. Regarding assessment issues, the most adopted evaluation approaches to evaluating students' performance were questionnaires, observation, verbal interviews, and artifacts to assess the quality of learning activities. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,"Roles, applications, and research designs of robots in science education: a systematic review and bibliometric analysis of journal publications from 1996 to 2020.","Chiu, Min-Chi; Hwang, Gwo-Jen; Tu, Yun-Fang"
03784754,132,10.1016/j.matcom.2015.06.010,,Elsevier B.V.,"“More is different” (Philip W. Anderson). Complex systems thinking become instrumental for the modern understanding basis of life sciences in general and, hence, medicine and public health. In this perspective paper, we discuss recent literature and invite readers to explore the utility of complex thinking to properly addressing the constrained-based analysis of high-profile open questions in biomedicine with straightforward implications on public health. Recommendations are then proposed to encourage new multidisciplinary teams to come together in a timely manner in response to novel challenges in the theoretical physiology arena. We conclude that there is the need for far greater attention to the issue of complexity to aptly cope with a new array of problems that would have been unthinkable just a few years ago. [ABSTRACT FROM AUTHOR] Copyright of Mathematics & Computers in Simulation is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Mathematics & Computers in Simulation,The future of computational biomedicine: Complex systems thinking.,"Joly, Marcel; Rondó, Patrícia H.C."
23843004,10,,1,Korea Institute of Information & Communication Engineering,,International Conference on Future Information & Communication Engineering (ICFICE),Design of the TREE Software Education Model Based on Visual Thinking for Primary Students.,Young-Hoon Sung; Young-Sik Jeong
18657923,15,10.3991/ijim.v15i13.21791,13,International Journal of Interactive Mobile Technologies,"In the 21st century, computing and other necessary skills have become imperative for today's learners. Memorizing a book or one-way communication is incapable of fully developing all the skills required. Along with changes in the new curriculum structure in the computational science courses which are aimed to improve computational thinking skills. In Thailand, students do not have enough experience in calculation methods. Teachers must therefore provide instruction in a format that promotes computational thinking and the skills necessary for the 21st century. The sample was 400 students from public and private schools in the same amount to develop the model, which was calculated based on the population of high school students throughout Bangkok, Thailand. It was found that the current learning model was unable to develop computational thinking concepts and 21st century skills. Therefore, the researchers have the concept of developing a teaching model that focuses on problem-solving along with the use of a design thinking approach in a virtual learning environment. To enable students with no experience with computational thinking skills to develop computational thinking skills to a competent standard. The objective is to also develop other skills, which are essential skills in the 21st century at the same time. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,Development of a Teaching Model in Virtual Learning Environment to Enhance Computational Competencies in the 21st Century.,"Rungrangtanapol, Noppadol; Khlaisang, Jintavee"
22111662,28,10.1007/s10758-021-09562-x,1,Springer Nature,"The development of computational thinking skills is attracting attention worldwide. The use of visual or block-based coding in primary schools has gained momentum. Yet, students' acceptance of such coding environments has been neglected in the literature. This study presents a measurement instrument that will allow pursuing such an endeavor. The Technology Acceptance Model was used as a guiding framework. A panel of eight experts and a purposive sample of 315 elementary school students (Mage = 10.18 years, SD = 1.13) were recruited. Inter-rater agreement between experts (75–100%) confirmed the content validity of the items. Exploratory factor analysis resulted in a three-factor solution of 12 items measuring perceived usefulness, perceived ease of use, and attitudes towards visual coding. Inspection of the correlation matrix provided evidence of convergent and discriminant validity. Cronbach's alpha (.75–.82), McDonald's omega (.68–.83), and Spearman-Brown's split-half coefficients (.67–.80) provided evidence of reliability. Overall, findings support the validity and reliability of the proposed instrument. Its use can shed light on students' acceptance of different block-based coding environments. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",Measuring Acceptance of Block-Based Coding Environments.,"Toma, Radu Bogdan"
09445846,30,10.1002/ckon.202100044,2,Wiley-Blackwell,"The further development of the Siemens Stiftung′s Experimento|10+ teacher training program takes advantage of the opportunities offered by digitality in terms of both learning form and content: Digital and analogue experimental phases alter in a blended learning format, with the digital phases realized by online self‐learning modules. The topics of value education, inclusion and language‐sensitive teaching, as well as Computational Thinking, can be optionally selected by the teachers. During the face‐to‐face‐sessions, a special focus is placed on performing experiments on the topics energy, environment and health, which are highly suitable for chemistry lessons. In this article, the online modules, which are accessible via the Siemens Stiftung's Media Portal, are presented in more detail. (English) [ABSTRACT FROM AUTHOR] Mit der Weiterentwicklung der Lehrkräftefortbildung Experimento | 10+ der Siemens Stiftung wird ein neuartiges Bildungsprogramm vorgestellt, das sowohl in der Lernform als auch inhaltlich die Chancen der Digitalität nutzt: Es wechseln sich in einem Blended‐Learning‐Format digitale und analoge Experimentierphasen ab, wobei die digitalen Phasen über Online‐Selbstlern‐Module realisiert werden. Die Themenmodule Wertebildung, Inklusion und sprachsensibler Fachunterricht sowie Computational Thinking sind für die Lehrkräfte während der zweitägigen Fortbildung fakultativ. Während der Präsenzveranstaltungen liegt ein besonderer Fokus auf der Erprobung von Experimenten zu den Themenbereichen Energie, Umwelt und Gesundheit, welche sich im Besonderen für den Einsatz im Chemieunterricht eignen. Im vorliegenden Beitrag wird vor allem die Gestaltung der Online‐Module näher vorgestellt, welche über das Medienportal der Siemens Stiftung verfügbar sind. (German) [ABSTRACT FROM AUTHOR] Copyright of Chemkon - Chemie Konkret is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Chemkon - Chemie Konkret,Konzeption einer Blended‐Learning‐Lehrkräftefortbildung mit digitalen und analogen Inhalten im Rahmen von Experimento|10+.,"Knie, Lisa; Schwarzer, Stefan"
21698767,,,,IEOM Society International,"The built environment has been slow in adapting innovative technologies and methods, and there has never been a more inspiring time to innovate than now. We live in a new automation era in which computers, robotic technologies and artificial intelligence will increasingly perform routine manual work and rightfully take traditional jobs from humans. This technological impact and socio-economic disruption in the industry will transform the employment scenery and skills requirements. This review notes the greater challenges faced by the construction industry in fostering innovation. These include both industry-specific challenges and the need to fulfill sustainable development goals. In addition to these challenges, the need for construction role players to understand the critical skills required for industry 4.0 is also discussed. The study is conducted by critically reviewing the literature of selected papers from well-known academic journals in construction and 4IR research. Above innovative leadership, different innovative skills are vital to developing and understanding emerging innovative technologies. Skills identified include; Creativity, design mindset, entrepreneurship, critical thinking, social intelligence, digital literacy, leadership and computational thinking. Moreover, industry role players with these skills can help fast-track the need for technological innovation in the construction industry. The study presents a robust background in identifying essential skills research agenda in the built environment that fosters innovation and its adaptation. [ABSTRACT FROM AUTHOR] Copyright of Proceedings of the International Conference on Industrial Engineering & Operations Management is the property of IEOM Society International and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Proceedings of the International Conference on Industrial Engineering & Operations Management,Essential Skills Towards Fostering Innovation in the Built Environment: A Theoretical SDG 9 Outlook.,"Liphadzi, M.; Yeko, Y."
26917734,,,,IEOM Society International,"The built environment has been slow in adapting innovative technologies and methods, and there has never been a more inspiring time to innovate than now. We live in a new automation era in which computers, robotic technologies and artificial intelligence will increasingly perform routine manual work and rightfully take traditional jobs from humans. This technological impact and socio-economic disruption in the industry will transform the employment scenery and skills requirements. This review notes the greater challenges faced by the construction industry in fostering innovation. These include both industry-specific challenges and the need to fulfill sustainable development goals. In addition to these challenges, the need for construction role players to understand the critical skills required for industry 4.0 is also discussed. The study is conducted by critically reviewing the literature of selected papers from well-known academic journals in construction and 4IR research. Above innovative leadership, different innovative skills are vital to developing and understanding emerging innovative technologies. Skills identified include; Creativity, design mindset, entrepreneurship, critical thinking, social intelligence, digital literacy, leadership and computational thinking. Moreover, industry role players with these skills can help fast-track the need for technological innovation in the construction industry. The study presents a robust background in identifying essential skills research agenda in the built environment that fosters innovation and its adaptation. [ABSTRACT FROM AUTHOR] Copyright of IMEOM Conferences - Dhaka, Bangladesh is the property of IEOM Society International and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","IMEOM Conferences - Dhaka, Bangladesh",Essential Skills Towards Fostering Innovation in the Built Environment: A Theoretical SDG 9 Outlook.,"Liphadzi, M.; Yeko, Y."
,,,,Association for Information Systems,"Firms face increasing pressure to refine business values and succeed in digital transformation. It is essential for organizations to have the required competence and capabilities to make innovation happen. This study argues that digital transformation teams should build the right competence profiles to deliver the changes using digital tools. Based on the dynamic capability theory, this paper proposes that the team’s digital problem-solving capability and benefits management capability are essential for digital transformation success. Using process automation as a context, this paper suggests that digital transformation teams should build data literacy, business process management competence, and computational thinking to form their capabilities for digital transformation, leading to process automation outcomes. This paper develops the conceptual research model and discusses the research method and the future plan. [ABSTRACT FROM AUTHOR] Copyright of Proceedings of the Americas Conference on Information Systems (AMCIS) is the property of Association for Information Systems and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Proceedings of the Americas Conference on Information Systems (AMCIS),Digital Transformation Team’s Capabilities for Process Automation.,Yuzhu Li
,,,,IEOM Society International,"The built environment has been slow in adapting innovative technologies and methods, and there has never been a more inspiring time to innovate than now. We live in a new automation era in which computers, robotic technologies and artificial intelligence will increasingly perform routine manual work and rightfully take traditional jobs from humans. This technological impact and socio-economic disruption in the industry will transform the employment scenery and skills requirements. This review notes the greater challenges faced by the construction industry in fostering innovation. These include both industry-specific challenges and the need to fulfill sustainable development goals. In addition to these challenges, the need for construction role players to understand the critical skills required for industry 4.0 is also discussed. The study is conducted by critically reviewing the literature of selected papers from well-known academic journals in construction and 4IR research. Above innovative leadership, different innovative skills are vital to developing and understanding emerging innovative technologies. Skills identified include; Creativity, design mindset, entrepreneurship, critical thinking, social intelligence, digital literacy, leadership and computational thinking. Moreover, industry role players with these skills can help fast-track the need for technological innovation in the construction industry. The study presents a robust background in identifying essential skills research agenda in the built environment that fosters innovation and its adaptation. [ABSTRACT FROM AUTHOR] Copyright of IEOM North American Conference Proceedings is the property of IEOM Society International and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",IEOM North American Conference Proceedings,Essential Skills Towards Fostering Innovation in the Built Environment: A Theoretical SDG 9 Outlook.,"Liphadzi, M.; Yeko, Y."
,,,,IEOM Society International,"The built environment has been slow in adapting innovative technologies and methods, and there has never been a more inspiring time to innovate than now. We live in a new automation era in which computers, robotic technologies and artificial intelligence will increasingly perform routine manual work and rightfully take traditional jobs from humans. This technological impact and socio-economic disruption in the industry will transform the employment scenery and skills requirements. This review notes the greater challenges faced by the construction industry in fostering innovation. These include both industry-specific challenges and the need to fulfill sustainable development goals. In addition to these challenges, the need for construction role players to understand the critical skills required for industry 4.0 is also discussed. The study is conducted by critically reviewing the literature of selected papers from well-known academic journals in construction and 4IR research. Above innovative leadership, different innovative skills are vital to developing and understanding emerging innovative technologies. Skills identified include; Creativity, design mindset, entrepreneurship, critical thinking, social intelligence, digital literacy, leadership and computational thinking. Moreover, industry role players with these skills can help fast-track the need for technological innovation in the construction industry. The study presents a robust background in identifying essential skills research agenda in the built environment that fosters innovation and its adaptation. [ABSTRACT FROM AUTHOR] Copyright of IEOM Annual International Conference Proceedings is the property of IEOM Society International and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",IEOM Annual International Conference Proceedings,Essential Skills Towards Fostering Innovation in the Built Environment: A Theoretical SDG 9 Outlook.,"Liphadzi, M.; Yeko, Y."
20763417,11,10.3390/app11188653,18,MDPI,"The present paper presents a systematic review of the last 30 years that concerns records on Smart Toys and focuses on toys regarding early childhood and primary education children (3–12 years old). This paper aims to analyse and categorise smart toys (50 articles) in terms of their technological and educational affordances. The results show that the toys are designed based on four main technological affordances and their combinations. The educational affordances of smart toys are studied in terms of different use modes and their learning objectives aimed to identify specific objectives in different subjects and objectives based on transversal competencies such as problem solving, spatial thinking, computational thinking, collaboration and symbolic thinking. Finally, with the multiple correspondence analysis, the correlations between smart toys' individual technological and educational affordances are grouped with the evolution of affordances related to their development date. In conclusion, in recent years, smart toys concern special sciences (programming) and some 21st-century skills (STEM and computational thinking). In contrast, in the first 20 years, the interest focused more on transverse skills, such as collaboration, emotional thinking, symbolic thinking, story-telling and problem solving. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),Smart Toys in Early Childhood and Primary Education: A Systematic Review of Technological and Educational Affordances.,"Komis, Vassilis; Karachristos, Christofors; Mourta, Despina; Sgoura, Konstantina; Misirli, Anastasia; Jaillet, Alain"
22111662,24,10.1007/s10758-018-9389-5,2,Springer Nature,"Nowadays, children and teenagers use technology products in an increasingly passive way. As simple consumers they cannot benefit from the opportunities of designing technology, which has a learning value. Educational Robotics (ER) programs are particularly effective in delivering contents of difficult disciplines: they can re-establish a balance between the learners and the technological devices, because the learners act as programmers and can develop their computational thinking. Therefore, we believe the school should upgrade its teaching methods, through the implementation of ER programs. This could be done without introducing a new subject, since technology could be considered like an interdisciplinary application module within pre-existing subjects. In this paper, we provide an overview of ER programs to share a practical guidance with those who want to plan educational workshops in their institutes. First, we analyze ER theoretical and epistemological fundamentals: ER has roots in recent and classic disciplines (psychology, cybernetics, robotics, cognitive science...), but it is also consistent with the principles of widely recognized pedagogies. Then, we describe successful Italian projects with a focus on regulations concerning ER programs. As a result of this analysis, we propose a brief guideline on the following topics: (a) needs analysis, (b) target segmentation, (c) objectives, (d) laboratory setting, (e) contents definition, (f) activities, (g) evaluation tools. Finally, we show that designing learning paths according to this method could also promote a more rigorous (and not only qualitative) evaluation, and then enhance both research and practice in this field. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",How to Implement Educational Robotics' Programs in Italian Schools: A Brief Guideline According to an Instructional Design Point of View.,"Ronsivalle, G. B.; Boldi, A.; Gusella, V.; Inama, C.; Carta, S."
10613773,27,10.1002/cae.22074,2,Wiley-Blackwell,"In this paper, an ultra low‐cost line following robot is presented. The robot is developed through the integration of free educational software and low cost electronics and mechanical devices with the aim of been used as a teaching and learning tool to increase the students confidence/performance and interest in engineering areas. The cost for building this robot‐based educational tool and its related activities is less than 25 USD. Students were encouraged for building its own unique designs using cardboard and open‐source software and hardware. The activities promoted the increase in knowledge and developed student's technical skills such as the use of electronic circuits and sensors, three dimension designs, learning to programming animations and microcontrollers, building self‐made structural and mechanical elements using cardboard and the use of the Bluetooth protocol to achieve the interconnection of devices through the use of an Android based Smartphone. The activities have been developed to allow students to apply and test their own ideas and concepts for solving problems through the computational thinking process and finding digital solutions through programming microcontrollers, all of them in the frame of the maker movement and the inclusion of the arts in the science, technology, engineering and mathematics (STEM) education. The results of confidence/performance and interest evaluation tests allowed to identify the main areas of gain knowledge and the increasing interest in the engineering fields presented in this work. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,An ultra‐low cost line follower robot as educational tool for teaching programming and circuit's foundations.,"Serrano Pérez, Edgar; Juárez López, Fernando"
07384602,44,10.1002/aaai.12102,2,AI Magazine,"We theorize that anticipatory thinking (AT) uses the same computational infrastructure as general cognition as described in the Common Model of Cognition. We extend the Common Model with results from research on event cognition. Using these building blocks, we present a five‐step process model of AT as realized in cognitive architecture components. We then revisit simplifying assumptions underlying our model and expand our theory in response. Finally, we make predictions that are entailed by our account of AT, focusing on how computational limits in both natural and artificial cognitive systems can impact support for AT. [ABSTRACT FROM AUTHOR] Copyright of AI Magazine is the property of AI Magazine and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",AI Magazine,A cognitive architecture theory of anticipatory thinking.,"Jones, Steven J.; Laird, John E."
07384602,44,10.1002/aaai.12100,2,AI Magazine,"Anticipatory thinking is the act of identifying problems that may arise in the future, and preparing for them in order to mitigate the risk of (or opportunity for) positive or negative impacts occurring. In this paper, we argue that a critical underlying process of anticipatory thinking is cognitive priming, where one's current thoughts influence the next without conscious intention. We make this argument in terms of two aspects of human cognition that are related to anticipatory thinking: context and creativity. We then use the parallels between context, creativity, and anticipatory thinking to support our belief that cognitive priming plays a key role in various aspects of anticipatory thinking. As part of this analysis, we also discuss its broader implications, including how it can be used to improve computational systems that do anticipatory thinking, as well as how it can be leveraged to improve anticipatory thinking in people. [ABSTRACT FROM AUTHOR] Copyright of AI Magazine is the property of AI Magazine and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",AI Magazine,The role of priming in anticipatory thinking.,"Hiatt, Laura M."
18657923,17,10.3991/ijim.v17i09.36797,9,International Journal of Interactive Mobile Technologies,"In today's digital age, it is common for people, including elementary school students, to use technology in their daily lives and show a keen interest in the digital world, particularly in games. Scratch offers these students the chance to create their own games rather than just consuming them. Additionally, it is a software that fosters the development of computational thinking. The goal of this study is to propose a teaching scenario using Scratch in primary schools, based on active pedagogical methods that prioritize the student's role in the teaching- learning process. Through this scenario, students will work in groups of three to solve problems and propose solutions using the ""trial and error"" method. As they try to detect and correct errors in their programs, they will be able to develop their problem-solving and investigative skills in a collaborative and motivating environment. Overall, the proposed scenario combines active teaching approaches with the nature of the subject matter, empowering students to take an active role in their own learning. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Interactive Mobile Technologies is the property of International Journal of Interactive Mobile Technologies and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Interactive Mobile Technologies,A Proposal of a Scenario to Integrate Active Pedagogical Approaches to Teach Scratch in Primary School.,"Chekour, Mohammed; Seghroucheni, Yassine Zaoui; Aboulkacem, Amina; Hafid, Moulay Mustapha"
20763417,13,10.3390/app13074615,7,MDPI,"ICT technologies are an integral part of today's digitized society. Therefore, it is important that children acquire ICT skills as part of 21st century skills education to prepare them for later life. Drawing on the literature, seven 21st century skills can profit from the addition of ICT skills, i.e., technical, information, communication, collaboration, critical thinking, creative, and problem-solving skills. While many efforts have been made to integrate ICT skills as part of 21st century skills education into primary and secondary school curricula, the implementation of these skills in early childhood education and care remains a challenge due to developmental concerns. This paper aims to uncover developmental antecedents for ICT 21st century skills in early childhood, mainly addressing children's cognitive development, and propose ways to implement these skills in child-friendly ways. Drawing on the literature on developmental psychology, seven cognitive developmental antecedents were identified: inductive, deductive, abductive, causal, and scientific reasoning, executive functions, and computational thinking. Moreover, five additional developmental antecedents were identified: fine motor skills, language development, self-regulation, social-emotional development, and creativity. On the backdrop of these antecedents, ways of implementing ICT skills as part of 21st century skills education in early childhood classrooms are proposed that include digital games and learning apps, collaborative play or problem-solving activities with toy robots. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),ICT Skills in the Deployment of 21st Century Skills: A (Cognitive) Developmental Perspective through Early Childhood.,"Weber, Anke Maria; Greiff, Samuel"
01678329,39,10.3233/EFI-230027,2,IOS Press,"The combination of the quantitative turn in linguistics and the emergence of text analytics has created a demand for new methodological skills among linguists and data scientists. This paper introduces KNIME as a low-code programming platform for linguists interested in learning text analytic methods, while highlighting the considerations necessary from a linguistics standpoint for data scientists. Examples from an Open Educational Resource created for the DiMPAH project are used to demonstrate KNIME's value as a low-code option for text analysis, using sentiment analysis and topic modelling as examples. The paper provides detailed step-by-step descriptions of the workflows for both methods, showcasing how these methods can be applied without writing code. The results suggest that visual or low-code programming tools are useful as an introduction for linguists and humanities scholars who wish to gain an understanding of text analytic workflows and computational thinking. However, as with more traditional programming, caution must be exercised when using methods without fully understanding them. In conclusion, KNIME is a potential avenue for innovative research and teaching computational methods to humanities scholars. [ABSTRACT FROM AUTHOR] Copyright of Education for Information is the property of IOS Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Education for Information,Learning text analytics without coding? An introduction to KNIME.,"Ihrmark, Daniel; Tyrkkö, Jukka"
18754791,14,10.1007/s12369-022-00916-8,8,Springer Nature,"A global trend towards integrating coding and robotics into school curricula has been lately taking place. Integrating coding and robotics into school curricula is an essential element for the development of computational thinking for and skills of the twenty-first century. Moreover, it could help developing cognitive skills and precisely attentional inhibition which is a component of the executive functions. Children (N = 35) aged between 9 and 11 years old completed a protocol of twelve coding and robotics sessions at a rate of three sessions per week, in groups of five. The sessions presented in an enjoyable and motivating environment gave the children the opportunity to play, tinker, create and solve problems while collaborating with each other. A repeated measures plan was used and the progress in attentional inhibition was measured by psychometric tests and by structured observations. After training phase, children exhibited a better performance (p value equal to 0.003) in attentional inhibition than after control phase (p value equal to 0.041). The significant progress revealed promising results towards the development of attentional inhibition through coding and robotics group sessions. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Social Robotics is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Social Robotics,"The Development of Attentional Inhibition Through Coding and Robotics: Associating Between Tinkering, Creating, and Problem Solving in a Group Setting.","Abou Assi, Karen"
23843004,9,,1,Korea Institute of Information & Communication Engineering,,International Conference on Future Information & Communication Engineering (ICFICE),Modularization of middle school software curriculum based on Korea National Competency Standards(NCS).,Jeongwon Lee; Semin Kim; Choongho Lee
0167739X,160,10.1016/j.future.2024.06.011,,Elsevier B.V.,"Recognized as the crown jewel of system software, Operating System (OS) is notoriously challenging to teach and learn, given its abstract concepts, broad scope, and the imperative for hands-on experience. How to cater to the keen interest in OS among students across all universities while providing a rich system software engineering experience? Engaging the OS community on campus plays a pivotal role in enhancing undergraduate education. Our institution has implemented a novel approach over the past nine years through the miniOS pilot class initiative. This program allows students enrolled in the OS course to opt into an additional, practical component where they engage in developing the OS kernel using miniOS, our teaching platform. Participants dedicate their spare time to a series of labs aimed at incrementally introducing them to miniOS, collaborate on a project to add a new functional module to miniOS, and ultimately present their work in a formal defense. This hands-on experience supplements the theoretical coursework, with the notable advantage that pilot class participants are exempt from the traditional final exam. Instead, their grade is determined by their contributions to the pilot class, with distinguished projects being integrated into the evolving miniOS kernel—a witness to the collective effort of each class. Since its inception in 2015, the miniOS pilot class has nurtured 182 undergraduates and 22 graduate students, contributing significantly to the OS community engagement on campus. Through this initiative, we have gleaned six key insights and six lessons, which we are eager to share with the broader educational community. [Display omitted] • The miniOS class integrates OS education with hands-on, project-based learning. • Over nine years, it has engaged 182 undergraduates and 22 graduate students. • It enhances skills in system software design, computational thinking, and teamwork. • Voluntary participation and mentorship foster a deeper understanding and passion for OS. [ABSTRACT FROM AUTHOR] Copyright of Future Generation Computer Systems is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Future Generation Computer Systems,Enhancing campus OS community engagement through the miniOS pilot class: A nine-year journey.,"Gu, Jianhua; Liu, Mingxuan; Zhao, Tianhai"
00189162,42,10.1109/MC.2009.334,10,IEEE,"The writer emphasizes the importance of learning the fundamental concepts of computational thinking. These concepts are integral to everyday lives and pervasive in many disciplines. Through a connection between concepts in different areas of study and computation-based reasoning, students can better understand the fundamental computing concepts. Therefore, computational thinking should be considered as important as logical reasoning and critical thinking. Examples showing the significance of computational thinking are provided.",Computer,Ubiquitous Computational Thinking.,"Henderson, Peter B."
10613773,29,10.1002/cae.22369,5,Wiley-Blackwell,"Learning to code helps children to develop an understanding of how things work. It also contributes to the development of problem‐solving skills. In this paper, we present a methodological framework with four cycles that alternate between cooperative and individual learning approaches in addition to game‐based and project‐based learning. The presented framework is suitable for deployment in primary schools, regardless of the digital competencies and programming skills of the teachers. The framework was evaluated focusing on the approach (collaborative or competitive) that is more suitable for the first cycle in the multi‐cycle scenario for learning to code from a demographic perspective (gender and urbanization), the relevancy of Bloom's taxonomy, and the achieved learning experience. Initial results confirm that this approach encourages the students to use the proposed tools for finding the solution, raising their interest and motivation for learning to code. The teachers who participated in the pilot study were satisfied with the proposed approach, both in terms of achieved learning outcomes and the level of training needed to obtain necessary teaching competencies. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,To code or not to code: Introducing coding in primary schools.,"Videnovik, Maja; Vlahu‐Gjorgievska, Elena; Trajkovik, Vladimir"
07407475,13,10.1109/MCSE.2011.5,1,IEEE,"In this article, the author reflects on the relevance of computational thinking in computing. The author emphasizes the significance of the ability to recognize and solve a problem to the various fields and disciplines, including science, military, legal profession and computing. He also notes the need to make computational thinking an essential part of education.",IEEE Design & Test of Computers,Computational Thinking Is Becoming One of the Three Rs.,"Day, Charles"
2692580X,27,,3,International Technology & Engineering Educators Association,The article offers information on pedagogical techniques developed by the Making for Mathematics and Computational Thinking (MPACT) project. Topics include the design/making cycle; the role of 3D modeling and printing; and teaching strategies. MPACT has developed and tested four making units that address grade-level standards through three modules that include increasingly open-ended making projects.,Elementary STEM Journal,Mathematics and More Through 3D Making.,"Knudsen, Jennifer; Stevens, Harriette S.; Lara-Meloy, Teresa; Rafanan, Ken"
17465702,49,,4,Oxford University Press / USA,"The article highlights a British Computer Society (BCS) Thought Leadership debate which aimed to discuss what computational thinking is and how it affects our everyday lives. One of the delegates said that teaching students and young professionals to think is more important that teaching them professionalism. According to the article, bringing out computational thinking in young people is difficult.",ITNOW,Computational thinking.,
10447318,40,10.1080/10447318.2022.2163783,10,Taylor & Francis Ltd,"In order to cultivate children's computational thinking, researchers have developed many excellent programming systems. Among them, the tangible programming systems combined with graphic output have been widely accepted because of the intuitive input method and diversified visual feedback. However, few of them support collaborative learning or programming. Little is known about children's experiences, emotional states and behaviours on collaborative programming. Motivated by this gap, we present a novel tangible and collaborative enabled programming system named Lighters, which designed for children aged 7–10 and had two types of collaboration modes (block-based and role-based). We conducted an user experiment with 24 children, and collected physiological (EDA), questionnaire, video recording and interview data for analysis. Based on our experiment results, Lighters are effective in helping children learn to program collaboratively. In addition, Lighters can mobilize children's positive emotions and enthusiasm to learn programming. Compared with block-based collaboration, role-based collaboration is more likely to stimulate children's emotional states and has a better effect on learning programming. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Human-Computer Interaction is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Human-Computer Interaction,"""Be a Lighting Programmer"": Supporting Children Collaborative Learning through Tangible Programming System.","Wang, Xinyuan; Xing, Qian; Jin, Qiao; Wang, Danli"
22969144,,10.3389/frobt.2024.1394849,,Frontiers Media S.A.,"This article discusses the integration of robotics in STEM education and the benefits it brings to students. It highlights four articles published in the Research Topic on Educational Robotics and Competitions, which cover various aspects of robotics challenges and competitions. One article focuses on how the COVID-19 pandemic led to the development of a simulated environment for the RoboCupJunior competition, allowing it to continue despite physical restrictions. Another article introduces a new competition that simulates a fully automated industrial logistics warehouse. A third article describes a robotic challenge where legged robots must climb a volcano's escarpment and collect data in a simulated volcanic eruption scenario. The final article discusses a networked virtual robotics platform that provides an accessible solution for teaching computational thinking in classrooms. These competitions and challenges motivate students, inspire researchers, and foster problem-solving skills. [Extracted from the article] Copyright of Frontiers in Robotics & AI is the property of Frontiers Media S.A. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Frontiers in Robotics & AI,Editorial: Educational robotics and competitions.,"Martins, Felipe N.; Lima, José; de Oliveira, Andre Schneider; Costa, Paulo; Eguchi, Amy"
08993408,26,10.1080/08993408.2016.1160664,1,Taylor & Francis Ltd,"Recent increased interest in computational thinking poses an important question to researchers: What are the best ways to teach fundamental computing concepts to students? Visualization is suggested as one way of supporting student learning. This mixed-method study aimed to (i) examine the effect of instruction in which students constructed visualizations on students’ programming achievement and students’ attitudes toward computer programming, and (ii) explore how this kind of instruction supports students’ learning according to their self-reported experiences in the course. The study was conducted with 58 pre-service teachers who were enrolled in their second programming class. They expect to teach information technology and computing-related courses at the primary and secondary levels. An embedded experimental model was utilized as a research design. Students in the experimental group were given instruction that required students to construct visualizations related to sorting, whereas students in the control group viewed pre-made visualizations. After the instructional intervention, eight students from each group were selected for semi-structured interviews. The results showed that the intervention based on visualization construction resulted in significantly better acquisition of sorting concepts. However, there was no significant difference between the groups with respect to students’ attitudes toward computer programming. Qualitative data analysis indicated that students in the experimental group constructed necessary abstractions through their engagement in visualization construction activities. The authors of this study argue that the students’ active engagement in the visualization construction activities explains only one side of students’ success. The other side can be explained through the instructional approach, constructionism in this case, used to design instruction. The conclusions and implications of this study can be used by researchers and instructors dealing with computational thinking. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Learning sorting algorithms through visualization construction.,"Cetin, Ibrahim; Andrews-Larson, Christine"
07356331,54,10.1177/0735633115612785,1,Sage Publications Inc.,"While pedagogical and technological affordances of three-dimensional (3D) multiuser virtual worlds in various educational disciplines are largely well-known, a study about their effect on high school students’ engagement in introductory programming courses is still lacking. This case study presents students’ opinions about their participation in a 3D multiuser game-like environment, by harnessing Second Life in combination with the two-dimensional (2D) programming environment of Scratch4SL. Following a blended instructional format (face-to-face in a computer laboratory and supplementary online courses), 56 students utilizing Scratch4SL participated in this study, with a view to reduce the “steep learning curve” created during their first-time entrance into Second Life. This study identifies Papert’s theory of Constructionism as a potentially appropriate theoretical foundation for the development of an instructional framework, in order to assist students to coordinate and manage learning materials with other teammates, using their computational thinking skills in collaborative problem-based programming tasks. The study findings based on a mixed-method research (a close-ended questionnaire and an open-ended interview) indicated the effectiveness of this “constructionist-oriented” instructional process for students’ engagement to acquire or empower social, cognitive, higher-order, and computational thinking skills. Educational implications and recommendations for future research are also discussed. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Gaming in Second Life via Scratch4SL.,"Pellas, Nikolaos; Peroutseas, Efstratios"
08993408,31,10.1080/08993408.2020.1779520,1,Taylor & Francis Ltd,"Many children's books related to computer science have been published in the last five years, creating opportunities to integrate these texts into the classroom. Determine where the children's books support an inclusive computing culture by representing people with diverse intersectional identities engaging in the computer science practices from the K-12 Computer Science Framework. We analyzed 45 picture books and graphic novels published between 2015 and 2019 targeted at K-8 students. We compiled evidence of the seven computer science practices and representation of diverse characters. Three or four practices appear in 64% of the books. The characters that engage in computing in the books are 56% female and 38% people of color. The books offer few examples of nonfictional people of color engaged in computer science, with no representation of adult males of color. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Alignment and representation in computer science: an analysis of picture books and graphic novels for K-8 students.,"Haroldson, Rachelle; Ballard, Dave"
10613773,29,10.1002/cae.22247,1,Wiley-Blackwell,"This study reports the design and implementation of a modelling-based programming instruction for science majors and its effectiveness on programming and science learning. A modelling approach was proposed to provide guidance to students in implementing solutions for scientific problems in computer programming. This modelling approach includes five stages: (1) phenomenon description, (2) data modelling, (3) algorithmic modelling, (4) coding, and (5) verification and debugging. Authentic scenarios for science learning were adopted in teaching materials and problems to inspire students to learn both the scientific and programming aspects of the underneath phenomena. An empirical experiment to examine the effectiveness of the proposed instruction was conducted in a general education course at a university, and the results showed that students who engaged more in the modelling approach performed better in both the program implementation test and their final projects. In addition, students' feedback agreed with what we had expected the modelling approach would benefit students: they could connect abstract, real-world phenomena to programming variables and logic by visualizing the phenomena in simulation and animation. Data modelling and algorithmic modelling also helped them analyze the variables in the problem space and propose a solution before coding. Because the proposed instruction provided opportunities to experience the capability of programming in solving scientific problems, high-programming-performance students also showed a greater interest in exploring science after the class. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Teaching computer programming to science majors by modelling.,"Yu-Tzu Lin; Yeh, Martin K.-C.; Hsin-Ling Hsieh"
10613773,29,10.1002/cae.22324,1,Wiley-Blackwell,"Introduction: Science, Technology, Engineering, and Mathematics (STEM) and STEAM (with A for Arts) have evolved to symbolize the renewal of science education. STEAM education offers a number of benefits, such as improved problem analysis and solving skills, as well as the development of creative abilities. Many researchers reiterate the importance of STEAM-related activities and programs, especially the integration of maker education. Despite much interest in STEAM, it is often challenging for many educators to incorporate integrated activities into their teaching practice. This paper deals with the value of STEAM integration in a methodological sense, with a focus on the maker's laboratory and physical computing, as well as the application of design thinking and computational thinking approaches. Motivation and Objectives: The goal of this study is to develop a comprehensive conceptual framework for integrated STEM curricula focusing on the following research questions: (a) how to improve daily activities of STEM education by combining the activities of different laboratories and using a design thinking approach? and (b) how to combine FabLab activities and physical computing related to teaching different aspects of computational thinking in the context of STEM? Research Methodology and Methods: As a research methodology, we implement a mixed methods strategy to combine theoretical study and empirical research based on a synthesized literature survey and the process of iterative model development based on an observational case study. We conduct a detailed case study of two applications of integrated activities based on FabLab and physical computing integration, and illustrate how design thinking can guide teachers to open up for interdisciplinary, creative, and project-based opportunities. Results and Findings: The paper provides a conceptual framework for STEM integration activities and step-by-step guidelines on how design thinking methods could could interact in practice. The implications of the results may be useful for educators seeking recommendations for the integration process, which enable educators to design hands-on activities and incorporate integrated aspect of students' STEAM learning into teaching practice. In conclusions, the authors suggest that as interdisciplinary crossroads, design thinking provides a natural bridge between subjects, and fits especially to integrate activities of the maker's labs and physical computing, focusing on the integration of computational thinking and computational making approaches within STEM education environment. The absence of a statistical evaluation, which is positioned as a further research step, may be mentioned as a limitation of the study. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Integrated activities in STEM environment: Methodology and implementation practice.,"Juškevičienė, Anita; Dagienė, Valentina; Dolgopolovas, Vladimiras"
10468781,51,10.1177/1046878119901286,4,Sage Publications Inc.,"Background: Recent years have seen the resurgence of board games designed for entertainment, and to teach or explicate real life problems. The revival of board gameplay has been discussed in mainstream media, and has drawn the attention of researchers. Yet, in the field of games studies, the conception of games as learning spaces is mostly emphasized through digital/video games. Aim: This literature review reveals the current knowledge regarding the learning potential of board games in various settings, subjects, and diverse learners. Results: Board games are spaces for mathematical learning and learning spaces that can enable the learning of various contents. Board games allow for various interactions that result in players engaging in computational thinking, teamwork, and creativity. Conclusion: The relationship between board gameplay and learning is evidenced across disciplines and countries. Board games simplify complex issues and systems, which make them appropriate to further explore learning and concepts such as motivation and computational thinking in formal and informal settings. Furthermore, there is need to expand research on learning in commercial board games. [ABSTRACT FROM AUTHOR] Copyright of Simulation & Gaming is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Simulation & Gaming,Examining Board Gameplay and Learning: A Multidisciplinary Review of Recent Research.,"Bayeck, Rebecca Yvonne"
07370024,35,10.1080/07370024.2018.1512413,3,Taylor & Francis Ltd,"Across the world, policy initiatives are being developed to engage children with computer programming and computational thinking. Diversity and inclusion has been a strong force in this agenda, but children with disabilities have largely been omitted from the conversation. Currently, there are no age appropriate tools for teaching programming concepts and computational thinking to primary school children with visual disabilities. We address this gap through presenting the design and implementation of Torino, a tangible programming language for teaching programming concepts to children age 7–11 regardless of level of vision. In this paper, we: (1) describe the design process done in conjunction with children with visual disabilities; (2) articulate the design decisions made; and (3) report insights generated from an evaluation with 10 children with mixed visual abilities that considers how children are able to trace (read) and create (write) programs with Torino. We discuss key design trade-offs: (1) readability versus extensibility; and (2) size versus liveness. We conclude by reflecting upon how an inclusive design approach shaped the final result. [ABSTRACT FROM AUTHOR] Copyright of Human-Computer Interaction is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Human-Computer Interaction,Torino: A Tangible Programming Language Inclusive of Children with Visual Disabilities.,"Morrison, Cecily; Villar, Nicolas; Thieme, Anja; Ashktorab, Zahra; Taysom, Eloise; Salandin, Oscar; Cletheroe, Daniel; Saul, Greg; Blackwell, Alan F; Edge, Darren; Grayson, Martin; Zhang, Haiyan"
07356331,58,10.1177/0735633120932871,7,Sage Publications Inc.,"The recent shift in compulsory education from ICT-focused computing curricula to informatics, digital literacy and computer science, has resulted in children being taught computing using block-based programming tools such as Scratch, with teaching that is often limited by school resources and teacher expertise. Even without these limitations, Scratch users often produce code with 'code smells' such as duplicate blocks and long scripts which impact how they understand and debug projects. These code smells can be removed using procedural abstraction, an important concept in computer science rarely taught to this age group. This article describes the design of a novel educational block-based programming game, Pirate Plunder, which concentrates on how procedural abstraction is introduced and reinforced. The article then reports an extended evaluation to measure the game's efficacy with children aged 10 and 11, finding that children who played the game were then able to use procedural abstraction in Scratch. The article then uses game analytics to explore why the game was effective and gives three recommendations for educational game design based on this research: using learning trajectories and restrictive success conditions to introduce complex content, increasing learner investment through customisable avatars and suggestions for improving the evaluations of educational games. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Designing a Programming Game to Improve Children's Procedural Abstraction Skills in Scratch.,"P. Rose, Simon; Habgood, M. P. Jacob; Jay, Tim"
08993408,27,10.1080/08993408.2017.1308651,1,Taylor & Francis Ltd,"Debugging is an over-looked component in K-12 computational thinking education. Few K-12 programming environments are designed to teach debugging, and most debugging research were conducted on college-aged students. In this paper, we presented debugging exercises to 6th–8th grade students and analyzed their problem solving behaviors in a programming game – BOTS. Apart from the perspective of prior literature, we identified student behaviors in relation to problem solving stages, and correlated these behaviors with student prior programming experience and performance. We found that in our programming game, debugging required deeper understanding than writing new codes. We also found that problem solving behaviors were significantly correlated with students’ self-explanation quality, number of code edits, and prior programming experience. This study increased our understanding of younger students’ problem solving behavior, and provided actionable suggestions to the future design of debugging exercises in BOTS and similar environments. [ABSTRACT FROM PUBLISHER] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Understanding problem solving behavior of 6–8 graders in a debugging game.,"Liu, Zhongxiu; Zhi, Rui; Hicks, Andrew; Barnes, Tiffany"
07356331,54,10.1177/0735633116642774,7,Sage Publications Inc.,"Computational thinking has been gaining new impetus in the academic community and in K-12 level education. Scratch is a visual programming environment that can be utilized to teach and learn introductory computing concepts. There are some studies investigating the effectiveness of Scratch for K-12 level education. However, studies that have been conducted at the collegiate level, especially in the context of preservice computing teacher education, are very rare. The present study aimed to investigate the effect of Scratch-based instruction on preservice teachers’ understanding of basic programming concepts and their attitudes toward programming. In the present study, a mixed method design was utilized. In the first phase of the study, the data were collected using an achievement test, a practice test, and a computer programming attitude scale. In the second phase of the study, data were collected through a semistructured interview. The results of the study indicated that preservice teachers in Scratch-based instruction had significantly better understanding of basic computing concepts. Qualitative data indicated that Scratch-based instruction was useful in constructing a more meaningful learning environment for preservice teachers. The results of this study have implications for researchers and preservice computing teacher educators when designing an introductory computing course. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Preservice Teachers’ Introduction to Computing.,"Cetin, Ibrahim"
18759521,50,10.1016/j.entcom.2024.100637,,Elsevier B.V.,"• Need of more focus on teachers in introducing coding toys in early childhood educations. • The dialogic approach is the scaffolding technique most widely applied by teachers when supporting children's play with coding toys. • Importance of working in early childhood education with coding activities. • Coding toys can foster the development of both children's cognitive skills, such as problem-solving, and socio-emotional skills, such as collaboration and communication. This paper presents a systematic literature review that aims to portray an overview of pedagogical strategies that Early Childhood Education and Care (ECEC) teachers adopt to support children's play with coding toys. In addition, the article synthesizes findings about teachers' views in relation to the use of coding toys in ECEC and describes the outputs that the existing literature identifies as children's development after play activities with coding toys. The systematic literature search was performed in accordance with the PRISMA-2020 statement, and the initial search across four databases (Eric, Scopus, Web of Science, and Academic Research Ultimate) for papers published between January 2010 and May 2022 yielded 2672 peer-reviewed articles. Following the first evaluation, the application of the inclusion and exclusion criteria resulted in a shortlist of 22 papers. The results show different strategies that the teachers can use during play activities with coding toys, assuming the roles of facilitators and mediators through collaborative work, allowing children to try and fail. Moreover, the results revealed that ECEC teachers largely hold positive and constructive attitudes towards the use of coding toys. Findings also highlight positive outcomes regarding children's development across various cognitive and socio-emotional skills such as problem solving, computational thinking and communication. As an improvement, future studies should focus on identifying appropriate pedagogies that may be applied in tandem with the technology to maximise the pedagogical benefits for the children as well as adequate training for teachers. [ABSTRACT FROM AUTHOR] Copyright of Entertainment Computing is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Entertainment Computing,"Play with Coding Toys in Early Childhood Education and Care: Teachers' Pedagogical Strategies, Views and Impact on Children's Development. A Systematic Literature Review.","Pollarolo, Enrico; Papavlasopoulou, Sofia; Granone, Francesca; Reikerås, Elin"
09515666,39,10.1007/s00146-022-01395-1,1,Springer Nature,"Algorithmic systems that provide services to people by supporting or replacing human decision-making promise greater convenience in various areas. The opacity of these applications, however, means that it is not clear how much they truly serve their users. A promising way to address the issue of possible undesired biases consists in giving users control by letting them configure a system and aligning its performance with users' own preferences. However, as the present paper argues, this form of control over an algorithmic system demands an algorithmic literacy that also entails a certain way of making oneself knowable: users must interrogate their own dispositions and see how these can be formalized such that they can be translated into the algorithmic system. This may, however, extend already existing practices through which people are monitored and probed and means that exerting such control requires users to direct a computational mode of thinking at themselves. [ABSTRACT FROM AUTHOR] Copyright of AI & Society is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",AI & Society,Challenges in enabling user control over algorithm-based services.,"König, Pascal D."
10494820,29,10.1080/10494820.2019.1636087,7,Taylor & Francis Ltd,"Recent scholarship in computer science (CS) education shifts from a focus on the technical-cognitive skills of computational thinking to the socio-cultural goal of computational participation, often illustrated as remixing popular media (e.g. music, photos, etc.) in online communities. These activities do enhance the participatory dimensions of CS, but whether they also support broadening the participation of underrepresented youth remains unclear. While online communities that are dedicated to computational participation have existed in the U.S. for over a decade, many communities of color remain underrepresented in CS disciplines. How might CS educators, researchers, and technologists promote culturally responsive forms of computational participation? To answer this question, we propose a culturally responsive framework for computational participation called generative computing. Generative computing approaches CS as a means for strengthening relationships between learning environments and local communities, leveraging culturally relevant sources of wealth generation in technology design and implementation. To explore this concept, we conducted a mixed-methods study with a cosmetology high school program that predominantly serves young African-American women. Through a series of computationally and culturally rich cosmetology projects, we tested our hypothesis that generative computing can enhance connections between Black heritage, CS, and cosmetology while supporting students' academic interests and knowledge. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Generative computing: African-American cosmetology as a link between computing education and community wealth.,"Lachney, Michael; Babbitt, William; Bennett, Audrey; Eglash, Ron"
22344772,26,10.6109/jkiice.2022.26.6.930,6,Korea Institute of Information & Communication Engineering,"The ability to use software is an essential competency in modern society. As a result, programming education is conducted from elementary school to university. In case of programming education for non-majors conducted in the liberal arts at universities, if it is conducted online using high-quality contents, problems such as the shortage of professional professor and the limitation of practice time can be solved. Also, it has the advantage of providing students with enough time to think and solve problems. In this paper, the possibility of online lectures was investigated through a survey before and after lectures in software liberal arts courses conducted online. From the results of the survey, it is judged that the goal of software education can be achieved even if software lectures are conducted online, which is to improve computational thinking and problem-solving skills. [ABSTRACT FROM AUTHOR] Copyright of Journal of the Korea Institute of Information & Communication Engineering is the property of Korea Institute of Information & Communication Engineering and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of the Korea Institute of Information & Communication Engineering,온라인 소프트웨어 교양 교육의 만족도와 효과성에 관한 연구.,최진호; 심재륜
22344772,26,10.6109/jkiice.2022.26.4.605,4,Korea Institute of Information & Communication Engineering,"Under the influence of the Fourth Industrial Revolution, there is a emphasis on capacity building based on computational thinking to foster talent for future. In Korea, SW education has been mandatory since 2018. Since 2017, research has been conducted on the definition of SW education capability and the development of diagnostic tools. At this time, the diagnostic tool for middle school has been revised and supplemented once in 2018 and is used so far. In response to the request from the field to expand the information diagnostic test for middle school to elementary school and high school, it began as one of the 2019 study on the effectiveness of SW leading schools. In this study, we develop a diagnostic tool for elementary and high school based on the diagnostic tool for middle school. Expert validity verification and preliminary inspections are carried out. Preliminary examinations will analyze the reliability, discrimination, and difficulty of the questions, and look forward to seeing the potential as a testing tool in the future. [ABSTRACT FROM AUTHOR] Copyright of Journal of the Korea Institute of Information & Communication Engineering is the property of Korea Institute of Information & Communication Engineering and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of the Korea Institute of Information & Communication Engineering,초중등학생 정보 교과 역량 검사 도구 개발.,홍지연; 박정호
21924880,9,10.3991/ijep.v9i2.9950,2,International Society of Engineering Education (IGIP),"In the present study we present a mixed reality learning environment that aims to become a creative, joyful and efficient interdisciplinary canvas for learning about history and geography and for concurrently fostering computational thinking. The environment makes use of embodied affordances and educational robotics and consists of two parts: an augmented 3D-tangible model of southern Europe with finger-based interaction and a second floor-based augmented robotics track depicting European landmarks, where students are asked to perform tasks with Mindstorms EV3 robots. The game scenario describes a treasure hunt around Europe and students swap between finger-based and robotics- based interactive surfaces in two pairs. We evaluated our intervention with pre-service teachers in six groups of three or four who played with the environment for approximately 45 minutes each. Data collection was performed through pre- and post-knowledge test, attitude questionnaire and a semi-formal group interview. The answers showed that the mixed reality environment improved motivation, engagement and enhanced their orientation around Europe's geophysical features. The robotics aspect consolidated further their computational thinking skills while being highly exciting. The proposed approach was closer to the preservice teacher's expectations and interactive experiences, exploited embodied learning opportunities and gamified the learning process. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Engineering Pedagogy is the property of International Society of Engineering Education (IGIP) and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Engineering Pedagogy,"Mixing Educational Robotics, Tangibles and Mixed Reality Environments for the Interdisciplinary Learning of Geography and History.","Xefteris, Stefanos; Palaigeorgiou, George"
03601315,97,10.1016/j.compedu.2016.03.003,,Elsevier B.V.,"Several authors and studies highlight the benefits of the integration of Computer Science into K-12 education. Applications such as Scratch have been demonstrated to be effective in educational environments. The aim of this study is to assess the use of a Visual Programming Language using Scratch in classroom practice, analyzing the outcomes and attitudes of 107 primary school students from 5th to 6th grade in five different schools in Spain. The intervention takes place in two academic years analyzing the practice of integrating coding and visual blocks programming in sciences and arts. The “Computational concepts and computational practices” dimension details a quasi-experimental approach, which showed significant improvement regarding learning programming concepts, logic, and computational practices with an active approach. The “Learning processes and coding in primary education” dimension analyzes the practice of the experimental group through questionnaires and structured observation. In this pedagogical design, students interact and create their own content related to curricular areas with several advantages, such as motivation, fun, commitment, and enthusiasm, showing improvements related to computational thinking and computational practices. Understanding of computational concepts through an active approach, Project Based Learning, usefulness, motivation, and commitment underline the importance and effectiveness of implementing a Visual Programming Language from active methodologies in primary education. Due to the aforementioned benefits and positive results obtained in this research, it is recommended to implement a Visual Programming Language in educational settings in 5th and 6th grade in primary education through a cross-curricular implementation. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Visual programming languages integrated across the curriculum in elementary school: A two year case study using “Scratch” in five schools.,"Sáez-López, José-Manuel; Román-González, Marcos; Vázquez-Cano, Esteban"
00010782,60,10.1145/3152912,12,Association for Computing Machinery,"The article discusses the role of engineering within information technology (IT) and computing. Topics include the definition of engineering in relation to computational thinking in education, the role of design in computing as a form of engineering, and distinctions between scientific and engineering ways of thinking in the context of computer science.",Communications of the ACM,The Forgotten Engineer: Engineering has been marginalized by the unhealthy belief that engineering is the application of science.,"Denning, Peter J."
02133474,12,10.17979/bac.2022.12.0.8862,,Boletin Academico: Revista de Investigacion y Architectura Contemporanea,"Sustainable design requires methods to evaluate the architectural space under the user--centred design approach. Advances in computational thinking have brought tools such as spatial syntax or visual tracking technologies that assess relational, social and cultural aspects of the built environment, but also emotional and perceptual aspects of the spatial cognition process. The relational and topological connections display the functional organization of the space, while the collection of quantitative biometric data provides assessments of the user experience. Highly useful information on architectural design, particularly in the analysis of informal architecture or vernacular architecture, informal settlements or landscape architecture. (English) [ABSTRACT FROM AUTHOR] El diseño sostenible requiere métodos de evaluación del espacio arquitectónico centrados en el usuario. Los avances de la informática y el pensamiento computacional permiten la utilización de herramientas como la sintaxis espacial o las tecnologías de seguimiento visual que valoran aspectos relacionales, sociales y culturales del entorno construido, pero también aspectos emocionales y perceptivos del proceso de cognición espacial. Las conexiones relacionales y topológicas evidencian características de la organización funcional del espacio y la recogida de datos cuantitativos biométricos en combinación con la experiencia del usuario permiten utilizar estos métodos en la investigación sobre el diseño arquitectónico, en particular, en el análisis de la denominada arquitectura informal o no convencional como la arquitectura vernácula, los asentamientos informales o la arquitectura del paisaje. (Spanish) [ABSTRACT FROM AUTHOR] Copyright of Boletín Académico: Journal of Research & Contemporary Architecture / Revista de Investigación y Architectura Contemporánea is the property of Boletin Academico: Revista de Investigacion y Architectura Contemporanea and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Boletín Académico: Journal of Research & Contemporary Architecture / Revista de Investigación y Architectura Contemporánea,De lo conductual a lo emocional: métodos gráficos de evaluación arquitectónica.,"Fernández-Álvarez, Ángel J.; López-Chao, Vicente A."
02664909,37,10.1111/jcal.12495,2,Wiley-Blackwell,"This study compares the effects of object‐oriented and robot programming activities on programming achievement, abstraction, problem solving, and motivation. In the study, two consecutive experimental cases were conducted to examine the consistency of findings. The research sample comprises 81 tenth‐grade students undergoing vocational secondary education. A total of 41 students participated in the first case that spanned 12 weeks, and 40 students participated in the second that spanned 8 weeks. After computational activities, the programming achievement scores significantly increased in all test groups. However, the achievement scores did not differ significantly between the groups. For the comparison groups, there was no statistically significant difference in the pre‐ and posttest scores of the formal and descriptive abstraction in both cases. However, a statistically significant increase was found in the formal (only Case 2) and descriptive abstraction scores of the students in the experimental groups. The abstraction results revealed a significant difference in the descriptive abstraction scores of Case 2 in favour of the experimental group. No statistically significant difference was found in the problem‐solving scores within or between groups. In both cases, the motivation scores of the experimental groups were found to be statistically higher than those of the comparison groups. Lay Description: What is already known about this topic?: Programming activities that encourage how to think rather than what to think, have the potential to be effective instructional tools for cognitive processes.Despite the increasing research trend in computer science education, especially Computational Thinking (CT), there is a lack of studies investigating abstraction.Most of the studies on CT are based on a single cross‐sectional study shaped by relatively short‐term instructional activities and narrow‐scoped computational concepts. What this paper adds?: This study examined the effects of two programming modalities on tenth‐grade students' learning, intellectual skills, and motivation.Two consecutive interventions were conducted in order to examine the consistency of the findings.Robot programming is as effective as object‐oriented programming in the acquisition of programming concepts.Robot programming enhanced students' descriptive abstraction and motivation more effectively.Programming did not lead to any significant changes in students' problem‐solving approaches to daily‐life problems. Implications for practice and/or policy: The use of manipulative robotics can enrich learning outcomes in programming education.Robotic activities support the development of descriptive abstraction skills better than object‐oriented programming.Robotic technologies have great potential to increase student motivation regardless of the novelty effect.Problems used in programming activities should be chosen more relevant to the authentic world scenarios to connect computational approaches with daily life problems.Educational robots can be used as alternative tools to embody computational concepts in programming education. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,"Comparison of object‐oriented and robot programming activities: The effects of programming modality on student achievement, abstraction, problem solving, and motivation.","Çınar, Murat; Tüzün, Hakan"
08993408,25,10.1080/08993408.2015.1033142,2,Taylor & Francis Ltd,"The focus of this research was to create and test an introductory computer science course for middle school. Titled “Foundations for Advancing Computational Thinking” (FACT), the course aims to prepare and motivate middle school learners for future engagement with algorithmic problem solving. FACT was also piloted as a seven-week course on Stanford’s OpenEdX MOOC platform for blended in-class learning. Unique aspects of FACT include balanced pedagogical designs that address the cognitive, interpersonal, and intrapersonal aspects of “deeper learning”; a focus on pedagogical strategies for mediating and assessing for transfer from block-based to text-based programming; curricular materials for remedying misperceptions of computing; and “systems of assessments” (including formative and summative quizzes and tests, directed as well as open-ended programming assignments, and a transfer test) to get a comprehensive picture of students’ deeper computational learning. Empirical investigations, accomplished over two iterations of a design-based research effort with students (aged 11–14 years) in a public school, sought to examine student understanding of algorithmic constructs, and how well students transferred this learning from Scratch to text-based languages. Changes in student perceptions of computing as a discipline were measured. Results and mixed-method analyses revealed that students in both studies (1) achieved substantial learning gains in algorithmic thinking skills, (2) were able to transfer their learning from Scratch to a text-based programming context, and (3) achieved significant growth toward a more mature understanding of computing as a discipline. Factor analyses of prior computing experience, multivariate regression analyses, and qualitative analyses of student projects and artifact-based interviews were conducted to better understand the factors affecting learning outcomes. Prior computing experiences (as measured by a pretest) and math ability were found to be strong predictors of learning outcomes. [ABSTRACT FROM PUBLISHER] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Designing for deeper learning in a blended computer science course for middle school students.,"Grover, Shuchi; Pea, Roy; Cooper, Stephen"
03601315,173,10.1016/j.compedu.2021.104287,,Elsevier B.V.,"Currently, flipped learning requires a framework that will give novices and students the ability to face the complex problems encountered in programming courses. It is necessary to design a design thinking learning framework that addresses independent learning and specific processes that will improve students' 21st-century skills. The existing literature has not implemented flipped programming courses from a design thinking perspective (Cook & Bush, 2018), which would thus be an innovative approach to designing teaching methods and investigating the effects of this framework. The purpose of this study was to develop analyze, observe, reflect, conceive, design, implement, and operate (Crawley et al., 2007) a DT-CDIO model and to investigate the relationship of the flow experience to computational thinking and cognitive load in order to understand the impact of the flow experience on a flipped programming course. The participants in this study comprised 40 pre-service education students (Male = 17; Female = 23). The partial least squares (PLS) method was used for the data analysis to test the model. This study was intended to obtain and evaluate significant differences between the students' flow experience and their computational thinking ability and cognitive load. The results indicated that the DT-CDIO pedagogy filled a long-standing gap related to a lack of reflective pedagogy and design thinking problems. The flow experience negatively impacted creativity and problem solving ability. Meanwhile, intrinsic cognitive load negatively impacted the flow experience. Germane cognitive load positively impacted the flow experience. In particular, the flow experience is a crucial factor that can be used to predict various computational thinking skills in a programming curriculum. More importantly, this study provides important insights into the implications of the DT-CDIO approach and other related factors. • This study develops a DT-CDIO method for a flipped programming course. • The flow experience is determined based on computational thinking ability and cognitive load. • The relationship between the flow experience and both cognitive load and computational thinking skills is investigated. • The flow experience is found to have a negative impact on creativity and problem solving. • Teachers can apply specific teaching methods that will improve computational thinking skills. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Investigating the impact of a flipped programming course using the DT-CDIO approach.,"Lai, Chin-Feng; Zhong, Hua-Xu; Chiu, Po-Sheng"
07407459,31,10.1109/MS.2014.128,5,IEEE,"There have been many periods in the unfolding of human history when we have asserted that it was possible to catalog all that was known or that could be known. Ignoring the pragmatic reality of trying to catalog an ever-expanding corpus, one must understand that such a task is further complicated by cultural and situational bias: what is important to know at one place and time is not necessary important in another. So it is with our present day; this raises the question, what must a functioning member of society know about computing? The Web extra at http://youtu.be/PjR6GqobTBo is an audio podcast of author Grady Booch reading his On Computing column, in which he discusses how much a functioning member of society today should know about computing. [ABSTRACT FROM PUBLISHER] Copyright of IEEE Software is the property of IEEE Computer Society and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",IEEE Software,"To Code or Not to Code, That Is the Question.","Booch, Grady"
10494820,31,10.1080/10494820.2022.2067187,10,Taylor & Francis Ltd,"The 3D game development process is significant in improving knowledge and skills, such as literacy of information technologies, computational, analytical, and algorithmic thinking, programming, and spatial abilities. Besides, the 3D game development is a difficult and complex learning process. Within this context, it was decided that teaching should be restructured to support the metacognitive strategies' use skills of students. SOLO taxonomy was used as a framework for restructuring the content of teaching. In the literature, SOLO is preferred as a solution for teaching contents, which is complex and challenging to learn. The aim of this study is to improve problem-solving skills (PSS), cognitive flexibility, meta-cognitive strategies use skills and spatial anxiety in teaching the 3D game development, supported with metacognitive strategies and restructured with SOLO. An embedded pattern is used in this study. This study showed that experimental intervention influences change in students' PSS and metacognitive strategies use skills. It is necessary to include SOLO taxonomy in content planning to increase the learning performance. It is supposed that the study results will provide an insight for implementers to design and execute difficult and complex teaching in computer science education and will assist them in developing different perspectives. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,"Investigating the effects of SOLO taxonomy with reflective practice on university students' meta-cognitive strategies, problem-solving, cognitive flexibility, spatial anxiety: an embedded mixed-method study on 3D game development.","Yıldız Durak, Hatice; Atman Uslu, Nilüfer"
02664909,39,10.1111/jcal.12838,6,Wiley-Blackwell,"Background: Several attitude scales have been developed to measure students' attitudes toward computer programming, including the prominent one developed by Cetin and Ozden. The development of these scales stemmed from the elusive nature of attitude and the lack of specific constructs to measure attitude. These instruments measure students' attitudes based on one‐dimensional perspective, thus, making it difficult to interpret the meaning of some attitude evaluations such as the meaning of neutral points in a 10‐point scale (for example). Objectives: The computer programming attitude scale was modified to measure ambivalence. The study also investigate attitude differences across demographic variables and used these variables to predict ambivalence. Methods: The study was conducted in two phases. In the first phase, the instrument was validated using exploratory factor analysis and confirmatory factor analysis. In the second phase, the revised scale was administered to another 547 students in four research universities for empirical investigation. Results: Results show that the instrument is valid and suitable for measuring students' programming attitudes. Participants' attitudes skewed toward the negative attitude dimension. Lastly, we found that both attitude and ambivalence are factors of programming experience. Conclusions: We discussed the findings, recommend the instrument to programming tutors, and strongly emphasise the evaluation of students' ambivalent attitudes. Lay Description: What is currently known: There are numerous scales developed to measure students' attitude toward computer programming, such as the computer programming attitude scale (CPAS).The development of these inventories stemmed from the elusive nature of attitude and the lack of specific construct to measure attitude.These instruments measure students' attitude based on one dimensional perspective, thus, making it difficult to interpret the meaning of some attitude evaluations such as the meaning of neutral points in a 10‐point scale (for example). What this paper adds: The present research brings a novel approach to instrument development by acknowledging the presence of attitude toward computer programming.This novel approach advances the knowledge of instrument development in the field of attitude measurement by introducing a paradigm shift from conventional attitude evaluation to a more diverse approach.The study has introduced new items to the existing CPAS, and subsequently, indicates the possibility of validating an attitude inventory using data obtained from ambivalence evaluation.By using this instrument, students' attitude is measured accurately rather than adopting the conventional measures that ignored the presence of negative and positive evaluations. Implication to practitioners: Through the findings of the study, computer science and programming educators would come to know that many positive and negative attitude elements are occasionally subsumed toward an attitude object, thereby leading to an ambivalence attitude.The instrument can be used by the practitioners to accurately measure students' positive and negative attitude toward programming across all levels of education.Using the instrument, practitioners can predict the identified attitude using wide range of variables such as gender, age, computational thinking skills, programming proficiency levels, among others. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Revising the computer programming attitude scale in the context of attitude ambivalence.,"Yusuf, Abdullahi; Noor, Norah Md"
15391523,55,10.1080/15391523.2022.2036653,5,Taylor & Francis Ltd,"The COVID-19 pandemic raised the need to examine online learning methods also in young children. This study examined elementary school children's performance and attitudes during and toward an online programming learning activity utilizing the pair-programming Agile method that may foster 21st-century skills, including collaboration and computational thinking. Forty 4th–6th grade children with basic programming knowledge of Scratch were randomly assigned to either a pair-programming or solo-programming condition. Overall, children in both conditions enjoyed the online learning activity and completed it successfully. In particular, pair-programming seemed to entail an extra benefit to girls who generally preferred working in pairs. Nevertheless, children in the pair condition took longer to complete all tasks, perceived the third task, which was completed individually, as more difficult, and were less active when their partner was more competent. Implications for post-COVID-19 learning are discussed. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Online pair-programming: elementary school children learning scratch together online.,"Bodaker, Liat; Rosenberg-Kima, Rinat B."
22414487,11,10.48084/etasr.4249,4,"Engineering, Technology & Applied Science Research","In recent years we have observed a clear trend for the transformation and evolution of teaching practices using Information and Communication Technologies (ICT) and in particular educational robotics. As modern society gives great importance to scientific and technological literacy and new technologies, the educational process must play a central role in the development of the respective skills. Thus, the training of future teachers in corresponding fields is especially important. In this paper, we present the curriculum design of a course named ""S.T.E.A.M Teaching Scenarios using Educational Robotics"" implemented for undergraduate pre-service teachers at the Elementary Education Department of the University of Western Macedonia in Florina, Greece. The objectives of the course include the development of critical and computational thinking, familiarity with robots, and the process of their integration in curricula focusing on interdisciplinary practices facilitated by embodied learning affordances. [ABSTRACT FROM AUTHOR] Copyright of Engineering, Technology & Applied Science Research is the property of Engineering, Technology & Applied Science Research and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Engineering, Technology & Applied Science Research",Developing STEAM Educational Scenarios in Pedagogical Studies using Robotics.,"Xefteris, Stefanos"
23448652,9,10.17081/invinno.9.3.5546,,Universidad Simon Bolivar,"Objective: To identify research works focused on MOOCs K-12 or STEAM, focused on the potential of education environments, reshaping the current educational framework in secondary education. Methodology: Equations were defined to search for articles published in conferences and journals using bibliographic databases, which allowed subtracting the articles to build the corpus of references. Subsequently, the most significant investigations for the development of the systematic review are analyzed and synthesized. Results: This review will identify trends, challenges, and opportunities on MOOC K-12 or STEAM, identifying the implementations of courses in computer science or computational thinking in education. This type of initiative has obtained favorable results since the number of students who select computer programming as a fundamental axis in the national exam for higher education has increased. Conclusions: Most of the research has focused on incorporating programming with complementary courses offered optionally in secondary education, with a combined approach, that is, traditional classes are carried out with the support of MOOCs. Most MOOCs for secondary education have explicitly been implemented to meet the needs of secondary education teachers and students to enhance and support the curriculum and motivate students as future active members in creating technology. (English) [ABSTRACT FROM AUTHOR] Objetivo: Identificar los trabajos de investigación centrados en los MOOC K-12 o STEAM, enfocados en el potencial de los entornos de educación, remodelando el marco educativo actual en la educación secundaria. Metodología: Se definieron ecuaciones para realizar las búsquedas de articulos publicados en conferencias y revistas mediante bases de datos bibliográficas, que permitieron sustraer los articulos para construir el corpus de referencias. Posteriormente, se analizan y sintetizan las investigaciones más significativas para el desarrollo de la revisión sistemática. Resultados: Esta revisión permitió identificar las tendencias, desafíos y oportunidades sobre MOOC K-12 o STEAM, identificando las implementaciones de cursos de ciencias de computación o pensamiento computacional en educación secundaria. Este tipo de iniciativas han obtenido resultados positivos, puesto que se han incrementado el número de estudiantes que seleccionan la programación informática como eje fundamental en el examen nacional para educación superior. Conclusiones: Las investigaciones se han centrado en su mayoría en la incorporación de la programación con cursos complementarios ofertados de forma opcional en educación secundaria, con un enfoque combinado, es decir, se llevan a cabo clases tradicionales con el apoyo de los MOOC. La gran mayoría de los MOOC para educación secundaria se han implementado específicamente para satisfacer las necesidades de los docentes y estudiantes de educación secundaria, con el fin de mejorar y apoyar el plan de estudios, y motivar a los estudiantes como futuros miembros activos en la creación de tecnología. (Spanish) [ABSTRACT FROM AUTHOR] Copyright of Investigación e Innovación en Ingenierías is the property of Universidad Simon Bolivar and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Investigación e Innovación en Ingenierías,Revisión sistemática de literatura: MOOC K-12 y STEAM.,"Leytón Yela, Ginna Viviana; Bucheli Guerrero, Víctor Andrés; Ordoñez Erazo, Hugo Armando"
23345837,31,10.1002/j.2334-5837.2021.00877.x,1,Wiley-Blackwell,"Today's systems are continuing to increase in complexity, and employers have placed a premium on critical and systems thinking skills. The World Economic Forum (WEF) reports that an increasing share of jobs are focused more heavily on soft skills or a combination of soft and technical skills. The WEF 5‐year survey of most desired job skills highlight the growing focus on the cognitive and relationship‐building aspects of the future workspace. ""Complex Problem Solving"" has topped the list in both the 2015 and 2020 reports. This paper consolidates and proposes a common framework for lifelong learning in the engineering domain, targeted at practical tools that help engineers solve complex problems, think and learn more holistically, and apply that learning to team leadership. Although the work has been focused on engineering roles, it may be generally applied to any domain where complex problem solving is at a premium. The framework identifies five complex problem‐solving competency sets: sensemaking, adaptive and computational thinking, a design mindset, system architecting and communicating, and leading teams through cycles of learning. These competencies are developed through the experience of a learning infrastructure which integrates learning with the work do be done, through facilitating learning and performance in systems thinking, team leadership and personal learning power and self‐leadership. This paper presents the framework, the background research that led to its development, and how it might be delivered through teaching and mentoring on complex projects. [ABSTRACT FROM AUTHOR] Copyright of Incose International Symposium is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Incose International Symposium,The Evolution of HELIX: A Competency Model for Complex Problem Solving.,"McDermott, Tom; Hutchison, Nicole; Crick, Ruth"
,,10.1145/3373625.3417998,22,Association for Computing Machinery,"With an increase in the use of block-based programming environments in k-12 curriculum, the need for accessibility exists in order to serve all students. Accessible block-based systems are in their infancy. Such systems would provide students with visual impairments the opportunity to learn programming and take part in computational thinking activities using the same systems that are found appealing to most sighted learners. However, with the presence of these systems little is known about their long-term use in the educational milieu. As a result, we conducted a survey with twelve teachers of students with visual impairments to learn about the use of these systems in teaching their students and to understand the barriers that students face in the learning process. Our study reveals that only one block-based programming environment is common among teachers and that several challenges exist. These challenges range from limited learners' preparedness through difficulties editing and navigating code, to ineffective system feedback. [ABSTRACT FROM AUTHOR] Copyright of ACM SIGACCESS Conference on Computers & Accessibility is the property of Association for Computing Machinery and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ACM SIGACCESS Conference on Computers & Accessibility,Investigating Challenges Faced by Learners with Visual Impairments using Block-Based Programming/Hybrid Environments.,"Mountapmbeme, Aboubakar; Ludi, Stephanie"
22111662,23,10.1007/s10758-018-9358-z,2,Springer Nature,"The development of elementary-aged students’ STEM and computer science (CS) literacy is critical in this evolving technological landscape, thus, promoting success for college, career, and STEM/CS professional paths. Research has suggested that elementary-aged students need developmentally appropriate STEM integrated opportunities in the classroom; however, little is known about the potential impact of CS programming and how these opportunities engender positive perceptions, foster confidence, and promote perseverance to nurture students’ early career aspirations related to STEM/CS. The main purpose of this mixed-method study was to examine elementary-aged students’ (N = 132) perceptions of STEM, career choices, and effects from pre- to post-test intervention of CS lessons (N = 183) over a three-month period. Findings included positive and significant changes from students’ pre- to post-tests as well as augmented themes from 52 student interviews to represent increased enjoyment of CS lessons, early exposure, and its benefits for learning to future careers. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",Computer Programming Effects in Elementary: Perceptions and Career Aspirations in STEM.,"Tran, Yune"
02664909,34,10.1111/jcal.12219,2,Wiley-Blackwell,"Abstract: Educational robotics programs offer an engaging opportunity to potentially teach core computer science concepts and practices in K–12 classrooms. Here, we test the effects of units with different programming content within a virtual robotics context on both learning gains and motivational changes in middle school (6th–8th grade) robotics classrooms. Significant learning gains were found overall, particularly for groups introduced to content involving program flow, the structural logic of program execution. Relative gains for these groups were particularly high on items that require the transfer of knowledge to dissimilar contexts. Reaching units that included program flow content was also associated with greater maintenance of programming interest when compared with other units. Therefore, our results suggest that explicit instruction in the structural logic of programming may develop deeper transferrable programming knowledge and prevent declines in some motivational factors. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Attending to structural programming features predicts differences in learning and motivation.,"Witherspoon, Eben B.; Schunn, Christian D.; Higashi, Ross M.; Shoop, Robin"
07475632,80,10.1016/j.chb.2017.09.029,,Elsevier B.V.,"Today it is almost impossible to spend a single day without depending on an information system, a computer or any other form of computation. Though the starting barrier is low, fundamental concepts are still required in order to manage the technicalities of the engineering environment and everyday computational systems. In 1967, Logo proposed to teach abstract programming concepts by providing a set of functions that had intuitive, visible effects over a robotic Turtle . LOGO was a success, but the robots quickly migrated into computer simulations. From LOGO, many followed. Scratch and Lego Mindstorm are some of the most notorious examples. Both introduced graphical block-based programming interfaces. We propose to bring back the powerful ideas behind LOGO by updating it with state of the art technologies. Phogo combines Python, Arduino and 3D printing into a low cost robot that is easy to build and control. The robot has a pen to draw shapes and can be commanded from a computer via a wireless link that is transparent to the students. The use of a physical robot can make programming more accessible for students with disabilities. The open and maker philosophies behind Phogo makes it more interesting as students will be able to access and study the electronic components. The textual programing language can be a long life companion for the students. In this work we discuss LOGO and other projects inspired by it, and we also share the methodology and design decisions behind Phogo, the results of its application in a workshop and the improvements we are currently developing. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,"Phogo: A low cost, free and “maker” revisit to Logo.","Molins-Ruano, Pablo; Gonzalez-Sacristan, Carlos; Garcia-Saura, Carlos"
00010782,65,10.1145/3495561,1,Association for Computing Machinery,"The article questions the utility of computer science education in promoting or diminishing opportunity and social inequality. The author considers the inequities allegedly inherent in college preparation as well as in the mastery of ""foundational concepts"". Definitions of computational thinking for mathematics and science education are criticized and options for computer science education approaches are outlined.",Communications of the ACM,"Is Higher Education an Engine of Opportunity, or a Perpetuator of Privilege?","Guzdial, Mark"
10494820,28,10.1080/10494820.2019.1612446,3,Taylor & Francis Ltd,"Portfolios have recently gained traction within computer science education as a way to assess students' computational thinking and practices. Whereas traditional assessments such as exams tend to capture learning within artificial settings at a single point in time, portfolios provide more authentic opportunities to document a trajectory of students' learning and practices in everyday contexts. Furthermore, because communication itself has been defined as an important computational thinking practice, portfolios give students a place to practice this skill in the classroom. In this study, we report on the implementation of a digital portfolio with a class of 21 high school students used to capture the process of creating of an electronic textile mural project. While students' understanding of computational concepts were only partially captured within the portfolios, their engagements with computational practices – such as debugging and iteration – were better highlighted. Much of this was due to the students' existing communicative strategies themselves, both in terms of how precise they were in describing issues, as well as how they leveraged images and code to explain their process. Recommendations for designing more effective portfolio assessments are discussed, which include greater emphasis on creating shared classroom discourse, and leveraging students' existing experiences with multimedia. [ABSTRACT FROM AUTHOR] Copyright of Interactive Learning Environments is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interactive Learning Environments,Communicating computational concepts and practices within high school students' portfolios of making electronic textiles.,"Lui, Debora; Walker, Justice T.; Hanna, Sheri; Kafai, Yasmin B.; Fields, Deborah; Jayathirtha, Gayithri"
10024956,38,10.16791/j.cnki.sjg.2021.06.042,6,Experimental Technology & Management Editorial Office,"The practical teaching is reformed and practiced based on computer thinking, engineering thinking and innovative thinking. Through the construction of computational thinking to set up the basic curriculum group, reform of practical teaching methods, etc., the model to train students’ computational and their ability to analyze problems, abstract problems and solve problems is established. Through the construction of “Five-together” university and enterprise deep cooperation model and based on the “Introducing into and sending out” practice, students’ engineering thinking is improved, and their engineering practical ability is trained. Through the establishment of a diversified, multi-level and progressive innovation practice teaching system, students' innovation consciousness can be stimulated and their innovation practice ability can be cultivated. The reform practice has proved that the practice teaching reform based on the cultivation of mixed thinking ability is helpful to improve students’ basic practice ability, engineering practice ability and innovative practice ability, and the effect of practice teaching is remarkable. (English) [ABSTRACT FROM AUTHOR] 以计算思维、工程思维、创新思维培养为切入点，对实践教学进行了改革与实践。通过建设计算思 维培养基础课程群、改革实践教学方法等建立学生的计算思维，培养学生分析问题、抽象问题模型及解决问 题的能力；通过构建“五共”校企深度合作模式、基于“引进来、送出去”方式建立学生的工程思维，培养 学生的工程实践能力；通过建立多元化、多层次、递进式的创新实践教学体系激发学生的创新意识，培养学 生的创新实践能力。改革实践证明，基于混合思维能力培养的实践教学改革有助于提高学生的基础实践能力、 工程实践能力和创新实践能力，实践教学效果显著. (Chinese) [ABSTRACT FROM AUTHOR] Copyright of Experimental Technology & Management is the property of Experimental Technology & Management Editorial Office and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Experimental Technology & Management,基于混合思维能力培养的计算机类 实践教学改革与实施.,张其亮; 陈永生; 杜晓明
10009000,26,10.1007/s11390-011-1161-4,4,Springer Nature,"This article presents an observation resulted from the six-year Sino-USA computer science leadership exchanges: the trend towards the emergence of a new computer science that is more universal and fundamental than that in the past. In the 21st century, the field of computer science is experiencing fundamental transformations, from its scope, objects of study, basic metrics, main abstractions, fundamental principles, to its relationship to other sciences and to the human society, while inheriting the basic way of thinking and time-tested body of knowledge accumulated through the past 50 years. We discuss three new concepts related to this trend. They are computational lens and computational thinking articulated by US scientists, and ternary computing for the masses proposed by Chinese scientists. We review the salient features of these concepts, discuss their impact, and summarize future research directions. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Science & Technology (10009000) is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Science & Technology (10009000),Three New Concepts of Future Computer Science.,Zhi-Wei Xu; Dan-Dan Tu
07356331,61,10.1177/07356331221133560,5,Sage Publications Inc.,"Reintroducing computer science (CS) education in K–12 schools to promote computational thinking (CT) has attracted significant attention among scholars and educators. Among the several essential components included in CS and CT education, program debugging is an indispensable skill. However, debugging teaching has often been overlooked in K–12 contexts, and relevant empirical studies are lacking in the literature. Moreover, novices generally have poor performance in domain knowledge and strategic knowledge concerning debugging. They also consistently experience a high cognitive burden in debugging learning. To address these gaps, we developed a flipped systematic debugging approach combined with a systematic debugging process (SDP) and the modeling method. A quasi-experimental study was conducted to explore the effectiveness of this flipped systematic debugging approach, in which 83 fifth-grade students attended the flipped debugging training lessons with the SDP–modeling method, and 75 fifth-grade students attended the unassisted flipped debugging training lessons without the SDP–modeling method. The results indicated that flipped debugging training using the SDP–modeling method improved students' debugging skills. The results from the questionnaire showed that the proposed teaching approach increased the students' investment in germane cognitive load by promoting schema construction. It also helped reduce students' intrinsic and extraneous cognitive load in learning. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,A Flipped Systematic Debugging Approach to Enhance Elementary Students' Program Debugging Performance and Optimize Cognitive Load.,"Gao, Xuemin; Hew, Khe Foon"
09505849,170,10.1016/j.infsof.2024.107434,,Elsevier B.V.,"Software Engineering is dedicated to the systematic and efficient development of software, which necessitates the active participation of all team members and a recognition of their unique skills and abilities, including those with autism spectrum disorders (ASD). The inclusion of individuals with ASD presents new perspectives, yet there is a lack of systematic evidence regarding the primary obstacles and potential benefits associated with their inclusion. This paper aims to identify, characterize, and describe barriers, facilitators, and methodological proposals described by the community to include individuals with ASD in the discipline of Software Engineering. We conducted a comprehensive systematic multivocal mapping study to evaluate the existing evidence on the inclusion of individuals with ASD in Software Engineering. We obtained 34 primary studies from which we identified the main facilitators of motivation to learn new skills, attention to detail, and the ability to report and visualize patterns. In contrast, the main barriers detected were communication, a lack of neurodivergent computational thinking, and sensory integration. Additionally, we identified and classified four categories of proposals that allowed the inclusion of individuals with ASD: (i) using virtual reality, (ii) creating more inclusive workspaces, (iii) encouraging neurodivergent computational thinking, and (iv) improving social skills. This study identifies the principal elements that ought to be taken into consideration when allocating tasks and roles to individuals with ASD in software development. [Display omitted] • Few studies discuss facilitators to include individuals with Autism Spectrum Disorder. • Communication is key to the inclusion of individuals with Autism Spectrum Disorder. • Immersive reality and neurodivergent computational thinking are inclusion options. [ABSTRACT FROM AUTHOR] Copyright of Information & Software Technology is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Information & Software Technology,Inclusion of individuals with autism spectrum disorder in Software Engineering.,"Márquez, Gastón; Pacheco, Michelle; Astudillo, Hernán; Taramasco, Carla; Calvo, Esteban"
00010782,59,10.1145/2964342,8,Association for Computing Machinery,"The article discusses the work of computer scientist John H. Holland in relation to adaptive computation, multidisciplinary research, and computational thinking. Topics include Holland's development of adaptive search, the use of internal models in Holland's theory of adaptive systems, and Holland's work on explanatory modeling. Universal properties of complex adaptive systems are also addressed.",Communications of the ACM,Adaptive Computation: The Multidisciplinary Legacy of John H. Holland.,"FORREST, STEPHANIE; MITCHELL, MELANIE"
20763417,11,10.3390/app11010341,1,MDPI,"Software programming is one of the key abilities for the development of Computational Thinking (CT) skills in Science, Technology, Engineering and Mathematics (STEM). However, specific software tools to emulate realistic scenarios are required for effective teaching. Unfortunately, these tools have some limitations in educational environments due to the need of an adequate configuration and orchestration, which usually assumes an unaffordable work overload for teachers and is inaccessible for students outside the laboratories. To mitigate the aforementioned limitations, we rely on cloud solutions that automate the process of orchestration and configuration of software tools on top of cloud computing infrastructures. This way, the paper presents ACTaaS as a cloud-based educational resource that deploys and orchestrates a whole realistic software programming environment. ACTaaS provides a simple, fast and automatic way to set up a professional integrated environment without involving an overload to the teacher, and it provides an ubiquitous access to the environment. The solution has been tested in a pilot group of 28 students. Currently, there is no tool like ACTaaS that allows such a high grade of automation for the deployment of software production environments focused on educational activities supporting a wide range of cloud providers. Preliminary results through a pilot group predict its effectiveness due to the efficiency to set up a class environment in minutes without overloading the teachers, and providing ubiquitous access to students. In addition, the first student opinions about the experience were greatly positive. [ABSTRACT FROM AUTHOR] Copyright of Applied Sciences (2076-3417) is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Applied Sciences (2076-3417),A Pilot Experience with Software Programming Environments as a Service for Teaching Activities.,"Calatrava Arroyo, Amanda; Ramos Montes, Marcos; Segrelles Quilis, J. Damian"
00104787,,,,"TechTarget, Inc.","The article presents the views expressed by the British Computer Society Thought Leadership debate participants on computational thinking. One attendee said that computational thinking should be seen as being a common language for solving problems, one which helps iron out the problems from abstraction; determining what it is that can be computed. Others wondered if computational thinking might be understood as a form of modeling, and, if so, whether the focus was on numerical modeling or symbolic modeling. Some were doubtful as to whether computational thinking is a practice restricted to computer science. Many felt that information technology (IT) is taken for granted by the general public, which means that computational thinking is not appreciated as much as it should be.",Computer Weekly,Computational thinking: a discipline with uses outside the computer lab?,"Richards, Justin"
00010782,61,10.1145/3199603,5,Association for Computing Machinery,"The article discusses K-12 computer science education (CSed) in Switzerland in relation to mandatory pre-service teacher computer science education. Topics include the use of computational thinking tools to make programming accessible to students, the role of computer science in teacher professional development, and the development of a Scalable Game Design course in Switzerland and at the University of Colorado.",Communications of the ACM,Scale or Fail: Moving beyond self-selected computer science education in Switzerland.,"Repenning, Alexander"
13807501,79,10.1007/s11042-020-09202-z,45/46,Springer Nature,"Coding skills are becoming more and more important in today's world, especially within the context of the fourth industrial revolution. They also help practice other 21 century skills such as computational thinking, problem solving and teamwork. Unfortunately, learning how to program is tough and can be also frustrating for beginner students. In this work we introduce RoboTIC, a serious game based on gamification and Augmented Reality that facilitates the learning of programming to students in lower levels of the education system by using a novel set of visual metaphors derived from a notation of roads and traffic signs. The architecture that supports RoboTIC has been designed to allow the integration of multimedia components when new programming concepts and techniques must be addressed and to add game levels that enable students to learn incrementally. Experiments have been conducted in a youth center with children who do not have coding skills at all to demonstrate the feasibility of the proposal. The results show promising conclusions in terms of children's motivation and interest in programming. [ABSTRACT FROM AUTHOR] Copyright of Multimedia Tools & Applications is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Multimedia Tools & Applications,RoboTIC: A serious game based on augmented reality for learning programming.,"Schez-Sobrino, Santiago; Vallejo, David; Glez-Morcillo, Carlos; Redondo, Miguel Á.; Castro-Schez, José Jesús"
18257321,20,10.13128/form-10038,3,Firenze University Press,"It is an increasingly common practice in schools to propose to children and young people educational activities based on the use of robots to introduce topics such as digital competences, computational thinking and artificial intelligence (AI) education. Although, the potentials of educational robotics are many, we must also ask ourselves what it means today, for a teacher to educate to AI. In this regard, this contribution reports the most significant aspects that emerged from a first exploratory survey aimed at acquiring specific information on the use of robots in relation to AI education. The survey was carried out on a small sample of privileged witnesses belonging to the school. In the face of a recognized impact of robotics experiences on learning, specific attention emerges to what can be done to educate the new generations to be future digital citizens, aware of possible implications of AI in our lives. (English) [ABSTRACT FROM AUTHOR] È pratica sempre più diffusa, in ambito scolastico, quella di proporre a bambini e ragazzi attività educative basate sull’utilizzo di robot per introdurre il tema delle competenze digitali, del pensiero computazionale e dell’educazione all’intelligenza artificiale (IA). Sebbene le potenzialità della robotica educativa siano oggi molte, occorre anche chiedersi cosa significa per un insegnante educare all’IA. A questo riguardo, il presente contributo riporta gli aspetti più significativi emersi da una prima indagine esplorativa finalizzata ad acquisire specifiche informazioni sull’utilizzo dei robot in riferimento all’educazione all’IA. L’indagine è stata compiuta su un campione ristretto di testimoni privilegiati appartenenti all’ambito della scuola. A fronte di un riconosciuto impatto delle esperienze di robotica sull’apprendimento, emerge un’attenzione specifica a quello che si può fare per educare le nuove generazioni ad essere futuri cittadini digitali, consapevoli delle possibili implicazioni dell’IA nelle nostre vite. (Italian) [ABSTRACT FROM AUTHOR] Copyright of Form@re is the property of Firenze University Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Form@re,Robotica educativa ed educazione all’intelligenza artificiale: quali priorità per la scuola?,"Ferrari, Luca; Macauda, Anita; Soriani, Alessandro; Russo, Veronica"
03601315,148,10.1016/j.compedu.2020.103807,,Elsevier B.V.,"Computational thinking (CT) and the coding element of it are progressively entering in the primary school curriculum worldwide. Yet, little is known about the effects of these skills on children's cognitive development. In a cluster-randomized controlled trial, we examined how 1st-grade children's gains in coding skills that follow instructional intervention transfer to two important executive functions (EFs): planning and response inhibition. One-hundred seventy-nine (179) first graders from 5 schools and 10 class groups, with no prior experience of coding, were randomly assigned to an experimental (coding, 5 classes) or control (standard STEM, 5 classes) instructional condition. The experimental intervention involved 8 h of coding activities (two weekly lessons for 4 weeks), through the Code.org platform. Children in the control group were exposed to standard STEM instruction. Four coding tasks drawn from Code.org, two standardized planning tasks (Elithorn maze test and Tower of London, ToL, test) and two standardized response inhibition tasks (NEPSY-II inhibition subtest and numerical Stroop), were used to assess children's skills at the pretest and posttest (after the instructional intervention). To measure retention, the same skills were also assessed for 44 children from the experimental group 5 weeks from the posttest (follow up). The results show that practice with coding through Code.org not only improved measurably children's ability to solve coding problems, but also their EFs, increasing the time children spent planning, their ability to solve standardized planning tasks, and to inhibit prepotent responses. Such findings add to the still limited literature on the cognitive effects of coding, deepening our understanding of the positive implications of introducing Computational Thinking early in the school curriculum. • Eight hours practice with Code.org are sufficient to support the development of coding skills in 6-year old children. • Gains in coding skills are transferred to children's executive functions: planning and response inhibition. • Transfer of coding effects is more evident for planning than for response inhibition. • The use of different cognitive tasks to assess the degree of cognitive transfer is important. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,The effects of coding on children's planning and inhibition skills.,"Arfé, Barbara; Vardanega, Tullio; Ronconi, Lucia"
01641212,157,10.1016/j.jss.2019.110401,,Elsevier B.V.,"• Outline and theorization of ""Cooperative Thinking"" extending Computational Thinking with Agile principles. • Educational recommendations to address Cooperative Thinking. • Assessment and validation of Cooperative Thinking using a Partial Least Square Structural Equation Modeling approach. Computational Thinking (CT) and Agile Values (AV) focus respectively on the individual capability to think algorithmically, and on the principles of collaborative software development. Although these two dimensions of software engineering education complement each other, very few studies explored their interaction. In this paper we use an exploratory Structural Equation Modeling technique to introduce and analyze Cooperative Thinking (CooT), a model of team-based computational problem solving. We ground our model on the existing literature and validate it through Partial Least Square modeling. Cooperative Thinking is new competence which aim is to support cooperative problem solving of technical contents suitable to deal with complex software engineering problems. This article suggests to tackle the CooT construct as an education goal, to train students of software development to improve both their individual and teaming performances. [ABSTRACT FROM AUTHOR] Copyright of Journal of Systems & Software is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Systems & Software,Cooperative Thinking: Analyzing a new framework for software engineering education.,"Ciancarini, Paolo; Missiroli, Marcello; Russo, Daniel"
03401200,114,10.1007/s00422-020-00830-0,2,Springer Nature,"Autonomous motivated spatial navigation in animals or robots requires the association between spatial location and value. Hippocampal place cells are involved in goal-directed spatial navigation and the consolidation of spatial memories. Recently, Gauthier and Tank (Neuron 99(1):179–193, 2018. 10.1016/j.neuron.2018.06.008) have identified a subpopulation of hippocampal cells selectively activated in relation to rewarded goals. However, the relationship between these cells' spiking activity and goal representation remains elusive. We analyzed data from experiments in which rats underwent five consecutive tasks in which reward locations and spatial context were manipulated. We found CA1 populations with properties continuously ranging from place cells to reward cells. Specifically, we found typical place cells insensitive to reward locations, reward cells that only fired at correct rewarded feeders in each task regardless of context, and ""hybrid cells"" that responded to spatial locations and change of reward locations. Reward cells responded mostly to the reward delivery rather than to its expectation. In addition, we found a small group of neurons that transitioned between place and reward cells properties within the 5-task session. We conclude that some pyramidal cells (if not all) integrate both spatial and reward inputs to various degrees. These results provide insights into the integrative coding properties of CA1 pyramidal cells, focusing on their abilities to carry both spatial and reward information in a mixed and plastic manner. This conjunctive coding property prompts a re-thinking of current computational models of spatial navigation in which hippocampal spatial and subcortical value representations are independent. [ABSTRACT FROM AUTHOR] Copyright of Biological Cybernetics is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Biological Cybernetics,Conjunctive reward–place coding properties of dorsal distal CA1 hippocampus cells.,"Xiao, Zhuocheng; Lin, Kevin; Fellous, Jean-Marc"
18234208,19,10.22452/jdbe.vol19no3.1,3,"University of Malaya, Faculty of Built Environment","This paper presents creative geometry research focusing on computational design exploration to improve the eco-performance of concrete blocks used as a building material. To provide a positive ecoperformance, an optimized concrete block was designed to be more efficient than a conventional concrete block with respect to the materials used and the space occupied during storage and transport. The results prove that the form is cost-effective and that the environmental impact caused by associated production and distribution processes would be comparatively reduced. Computational research based on parametric design thinking enabled the relationship between form properties as selected design parameters to be evaluated, with the aim of ensuring that efficiency does not compromise technical requirements and that the overall functional role of the concrete block is appropriate when used as a constituent material in nonstructural wall construction. Volumetric-based measurements were employed using Rhinoceros modeling software with a Grasshopper plug-in to assess the eco-performance of the concrete block based on selected indicators. The results show that the folded S-shape concrete block with a width of 40 mm consumes only 43% of the main material and 14% of the auxiliary material relative to a conventional concrete block with a width of 100 mm. When arranged horizontally, a standard container can hold 60% more of the optimized concrete block units compared to conventional ones. Additional findings were also made that suggest future research potential, including use of the concrete blocks as building elements in passive design strategies. [ABSTRACT FROM AUTHOR] Copyright of Journal of Design & Built Environment is the property of University of Malaya, Faculty of Built Environment and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Design & Built Environment,Increasing Eco-Performance of Concrete Blocks through Computational Design Form Optimization.,"Pradipto, Eugenius; Afif, Nabila"
08993408,26,10.1080/08993408.2016.1231784,02-mar,Taylor & Francis Ltd,"This paper describes the development, validation, and uses of the Collaborative Computing Observation Instrument (C-COI), a web-based analysis instrument that classifies individual and/or collaborative behaviors of students during computing problem-solving (e.g. coding, programming). The C-COI analyzes data gathered through video and audio screen recording software that captures students’ computer screens as they program, and their conversations with their peers or adults. The instrument allows researchers to organize and quantify these data to track behavioral patterns that could be further analyzed for deeper understanding of persistence and/or collaborative interactions. The article provides a rationale for the C-COI including the development of a theoretical framework for measuring collaborative interactions in computer-mediated environments. This theoretical framework relied on the computer-supported collaborative learning literature related to adaptive help seeking, the joint problem-solving space in which collaborative computing occurs, and conversations related to outcomes and products of computational activities. Instrument development and validation also included ongoing advisory board feedback from experts in computer science, collaborative learning, and K-12 computing as well as classroom observations to test out the constructs in the C-COI. These processes resulted in an instrument with rigorous validation procedures and a high inter-rater reliability. [ABSTRACT FROM PUBLISHER] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Assessing collaborative computing: development of the Collaborative-Computing Observation Instrument (C-COI).,"Israel, Maya; Wherfel, Quentin M.; Shehab, Saadeddine; Ramos, Evan A.; Metzger, Adam; Reese, George C."
09218890,75,10.1016/j.robot.2015.05.013,,Elsevier B.V.,"RoboCupJunior is an international educational robotics initiative, aiming to promote STEM content and skill learning among participating youth through educational robotics competition inaugurated in 2000. What makes RoboCupJunior quite unique is its relationship with RoboCup which aims to promote robotics and AI research, by offering a publicly appealing, but formidable challenge including development of soccer robots, search and rescue robots, and robots functions at home and at work. This paper introduces a case of RoboCupJunior and the effectiveness of its practice for enhancing learning of STEM contents and skills for innovation and creativity among participating students. It presents the survey results from one of the World Championships held in 2012, the anecdotal and personal account of participating US students on their learning experience from their participation in 2013 World Championship, and participating students’ technological and innovative contributions to highlight the impacts RoboCupJunior has had through over a decade of its practice. [ABSTRACT FROM AUTHOR] Copyright of Robotics & Autonomous Systems is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Robotics & Autonomous Systems,"RoboCupJunior for promoting STEM education, 21st century skills, and technological advancement through robotics competition.","Eguchi, Amy"
09535438,27,10.1093/iwc/iwu022,6,Oxford University Press / USA,"Although there have been many advances in end-user programming environments, recent empirical studies report that programming still remains difficult for end-users. We hypothesize that one reason may be lack of effective support for helping end-user programmers problem-solve their own way around barriers they encounter. Therefore, in this paper, we describe the Idea Garden, a concept designed to help end-user programmers generate new ideas and problem-solve when they run into barriers. The Idea Garden has its roots in Minimalist Learning Theory and problem-solving theories. Our proof-of-concept prototype of the Idea Garden concept in the CoScripter end-user programming environment currently targets three barriers reported in end-user programming literature. It does so using an integrated, just-in-time combination of scaffolding for problem-solving strategies, for design patterns and for programming concepts. Our empirical results showed that this approach helped end-user programmers overcome all three types of barriers that our prototype targeted. [ABSTRACT FROM AUTHOR] Copyright of Interacting with Computers is the property of Oxford University Press / USA and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Interacting with Computers,Idea Garden: Situated Support for Problem Solving by End-User Programmers.,"JILL CAO; FLEMING, SCOTT D.; BURNETT, MARGARET; SCAFFIDI, CHRISTOPHER"
14708175,51,10.1002/bmb.21692,1,Wiley-Blackwell,"Biomedical science students need to learn to code. Graduates face a future where they will be better prepared for research higher degrees and the workforce if they can code. Embedding coding in a biomedical curriculum comes with challenges. First, biomedical science students often experience anxiety learning quantitative and computational thinking skills and second biomedical faculty often lack expertise required to teach coding. In this study, we describe a creative coding approach to building coding skills in students using the packages of Processing and Arduino. Biomedical science students were taught by an interdisciplinary faculty team from Medicine and Health, Science and Architecture, Design and Planning. We describe quantitative and qualitative responses of students to this approach. Cluster analysis revealed a diversity of student responses, with a large majority of students who supported creative coding in the curriculum, a smaller but vocal cluster, who did not support creative coding because either the exercises were not sufficiently challenging or were too challenging and believed coding should not be in a Biomedical Science curriculum. We describe how two creative coding platforms, Processing and Arduino, embedded and used to visualize human physiological data, and provide responses to students, including those minority of students, who are opposed to coding in the curriculum This study found a variety of students responses in a final year capstone course of an undergraduate Biomedical Science degree where future pathways for students are either in research higher degrees or to the workforce with a future which will be increasingly data driven. [ABSTRACT FROM AUTHOR] Copyright of Biochemistry & Molecular Biology Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Biochemistry & Molecular Biology Education,Student responses to creative coding in biomedical science education.,"Gough, Phillip; Bown, Oliver; Campbell, Craig R.; Poronnik, Philip; Ross, Pauline M."
00010782,56,10.1145/2483852.2483864,7,Association for Computing Machinery,"The article discusses the need for computing education students to merge computational thinking with cultural practices to improve social development and academic success. Topics covered include the use of culturally responsive education to explore problems and solutions, how culturally responsive education can help students understand the importance of education to issues of social justice, and the factors in underrepresented youth science, technology, engineering and mathematics (STEM) achievement. Also mentioned is the vernacular culture in computing education.",Communications of the ACM,Broadening Participation: Toward Culturally Responsive Computing Education.,"Eglash, Ron; Gilbert, Juan E.; Foster, Ellen"
,,,,Association for Information Systems,"The ability to understand how software work is becoming increasingly relevant and calls have been made to help students further develop their computational thinking skills. However, research has shown that learning to program is a challenging task, particularly for non-computer science majors. Seeking to address these issues, this research asks the question: ""how can we design a course curriculum to teach the fundamentals of programming to IS undergraduate students?"" We draw from pedagogical theory and literature on distributed leadership to design a course that aims at helping IS students learn the fundamentals of programming and leverage digital artifacts - Python, Jupyter Notebook, and GitHub to enhance students' awareness of programming as a collaborative and social endeavor. We contribute to the literature on teaching non-programmers to program and offers digital artifacts as a means to transform what has traditionally been perceived by students as a challenging activity into a positive learning experience. [ABSTRACT FROM AUTHOR] Copyright of Proceedings of the International Conference on Information Systems (ICIS) is the property of Association for Information Systems and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Proceedings of the International Conference on Information Systems (ICIS),Teaching Programming to Non-Programmers: The Case of Python and Jupyter Notebooks.,"Vial, Gregory; Negoita, Bogdan"
07475632,105,10.1016/j.chb.2019.03.003,,Elsevier B.V.,"Computational thinking and coding are becoming an integral part of K-12 education, with female students being underrepresented in such subjects. The proliferation of technological tools and programming environments offers the opportunity for creative coding activities for children and increases the need for appropriate instructional practices. In this study, we design and evaluate a coding workshop for children. Our goal is to examine differences between boys and girls using eye-tracking as an objective measure and triangulating the findings with qualitative data coming from children's interviews. The results show no statistically significant difference between female and male gaze and learning gain during the coding activity; interestingly, the qualitative data show differences in the strategies and implemented practices during coding, and in perceptions about those coding activities. Our results highlight that further studies need to utilize objective measures and unveil necessary differences in the design and implementation of coding activities. Furthermore, our results provide objective evidence that female students do not lack in competences compared to boys, but simply that they have a different approach during coding activities and different perspectives about coding, an approach that needs to be cultivated and nurtured. • We designed and evaluated a coding workshop for children. • We examined gender differences using eye-tracking and interviews. • We found no-statistically significant gender difference in gaze and learning gain during coding. • We found gender differences in the strategies and implemented practices during coding. • Females do not lack in competences but simply have a different approach during coding. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Coding activities for children: Coupling eye-tracking with qualitative data to investigate gender differences.,"Papavlasopoulou, Sofia; Sharma, Kshitij; Giannakos, Michail N."
13079697,11,10.17671/gazibtd.452686,4,"Institute of Informatics, Gazi University","In the traditional educational understanding, individuals follow the path of getting graduate or post-graduate education if they wish, after continuing their education from kindergarten to high school. Today, by getting out of this stereotype, every literate person can choose different learning environments. Now, learning any subject is up to the tip of the fingers of an individual without depending on a school building with four walls or on certain time frame. In this study, it is aimed to verify digital certificates given to the participants at the Turkish stage of the International Informatics and Computational Thinking event by using Ethereum Block Chain based smart contract. The tasks in the event were transmitted to the students in Turkey via using exam module of the Moodle Learning Management System. For this study, first a smart contract was developed in which the certificate information could be stored on the Ethereum blockchain and could be check for control purposes if necessary. Then the certificate module developed by the researcher in 2014 which uses block structure in the Moodle Learning Management System was updated and then provided to work in accordance with the smart contract in the Ethereum blockchain. (English) [ABSTRACT FROM AUTHOR] Geleneksel eğitim anlayışında bireyler, anaokulundan liseye devam eden eğitimleri sonrasında isterlerse lisans hatta lisansüstü eğitim alma yolunu izlerler. Bugün bu klişenin dışına çıkarak, okuma yazma bilen her birey farklı öğrenme ortamlarını tercih edebilmektedir. Günümüz için herhangi bir konuyu öğrenmek, dört duvarı olan bir okul binasına, belli bir zaman dilimine bağlı kalmaya gerek olmaksızın bireylerin parmaklarının ucuna kadar gelmektedir. Bu çalışmada, Uluslararası Enformatik ve Bilgi İşlemsel Düşünme Etkinliğinin Türkiye ayağı kapsamında katılımcılara verilen Dijital Sertifikaların Ethereum Blok Zinciri temelli akıllı sözleşme kullanılarak doğrulanabilmesi hedeflenmiştir. Türkiye'de öğrencilere etkinlikteki görevler, Moodle Öğrenme Yönetim Sisteminin sınav modülü kullanılarak ulaştırılmaktadır. Bu çalışmanın amaçları doğrultusunda ilk olarak Ethereum blok zinciri üzerinde sertifika bilgilerinin saklanabileceği ve gerektiğinde kontrol amaçlı sorgulanabileceği bir akıllı sözleşme geliştirilmiş, daha sonra ise araştırmacı tarafından 2014 yılında geliştirilen ve blok yapısı kullanılan Moodle Öğrenme Yönetim Sistemindeki sertifika modülü güncellenerek Ethereum blok zincirindeki akıllı sözleşme ile uyumlu çalışması sağlanmıştır. (Turkish) [ABSTRACT FROM AUTHOR] Copyright of International Journal of InformaticsTechnologies is the property of Institute of Informatics, Gazi University and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of InformaticsTechnologies,Moodle Öğrenme Yönetim Sistemi için Ethereum Blok Zinciri Tabanlı Belge Doğrulama Akıllı Sözleşmesinin Geliştirilmesi.,"KARATAŞ, Erinç"
00010782,40,10.1145/253671.253697,,Association for Computing Machinery,"Part of a special section on the direction of technology during the next 50 years. The full implications of computational ideas have not yet been fully realized in this century. The present time represents the early apparatus phase of computational development, during which profound ideas of computation have not yet affected all other fields of human inquiry, especially people's thinking about the media. As computational ideas transform people's thinking about the media, new apparatuses and new ideas will emerge that will change people's relationships to the media and each other. The ways that people create, communicate, and play will change dramatically.",Communications of the ACM,Garage Cinema and the future of media technology.,"Davis, Marc"
00010782,63,10.1145/3403958,8,Association for Computing Machinery,"Excerpts from several blog posts posted on the website for the journal ""Communications of the ACM"" are presented, which cover topics including how computational thinking is impacting the music industry and how World War II was won by the Allies.",Communications of the ACM,"How WWII Was Won, and Why CS Students Feel Unappreciated.","Arquilla, John; Roschelle, Jeremy"
,,,,Association for Computing Machinery,"Software engineering project courses where student teams are geographically distributed can effectively simulate the problems of globally distributed software development (DSD). However, this pedagogical model has proven difficult to adopt or sustain. It requires significant pedagogical resources and collaboration infrastructure. Institutionalizing such courses also requires compatible and reliable teaching partners. The purpose of this workshop is to continue building on our outreach efforts to foster a community of international faculty and institutions committed to developing, teaching and researching DSD. Foundational materials presented will include pedagogical materials and infrastructure developed and used in teaching DSD courses along with results and lessons learned. The third CTGDSD workshop will also focus on publishing workshop results and collaborating with the larger DSD community. Longrange goals include: lowering adoption barriers by providing common pedagogical materials, collaboration infrastructure, and a pool of potential teaching partners from around the globe. [ABSTRACT FROM AUTHOR] Copyright of ICSE: International Conference on Software Engineering is the property of Association for Computing Machinery and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ICSE: International Conference on Software Engineering,3rd International Workshop on Collaborative Teaching of Globally Distributed Software Development (CTGDSD 2013).,"Faulk, Stuart; Young, Michal; Prikladnicki, Rafael; Weiss, David M.; Lian Yu"
08993408,24,10.1080/08993408.2014.963360,02-mar,Taylor & Francis Ltd,"Recent studies in learning programming have largely focused on high school and college students; less is known about how young children learn to program. From video data of 20 students using a graphical programming interface, we identified ideas that were shared and evolved through an elementary school classroom. In mapping these ideas and their resulting changes in programs and outputs, we were able to identify the contextual features which contributed to how ideas moved through the classroom as students learned. We suggest this process of idea mapping in visual programming environments as a viable method for understanding collaborative, constructivist learning as well as a context under which experiences can be developed to improve student learning. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Mapping students’ ideas to understand learning in a collaborative programming environment.,"Harlow, Danielle Boyd; Leak, Anne Emerson"
00010782,58,10.1145/2699391,8,Association for Computing Machinery,"The article suggests to incorporate creative thinking into the cirriculum in order to improve learning and achievement in computer science. The Generativity Theory of R. Epstein breaks creative thinking down to four core competencies: broadening, challenging, surrounding and capturing. The representation of these competencies in cognitive and neuroscience research is described. Also discussed is the integration of computational and creative thinking to form computational creativity.",Communications of the ACM,Learning Through Computational Creativity.,"Soh, Leen-Kiat; Shell, Duane F.; Ingraham, Elizabeth; Ramsay, Stephen; Moore, Brian"
00010782,58,10.1145/2723671,3,Association for Computing Machinery,"The article describes Computer Science Unplugged, an activity program designed to teach introductory computer science concepts including parity and error detection, computational thinking, and data compression to children.",Communications of the ACM,Reaching a Broader Population of Students through “Unplugged” Activities.,"Cortina, Thomas J."
07475632,148,10.1016/j.chb.2023.107903,,Elsevier B.V.,"Despite the significant emphasis placed on incorporating 21st century skills into the educational framework, particularly at the primary level, recent scholarly works indicate considerable variation in the implementation of these skills across different countries and regions, suggesting a demand for further research specifically focusing on primary education. The indications of the Digicomp framework and 21st-century skills in Europe have outlined the key competences for lifelong learning needed for all citizens, including teachers and students. In this perspective, Education plays a fundamental role in ensuring that citizens acquire the required skills. The objective in the common European framework is clear: to initiate a transition from the culture of knowledge to the culture of competence. Nowadays, technological advancement allows the researchers to create and combine different frameworks with the perspective of an even more tailored, and engaged education, some examples derived from the implementation of Virtual Reality (VR) and Augmented Reality (AR), in the combination of Gamification and AI, or the development of Intelligent Tutoring Systems (ITS) to foster and create an even more personalized learning and teaching. Following these premises, in this paper, we want to point out new research reflections and perspectives that could help researchers, teachers, educators (and consequently students) to reflect on the introduction of new technologies (e.g., artificial intelligence, robot tutors) and on how these can affect on human behavioral development and on the acquisition of new skills and competences (Specifically: Creativity, Critical Thinking, Problem Solving, and Computational Thinking) for the educational context. The analysis carried on, suggests a perspective on how creativity, critical thinking, and problem-solving can be effective in promoting computational thinking, and how Artificial Intelligence (AI) could be an aid instrument to teachers in the fostering of creativity, critical thinking, and problem-solving in schools and educational contexts. • Point out new research reflections and perspectives on the introduction of new; technologies (e.g., artificial intelligence, robot tutors) in educational context; • Outline activities and lines of research on Creativity, Critical Thinking, Problem Solving, and Computational Thinking; • Propose solutions to be able to implement AI and new technologies for the development of skills in human behavior; • Suggestions for implementing technologies in the school context; • The fundamental role of the network of schools in the European context. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Artificial intelligence and human behavioral development: A perspective on new skills and competences acquisition for the educational context.,"Benvenuti, Martina; Cangelosi, Angelo; Weinberger, Armin; Mazzoni, Elvis; Benassi, Mariagrazia; Barbaresi, Mattia; Orsoni, Matteo"
00010782,53,10.1145/1646353.1646364,2,Association for Computing Machinery,"The writer discusses the importance of informatics. The foundation of science, industry, and ultimately, the success of society is computing, and it is no longer owned solely by computer science. Computing and computational thinking have become ubiquitous, and are embedded in all aspects of science, research, industry, government, and social interaction. Informatics serves as a discipline that provides solutions to problems through the application of computing or computation, in the context of the domain of the problem.",Communications of the ACM,Why an Informatics Degree?,"Groth, Dennis P.; MacKie-Mason, Jeffrey K."
,27,,06-jul,Cutter Consortium,"The article offers information on the elusiveness of empathy design in corporate and enterprise Information Technology (IT). Topics discussed include construction of computational thinking along with mentioning the traditional software development lifecycle (SDLC), role of computers in computational thinking, and several technologies and methods to be employed at an enterprise level to solve enterprise problems including dynamic modeling of requirements and business user proto-cycling.",Cutter IT Journal,Empathy for Business.,"Trefler, Alan"
00010782,52,10.1145/1461928.1461938,2,Association for Computing Machinery,"Computational thinking (CT) should be taught in schools as a skill on par with reading, writing, and arithmetic in order to improve computer science education. Computer science has great difficulties attracting students, even though the IT industry is continually growing. It is suggested that laying the foundations of CT long before students experience their first programming language will help systematic and efficient processing of information and tasks. The focus in this drive will be on developing the computing skills of the students before they engage in software programming tasks.",Communications of the ACM,Education—Human Computing Skills: Rethinking the K-12 Experience.,"Fletcher, George H. L.; Lu, James J."
21580502,78,,1,International Technology & Engineering Educators Association,"The article focuses on the engineering design and coding through unmanned aerial vehicles quadcopters. It includes information on the significance of computational programming, coding, and analytical thinking in engineering education and occupations. It also offers information on the use of coding application Tynker for iPad for designing autonomous flight vehicles.",Technology & Engineering Teacher,engineering design and coding through quadcopters.,"Weitlauf, John; Bartholomew, Scott R.; Liwei Zhang"
18257321,18,10.13128/formare-22500,1,Firenze University Press,"This essay deals with a training experience for the Degree Course on Primary Education Sciences (Scienze della Formazione Primaria), at the University of Perugia. Fifth year students have been given a laboratory about coding and computational thinking, in a mixed methodology made of the face-to-face and online forms. This is also in relation to actions 17 and 27 of the National Plan for the Digital School. Results of the assessment activities taken in the laboratory are hereby presented. They show a good level of teaching-design competence of the students about coding. (English) [ABSTRACT FROM AUTHOR] In questo saggio viene presentata un'esperienza di formazione realizzata presso l'Università degli Studi di Perugia, nel Corso di Laurea in Scienze della Formazione Primaria. Per gli studenti del quinto anno è stato proposto un laboratorio, in modalità integrata in presenza e online, sul coding e il pensiero computazionale, in riferimento anche a quanto previsto dal Piano Nazionale Scuola Digitale (PNSD), alle azioni 17 e 27. Sono presentati i dati risultanti dagli strumenti di monitoraggio utilizzati per le diverse attività proposte nel laboratorio, dai quali si evince la conquista da parte degli studenti di una buona competenza didattico-progettuale rispetto al coding. (Italian) [ABSTRACT FROM AUTHOR] Copyright of Form@re is the property of Firenze University Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Form@re,Pre-teachers training in digital competence: a workshop experience on coding.,"Falcinelli, Floriana; Sabatini, Martina; Nini, Elisa"
03064190,50,10.1177/03064190211026207,3,"Sage Publications, Ltd.","Active student engagement, teaching via experience in real-life settings and learning by doing, are pedagogical strategies appropriate to improve student-reasoning skills. By building models, performing investigations, examining and explaining experimental results, using theoretical and computational thinking, constructing representations, undergraduates can acquire a deeper understanding of fundamental disciplinary concepts while reinforcing transversal abilities. In this framework, Engineering courses should be designed with the final objective to develop practical skills, focusing on hands-on activities. This contribution presents two different inquiry-based learning environments recently experienced at the University of Palermo in the context of bioelectronic and biomedical Engineering. The first study describes a laboratory activity about digital ophthalmologic signal classification; the second laboratory focuses on the analysis of the prefrontal cortex activation during a memory task using functional Near InfraRed Spectroscopy (fNIRS). We introduce and discuss the learning workshops, with the research objective of improving current instruction and training in Engineering courses. Indeed, this contribution aims to suggest a conceptual framework in the form of a structured elective suite of modules tailored to meet the needs of Engineering graduates. The outcomes of both studies seem to highlight that self-directed learning activities could enhance students' enthusiasm to learn and engagement in engineering investigations, contributing to improve the achievements of students and acquire a more effective learning approach. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Mechanical Engineering Education is the property of Sage Publications, Ltd. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Mechanical Engineering Education,Inquiry-based environments for bio-signal processing training in engineering education.,"Adorno, Dominique Persano"
14780771,15,10.1177/1478077117734660,4,Sage Publications Inc.,"Parquet Deformation is an architectural studio exercise introduced by William Huff in 1960s. It aims to improve students’ reasoning of spatiotemporal variation by utilizing sequential shapeshifting of patterns. This article examines the outcomes of this educational research from a perspective of design computing with a purpose to remark its pedagogical significance. A multilayered reading about the exercise will reveal its historical, theoretical, and artistic backgrounds. Then the common structural elements and different construction approaches are explained along with a novel design and analysis method. The proposed method embeds variations of two-dimensional pattern deformations on a third dimension. It enables various analyses such as the measurement of regularity and locating the attractor points. This study is expected to exemplify how computational thinking and new digital tools change the way designers would approach to such systematic compositions. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Architectural Computing is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Architectural Computing,Revisiting Parquet Deformations from a computational perspective: A novel method for design and analysis.,"Yazar, Tuğrul"
21580502,77,,4,International Technology & Engineering Educators Association,The article evaluates a decision made in Maryland to allow substitution of computer science (CS) courses for technology education required credit in high schools. It highlights the mismatch between the CS courses and the state definition of technological literacy. It suggests that computational thinking can be adapted into technology and engineering education where it fits rather than as a wholesale substitution.,Technology & Engineering Teacher,is computer science compatible with technological literacy?,"Buckler, Chris; Koperski, Kevin; Loveland, Thomas R."
00010782,57,10.1145/2557447,2,Association for Computing Machinery,"The article focuses on computer science and coding education. It states that demand in the U.S. for computer scientists and technical professionals is forecast to grow by 34 percent through 2018 and mentions a study that found many people were programming without realizing it by creating database queries using SQL or creating macros for spreadsheets. It comments on the need for people to learn computational thinking to think abstractly and learning problem-solving skills in computer science. It talks about the state of computer science in public education, reporting that only 12 percent of U.S. high schools offer computer science courses, and speculates on the benefits of teaching computer science concepts starting at age five or six.",Communications of the ACM,Should Everybody Learn to Code?,"Shein, Esther"
22111662,17,10.1007/s10758-012-9190-9,01-feb,Springer Nature,"Novice learners find motion as a continuous process of change challenging to understand. In this paper, we present a pedagogical approach based on agent-based, visual programming to address this issue. Integrating agent-based programming, in particular, Logo programming, with curricular science has been shown to be challenging in previous research on educational computing. We present a new Logo-based visual programming language-ViMAP-and, a sequence of learning activities involving programming and modeling, designed specifically to support seamless integration between programming and learning kinematics. We describe relevant affordances of the ViMAP environment that supports such seamless integration. We then present ViMAP-MoMo, a curricular unit designed in ViMAP for modeling kinematics, for a wide range of students (elementary-high school). Finally, we describe in detail a sequence of learning activities in three phases, discuss the underlying rationale for each phase, and where relevant, report results in the form of observational data from two studies. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",From Agents to Continuous Change via Aesthetics: Learning Mechanics with Visual Agent-based Computational Modeling.,"Sengupta, Pratim; Farris, Amy; Wright, Mason"
1045926X,20,10.1016/j.jvlc.2009.04.001,4,Academic Press Inc.,"Abstract: 3D game development can be an enticing way to attract K-12 students to computer science, but designing and programming 3D games is far from trivial. Students need to achieve a certain level of 3D fluency in modeling, animation, and programming to be able to create compelling 3D content. The combination of innovative end-user development tools and standards-based curriculum that promotes IT fluency by shifting the pedagogical focus from programming to design, can address motivational aspects without sacrificing principled educational goals. The AgentCubes 3D game-authoring environment raises the ceiling of end-user development without raising the threshold. Our formal user study shows that with Incremental 3D, the gradual approach to transition from 2D to 3D authoring, middle school students can build sophisticated 3D games including 3D models, animations, and programming. [Copyright &y& Elsevier] Copyright of Journal of Visual Languages & Computing is the property of Academic Press Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Visual Languages & Computing,AgentCubes: Incremental 3D end-user development,"Ioannidou, Andri; Repenning, Alexander; Webb, David C."
15391523,54,10.1080/15391523.2020.1816864,2,Taylor & Francis Ltd,"Robotics activities engage students in critical and computational thinking, problem solving, and collaboration, as well as engineering and computer science. By integrating robotics into disciplinary courses, educators offer these opportunities to a wider range of students. However, teachers may be less likely to use new technology without evidence that it can support their teaching and student learning. This paper presents two descriptive case studies as a 'proof of concept' for integrating robotics construction activities into disciplinary courses. They focus on teachers' motivation for integration, and how they used robotics to support disciplinary goals. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Teaching with robotics: creating and implementing integrated units in middle school subjects.,"Bernstein, Debra; Mutch-Jones, Karen; Cassidy, Michael; Hamner, Emily"
22512195,,10.5176/2251-2195_CSEIT16.40,,Global Science & Technology Forum,"Computer science education, as exemplified by programming, is typically first introduced to Namibian students at the first year of university education. As such, most young Namibians enter the major without any prior hands-on experience; their choice is largely dictated by second hand knowledge of the field. Additionally, secondary school instructors typically lack the technological education to facilitate introduction of programming skills in high schools. This paper describes the NAMTOSS (Namibian Technology Outreach to Secondary Schools) initiative, a pilot program aimed at addressing both of these issues. NAMTOSS has been designed as a teacher-training program with the goal of introducing computer programming skills and computational thinking to high school learners. Additionally, NAMTOSS attempts to rectify several of the structural and systemic issues raised by previously unsuccessful outreach efforts in Southern Africa. [ABSTRACT FROM AUTHOR] Copyright of Annual International Conference on Computer Science Education: Innovation & Technology is the property of Global Science & Technology Forum and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Annual International Conference on Computer Science Education: Innovation & Technology,NAMTOSS: A Pilot Program Bringing Technology to Secondary Learners in Namibia.,"Mufeti, Kauna; Mutonga, Joseph; Sverdlik, William"
03601315,138,10.1016/j.compedu.2019.04.013,,Elsevier B.V.,"In recent years, there has been a push to introduce coding and computational thinking in early childhood education, and robotics is an excellent tool to achieve this. However, the integration of these fundamental skills into formal and official curriculums is still a challenge and educators needs pedagogical perspectives to properly integrate robotics, coding and computational thinking concepts into their classrooms. Thus, this study evaluates a ""coding as a playground"" experience in keeping with the Positive Technological Development (PTD) framework with the KIBO robotics kit, specially designed for young children. The research was conducted with preschool children aged 3–5 years old (N = 172) from three Spanish early childhood centers with different socio-economic characteristics and teachers of 16 classes. Results confirm that it is possible to start teaching this new literacy very early (at 3 years old). Furthermore, the results show that the strategies used promoted communication, collaboration and creativity in the classroom settings. The teachers also exhibited autonomy and confidence to integrate coding and computational thinking into their formal curricular activities, connecting concepts with art, music and social studies. Through the evidence found in this study, this research contributes with examples of effective strategies to introduce robotics, coding and computational thinking into early childhood classrooms. • We present a study on strategies to teach coding and computational thinking in young children. • We found children (3–5 years old) onwards used KIBO to learn fundamental coding concepts. • We found children developed positive behaviors in a learning environment of coding as playground. • We study the effective integration of robotics in different cultural and economic contexts. • We found teachers integrated effectively coding and computational thinking in their curriculums. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Coding as a playground: Promoting positive learning experiences in childhood classrooms.,"Bers, Marina U.; González-González, Carina; Armas–Torres, Mª Belén"
03601315,168,10.1016/j.compedu.2021.104173,,Elsevier B.V.,"Several gaps exist in the literature on coding. First, little exploration has focused on early elementary school students. In addition, close description of the overall context of coding tasks at this level is rare. Further, there is a need for both teacher and student voices around coding experiences to be heard. Moreover, a task engagement framework has not been used to evaluate the process or outcomes of early elementary coding tasks. Therefore, an exploratory holistic case study design was used to investigate student and teacher processes and outcomes of coding lessons in order to fill gaps in the literature. In this study, forty-six 2nd grade students, two teachers, and four researchers completed two one-week units on basic coding. Multiple descriptive and numeric data sources were employed to describe the process and outcomes of learning coding. Conclusions include: (1) teachers should start learning about coding first with short awareness sessions and then move to their own classrooms with knowledge brokers and other forms of assistance; (2) a focus on content and process, including problem-solving, is effective for coding with young children; (3) there can be a high level of engagement for teachers and students with the use of robots and welldesigned, age-appropriate coding tasks, and; (4) multiple data sources and the inclusion of both teacher and student data are essential in exploring coding in classrooms. • Two authentic classrooms of 2nd graders and their teachers. • Use of multiple data sources. • Focus on task engagement as an essential construct. • Both teacher and student voices included. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,"""It's a chance to make mistakes"": Processes and outcomes of coding in 2nd grade classrooms.","Egbert, Joy; Shahrokni, Seyed Abdollah; Abobaker, Reima; Borysenko, Nataliia"
23928956,20,10.21279/1454-864X-17-I2-021,2,Mircea cel Batran Naval Academy Constanta Press,"Recent studies have shown that EFL/ESL skills, in general, and ESP skills, in particular, are better developed when modern and innovative student-centered teaching and learning methods and techniques are employed, such as the communicative approach, cooperative teaching and learning, creative teaching and teaching for creativity, contextual learning, cross-over learning, computational thinking, adaptive teaching, embodied learning, etc. The purpose of this paper is to underline the efficiency of cooperative learning, compared to traditional teaching methods, in developing the students' ESP speaking skills. This paper is part of an experimental study conducted on two groups of students whose major is Business Economics (first year of study), over a period of one month, in the first semester of the academic year 2016- 2017. The control group consisted of 25 students while the experimental group had 20 students. The experimental study involved the following stages: an initial test was applied to both groups of students, in order to assess their initial ESP skills; afterwards, two ESP units were taught, i.e. ""Tomorrow's World"" and ""Job Interviews"". The traditional methods and techniques were used when teaching ESP to the control group, while techniques specific to cooperative teaching and learning were applied to the experimental group. At the end of the teaching period, a final test was taken by the students of both groups in order to assess the effectiveness of the two teaching methods and techniques that had been used during the ESP seminars (i.e. the traditional and the cooperative one), focused on developing the students' ESP skills. Moreover, the students answered a questionnaire assessing their opinions and attitudes towards the applied teaching methods. [ABSTRACT FROM AUTHOR] Copyright of Scientific Bulletin 'Mircea cel Batran' Naval Academy is the property of Mircea cel Batran Naval Academy Constanta Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Scientific Bulletin 'Mircea cel Batran' Naval Academy,COOPERATIVE TEACHING VS. TRADITIONAL TEACHING IN DEVELOPING ESP SPEAKING SKILLS. AN EXPERIMENTAL STUDY.,"NADRAG, Lavinia; BUZARNA-TIHENEA (GALBEAZA), Alina"
13807501,76,10.1007/s11042-016-3782-7,4,Springer Nature,"Teaching HCI in an undergraduate course for computer scientists is often a challenging experience, because the skills that characterize HCI are different from scientific and computational thinking that are the focus of most subjects of the curriculum. Often HCI teaching is organized as a set of lectures that are useful to learn concepts, but don't increase the design skills of the students. This work reports the results of an educational experience where both learners and teachers were actively involved in a process of knowledge construction and design. This process usually happens in other domains, such as architecture or industrial design, but is not part of most computer science curricula. We chose as project a challenging theme: the design of eco-feedback interfaces that inform people about the consequences of their actions for the environment and help to take decisions for lowering energy consumption. Eco-feedback interfaces are also representative of the gap between the products available on the market and the results of scientific studies, evidenced also by a recent workshop about HCI education. The workshop evidenced a number of pitfalls in HCI education that in our educational experience we tried to overcome with appropriate methodologies. An additional challenging task was the attempt to organize all the design activities taking advantage of a platform for remote learning, stressing its limits. The paper will discuss all these issues, evidencing where the applied methodologies gave good results and where they need further improvements, with the final goal of giving useful advices for HCI educational experiences to come. [ABSTRACT FROM AUTHOR] Copyright of Multimedia Tools & Applications is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Multimedia Tools & Applications,HCI and education: a blended design experience.,"Pittarello, Fabio; Pellegrini, Tommaso"
00010782,55,10.1145/2160718.2160729,5,Association for Computing Machinery,"The article focuses on the use of computer games to encourage middle school students to participate in computer science programs. It talks about the Scalable Game Design framework utilizing systemic integration of a game-design-based computational thinking (CT) curriculum. It states that it exposed middle school students to CT concepts, motivated students to create complete games, allowed the objective measurement of CT learning objectives, and investigated pedagogical approaches and motivation.",Communications of the ACM,Programming Goes Back to School.,
00010782,54,10.1145/1924421.1924448,4,Association for Computing Machinery,The authors opine regarding computer science curricula in U.S. high schools and they advocate for training of high school teachers in computer science via college workshops. The authors cite research documentation on the absence of student exposure to computer science and computational thinking in U.S. high schools.,Communications of the ACM,Virtual Extension: Reaching Future Computer Scientists.,"Morreale, Patricia; Joiner, David"
,,,,OmniEarth Pvt. Ltd,"The article reports that education is no longer a one-size-fits-all model, and edtech startups are revolutionising the way students learn. It mentions Vedantu is offering free online classes on its website and through its app in order to keep students safe inside their homes. It also mentions online classes can be accessed via their website and on their app that is available for free on Android and iOS and cutting-edge skills like design thinking, computational thinking.",Techtree.com,"""Revolutionising Education: 4 Edtech Startups Empowering Personalized Learning for Students from K12 segment!"".",
,,,,World Scientific Publishing Company,,"Industrial Engineering, Machine Design & Automation (Iemda 2014) - Proceedings of the 2014 Congress & Computer Science & Application (Ccsa 2014) - Proceedings of the 2nd Congress",On Computation Theory Problems in Computer Science.,Rui Chang; Liehui Jiang; Hui Shu; Yaobin Xie
22111662,26,10.1007/s10758-020-09464-4,4,Springer Nature,"This paper describes an educational experience realized in the form of extracurricular workshops involving music technology students of the ""V. Gambara"" music high school in Brescia (Italy). By means of a participatory prototyping experience, the project aimed at fostering the students awareness and understanding of technological means and their utility. The Discovery of Interactive Spaces project focuses on motion tracking technologies in connection with sound and visual production, as means to provoke reflections on their cultural and societal impact on social utility and inclusion, and artistic expression. To this end, students proposed design concepts, and prototyped sonic interactive experiences. The Discovery of Interactive Spaces is framed within the broader themes of computational thinking and creativity, learning by design, and technology awareness. These themes represent the pillars of technological citizenship, which is considered crucial for the twenty-first century student. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",The Discovery of Interactive Spaces: Learning by Design in High School Music Technology Classes.,"Mandanici, Marcella; Di Filippo, Roberto; Delle Monache, Stefano"
16925238,14,10.18046/syt.v14i36.2216,36,Universidad ICESI,"The development of skills that allow children to perform satisfactorily in their training process and, later, in their work or social life, has become an objective for all educational and training models developed. This article deals with the relationship between thinking development skills, shared mental models and abstraction mechanisms, from a theoretical review and application with children aged between eight and twelve, from the Childprogramming methodology in a public education institution in Colombia. The results recorded at the end of the practices with this group of students, especially when assessing the progressive use of abstraction mechanisms in the Scratch environment, are presented, using the Dr. Scratch platform. (English) [ABSTRACT FROM AUTHOR] El desarrollo de competencias que permitan a los niños un desempeño satisfactorio en su proceso de formación y, posteriormente, en su vida laboral o social, se ha convertido en un anhelo de todos los modelos educativos y de formación que se han desarrollado. El presente artículo trata de la relación entre el desarrollo de habilidades de pensamiento, los modelos mentales compartidos y los mecanismos de abstracción, a partir de una revisión teórica y la aplicación con niños de entre ocho y doce años, de la metodología Childprogramming, en una institución de educación pública en Colombia. Se presentan los resultados registrados al término de las prácticas realizadas con este grupo de estudiantes, especialmente al evaluar el uso progresivo de los mecanismos de abstracción en el entorno de Scratch, utilizando la plataforma Dr. Scratch. (Spanish) [ABSTRACT FROM AUTHOR] O desenvolvimento de competências que permitem às crianças um desempenho satisfatório no seu processo de formação e mais tarde no seu trabalho ou vida social, tornou-se um anseio de todos os modelos de educação e formação que têm sido desenvolvidos. Este artigo trata da relação entre o desenvolvimento de habilidades de pensamento, modelos mentais compartilhados e mecanismos de abstração, a partir de uma revisão teórica e a aplicação em crianças entre oito e doze anos, da metodologia Childprogramming em uma instituição de ensino pública na Colômbia. São apresentados os resultados registrados com este grupo de estudantes no final das práticas, especialmente quando se avalia a utilização progressiva de mecanismos de abstração no ambiente Scratch, usando a plataforma Dr. Scratch. (Portuguese) [ABSTRACT FROM AUTHOR] Copyright of Sistemas & Telemática is the property of Universidad ICESI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Sistemas & Telemática,Discovering the mechanisms of abstraction in the performance of work teams in children to solve computational problems.,"Zúñiga Muñoz, René Fabián; Hurtado Alegría, Julio Ariel; Rodríguez, Patricia Paderewsky"
00030996,107,10.1511/2019.107.3.187,3,"Sigma Xi, The Scientific Research Honor Society, Inc.","The article presents an excerpt from the book ""Computational Thinking"" by Peter J. Denning and Matti Tedre regarding computational thinking.",American Scientist,Thinking Like a Computer.,"Denning, Peter J.; Tedre, Matti"
00472395,50,10.1177/00472395211018801,1,Sage Publications Inc.,"The computer science (CS) unplugged approach intends to teach CS concepts and computational thinking skills without employing any digital tools. The current study conducted a systematic literature review to analyze research studies that conducted investigations related to implementations of CS unplugged activities. A systematic review procedure was developed and applied to detect and subsequently review relevant research studies published from 2010 to 2019. It was found that 55 research studies (17 articles + 38 conference proceedings) satisfied the inclusion criteria for the analysis. These research studies were then examined with regard to their demographic characteristics, research methodologies, research results, and main findings. It was found that the unplugged approach was realized and utilized differently among researchers. The majority of the studies used the CS unplugged term when referring to ""paper–pencil activities,"" ""problem solving,"" ""storytelling,"" ""games,"" ""tangible programming,"" and even ""robotics."" [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Technology Systems is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Technology Systems,Computer Science Unplugged: A Systematic Literature Review.,"Battal, Ali; Afacan Adanır, Gülgün; Gülbahar, Yasemin"
18227732,9,10.15388/ioi.2015.16,,"Vilnius University, Institute of Mathematics & Informatics","This report entangles the endeavors undertaken during the IOI Workshop ""Creating an International Informatics Curriculum for Primary and High School Education"". Considering the need to discuss the role of informatics in the primary and secondary education, the Workshop participants tried to encapsulate several activities that might give insight on how to treat this issue with success. An overview of the current situation with the informatics education in thirteen countries was presented. Further, a group work took place considering relevant topics in creating informatics curricula and computational thinking. A fruitful discussion that considered establishing guidelines and further steps in creating informatics curricula and some ways to promote informatics concluded the Workshop. [ABSTRACT FROM AUTHOR] Copyright of Olympiads in Informatics is the property of Vilnius University, Institute of Mathematics & Informatics and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Olympiads in Informatics,"Report of the IOI Workshop ""Creating an International Informatics Curriculum for Primary and High School Education"".","ACKOVSKA, Nevena; ERDŐSNÉ NÉMETH, Ágnes; STANKOV, Emil; JOVANOV, Mile"
07475632,109,10.1016/j.chb.2020.106349,,Elsevier B.V.,"This meta-analysis maps the evidence on the effectiveness of instructional approaches and conditions for learning computer programming under three study conditions: (a) Studies focusing on the effectiveness of programming interventions per se, (b) studies focusing on the effectiveness of visualization and physicality , and (c) studies focusing on the effectiveness of dominant instructional approaches. Utilizing the data from 139 interventions and 375 effect sizes, we found (a) a strong effect of learning computer programming per se (Hedges' g ‾ = 0.81, 95% CI [0.42, 1.21]), (b) moderate to large effect sizes of visualization (g ‾ = 0.44, 95% CI [0.29, 0.58]) and physicality interventions (g ‾ = 0.72, 95% CI [0.23, 1.21]), and (c) moderate to large effect sizes for studies focusing on dominant instructional approaches (g ‾ s = 0.49–1.02). Moderator analyses indicated that the effect sizes differed only marginally between the instructional approaches and conditions—however, collaboration in metacognition instruction, problem solving instruction outside of regular lessons, short-term interventions focusing on physicality, and interventions focusing on visualization through Scratch were especially effective. Our meta-analysis synthesizes the existing research evidence on the effectiveness of computer programming instruction and, ultimately, provides references with which the effects of future studies could be compared. • Computer programming interventions show moderate to large effect sizes per se. • Studies focusing on physicality are especially effective. • Instructional approaches exhibit moderate to large effects. • Study design features only explain marginal variation in the effects. • Visualizing programming with Scratch is especially effective. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,A meta-analysis of teaching and learning computer programming: Effective instructional approaches and conditions.,"Scherer, Ronny; Siddiq, Fazilat; Sánchez Viveros, Bárbara"
07475632,105,10.1016/j.chb.2018.12.037,,Elsevier B.V.,"Computing education is increasing in global importance, with calls for greater understanding of conceptual development that can inform pedagogy. Here, we report a study investigating elementary computing concepts through the lens of Embodied Cognition. Sixteen students (9 female) studying university-level computing were asked to explain their understanding of computing concepts (without materials) in individually video-recorded sessions. We analysed the gestures generated for three elementary concepts: algorithms, loops, and conditional statements. In total, 368 representational gestures were identified across 48 (16 × 3) explanations, thereby providing evidence that offline thinking in this domain is embodied. Our analysis of representational gestures showed that participants drew upon two overarching embodied metaphors in their explanations: 1) Computing Constructs as Physical Objects, in which participants simulated manipulating physical objects (e.g., pinching) when referring to range of computing constructs, and 2) Computing Processes as Motion along a Path, whereby participants moved their hands along one of three body-based axes when referring to temporal sequences. We contrast our findings to similar research in mathematics and discuss implications for computing pedagogy – namely the role of gesture in the classroom and technologies that can exploit embodied metaphors. • 16 students generated 368 representational gestures to explain 3 computing concepts. • Analysis revealed two embodied metaphors to communicate constructs and processes. • Findings support claim that thinking in computing is embodied. • Implications discussed for use of gestures and tool design in computing education. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Identifying embodied metaphors for computing education.,"Manches, Andrew; McKenna, Peter E.; Rajendran, Gnanathusharan; Robertson, Judy"
07380569,38,10.1080/07380569.2021.1911540,2,Taylor & Francis Ltd,"Incorporating computer science (CS) into K–12 education has been highlighted in recent years as an important way to promote computational thinking skills. The aim of this study was to investigate teachers' experiences with a new CS curriculum and address challenges to teachers during implementation. This study was designed to evaluate CS curriculum implementation in order to inform CS practices. Interview and survey data were collected and analyzed. Findings showed that teachers had high confidence in teaching CS; however, they sought professional development to acquire content knowledge and instructional strategies to effectively engage students in learning. As for the curriculum and students, the scope of the curriculum needed to be adjusted along with students' prerequisite skills and knowledge. As for the context, some schools did not have appropriate facilities. Recommendations for implementing CS curricula and implications are discussed. [ABSTRACT FROM AUTHOR] Copyright of Computers in the Schools is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in the Schools,Teachers' Perceptions of First-Year Implementation of Computer Science Curriculum in Middle School: How We Can Support CS Initiatives.,"Shin, Suhkyung; Cheon, Jongpil; Shin, Sungwon"
03601315,208,10.1016/j.compedu.2023.104939,,Elsevier B.V.,"A growing trend of integrating and teaching Informatics and Computational Thinking (CT) skills at primary education levels poses different challenges for teachers. Research demonstrates that it is challenging to introduce Informatics in schools without well-prepared teachers. In this paper, we examine Lithuanian teachers' perceptions of the barriers and drivers to integrate the renewed Informatics curricula in primary education and the relation between them. Fifteen semi-structured interviews were conducted with primary school teachers, and a mixed-methods approach was employed to analyze them. The results show that explicit guidelines for renewed curricula and motivation to learn Informatics are both identified as the main barriers and drivers for integrating Informatics. The study further highlights the critical role of resources, appropriate tools, and guidelines in facilitating the successful implementation of Informatics. The study provides knowledge that could, for instance, benefit teacher training programmes and help better understand how teachers can be better supported to meet current and future challenges. • Integration of Informatics is highly dependent on the motivation of teachers. • Support from colleagues is perceived by teachers as the most influencing barrier. • The most perceived barrier and driver is Explicit guidelines for renewed curricula. • Critical role lies in resources, tools, and guidelines for implementing Informatics. • School leadership is important in the provision of infrastructure and support [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Teachers' perceptions of the barriers and drivers for the integration of Informatics in primary education.,"Stupurienė, Gabrielė; Lucas, Margarida; Bem-Haja, Pedro"
13614568,23,10.1080/13614568.2016.1152314,1,Taylor & Francis Ltd,"Students in secondary education strive hard enough to understand basic programming concepts. With all that is known regarding the benefits of programming, little is the published evidence showing how high school students can learn basic programming concepts following innovative instructional formats correctly with the respect to gain/enhance their computational thinking skills. This distinction has caused lack of their motivation and interest in Computer Science courses. This case study presents the opinions of twenty-eight (n = 28) high school students who participated voluntarily in a 3D-game-like environment created in Second Life. This environment was combined with the 2D programming environment of Scratch4SL for the implementation of programming concepts (i.e. sequence and concurrent programming commands) in a blended instructional format. An instructional framework based on Papert's theory of Constructionism to assist students how to coordinate or manage better the learning material in collaborative practice-based learning activities is also proposed. By conducting a mixed-method research, before and after finishing several learning tasks, students’ participation in focus group (qualitative data) and their motivation based on their experiences (quantitative data) are measured. Findings indicated that an instructional design framework based on Constructionism for acquiring or empowering students’ social, cognitive, higher order and computational thinking skills is meaningful. Educational implications and recommendations for future research are also discussed. [ABSTRACT FROM PUBLISHER] Copyright of New Review of Hypermedia & Multimedia is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",New Review of Hypermedia & Multimedia,Leveraging Scratch4SL and Second Life to motivate high school students’ participation in introductory programming courses: findings from a case study.,"Pellas, Nikolaos; Peroutseas, Efstratios"
02664909,32,10.1111/jcal.12155,6,Wiley-Blackwell,"Recent government moves in many countries have seen coding included in school curricula, or promoted as part of computing, mathematics or science programmes. While these moves have generally been associated with a need to engage more young people in technology study, research has hinted at possible benefits from learning to program including fostering general thinking skills. However, little research has been carried out exploring these ideas. This study analysed data collected while 5- and 6-year-old students in a New Zealand primary school were using Scratch Jnr. to learn about basic shapes, as part of a numeracy topic. Analysis combined Brennan and Resnick's (2012) computational thinking skills framework and Krathwohl's (2002) revision of Bloom's Taxonomy to evaluate any role general thinking skills played in these students' coding work. Results suggest including basic coding in primary curricula provides teachers with an effective means of exercising their students' general and higher order thinking skills. They build on Brennan and Resnick's (2012) framework by including conceptualization as an important element in students' computational work and highlight the role of predictive thinking in debugging code. Findings support historical arguments that more needs to be done to investigate students' cognitive processes when undertaking computational work. Lay description What is already known about the topic: Computational learning is an emerging area of school curricula;, Limited research exists exploring thinking processes within computational learning;, Early studies challenge more recent claims of thinking skill transfer from computational work., What this paper adds: Computational work supports a range of general and higher order thinking skills;, Task design and teacher skills are critical to achieving higher order thinking outcomes from computational work;, Computational work in teams can support collaborative, cooperative and self-management key competencies., Implications for practice and/or policy: Findings broaden the base of empirical support for including computational work in school curricula;, Coding provides an engaging means of exercising complex thinking skills and key competencies in students;, The data methods used provide teachers with visible evidence of students' thinking processes during computational work. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,An analysis of young students' thinking when completing basic coding tasks using Scratch Jnr. On the iPad.,"Falloon, G."
10613773,29,10.1002/cae.22305,1,Wiley-Blackwell,"Currently, there is a big gap between industry and the instructions provided by engineers at the University. Manufacturing companies need engineers with specific profiles and skills in machining. Teachers, who face both worlds, must play an active role in shortening the transition times of students. Recently, barrel-end mills have been the focus of attention of toolmakers and manufacturers due to their excellent production times and surface accuracies. They are outstanding competitors to more traditional ball-end mills in some applications. This study raises the challenge of translating the developed work for this kind of tool from the research domain into the classroom at the University. For this, a software tool proBARR© was developed and used for learning of the subject of manufacturing. This educational software is capable of predicting cutting forces and surface topography in milling with barrel-end mills and was successfully introduced as part of the students' learning process. A software tool was created for the analysis and prediction of cutting forces and surface quality in milling processes with barrel-end mills. This specific problem was addressed from past experience in research projects but was then adapted for academic use. The teachers believe that, if suitably presented to students, the tool provides an excellent opportunity to approach real problems in industry, thus boosting instructions for future engineers. In this way, a pragmatic methodology to computational thinking is presented that transforms traditional difficulties associated with process modeling into more comprehensive tasks, more oriented toward solving specific problems. [ABSTRACT FROM AUTHOR] Copyright of Computer Applications in Engineering Education is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Applications in Engineering Education,Bridging the gap between student instruction and advanced research: Educational software tool for manufacturing learning.,"Urbikain, Gorka; López de Lacalle, Luis Norberto"
00472395,49,10.1177/0047239520926971,2,Sage Publications Inc.,"Courses on computer programming are included in the curricula of almost all engineering disciplines. We surveyed the research literature and identified the techniques that are commonly used by instructors for teaching these courses. We observed that visual programming and game-based learning can enhance computational thinking and problem-solving skills in students and may be used to introduce them to programming. Robot programming may be used to attract students to programming, but the success of this technique is subjected to the availability of robots. Pair and collaborative programming allows students to learn from one another and write efficient programs. Assessment systems help instructors in evaluating programs written by students and provide them with timely feedback. Furthermore, an analysis of citations showed that Scratch is the most researched tool for teaching programming. We discuss how these techniques may be used to teach introductory courses, advanced courses, and massive open online courses on programming. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Technology Systems is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Technology Systems,Tools and Techniques for Teaching Computer Programming: A Review.,"Kanika; Chakraverty, Shampa; Chakraborty, Pinaki"
03601315,190,10.1016/j.compedu.2022.104623,,Elsevier B.V.,"This study analyzed 281 lesson plans collected from the producers' websites of 12 educational physical computing and robotics (ePCR) devices. We extracted and coded five variables from each lesson. They were ePCR functionality, coding skills, computational thinking skills, math knowledge, and activity design. First, a two-step cluster analysis was administered to find how three ePCR-related knowledge: ePCR functionality, coding skills, and computational thinking skills, were integrated to teach students ePCR technology in middle-grade math lessons. Results showed three types of lesson plans, including lessons to use basic ePCR functionality to teach students lower-level CT skills, lessons to teach students basic to intermediate coding skills, and lessons to use the technology at the advanced level. Next, we applied the Technological Pedagogical Content Knowledge (TPACK) framework and conducted a second two-step cluster analysis to identify how the technology (ePCR technology), content (math knowledge), and pedagogy (activity design) were integrated into those lesson plans. Results suggested ten clusters of lesson plans with distinct features. We summarized those ten lesson clusters into five categories: 1) ePCR technology lessons, 2) transdisciplinary problem-based learning lessons, 3) technology-assisted lessons, 4) lessons without real-world connections, and 5) lessons integrating middle-grade math learning into ePCR projects. Implications for educators and researchers were discussed at the end of the article. • We analyze 281 physical-computing-and-robotics lesson plans in middle-grade math. • We identify three types of technology integration. • We identify five types of integrated lesson plans. • The largest lesson-plan category is math learning in technology creation projects. • Transdisciplinary problem-based learning lessons only count for 5% of lesson plans. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,A mixed-method cluster analysis of physical computing and robotics integration in middle-grade math lesson plans.,"Zha, Shenghua; Jin, Yi; Wheeler, Rebecca; Bosarge, Erin"
00104787,,,,"TechTarget, Inc.","The article offers information on the regional differences in the Great Britain computing curriculum. It mentions the most beneficial thing is to look at raw skills and different ways of thinking rather than knowledge-based stuff; and also mentions the views of Elizabeth Tweedale, chief executive of coding education startup Cypher, the most important thing is to have an understanding of the basics of computer science and computational thinking and to apply that in the real world.",Computer Weekly,REGIONAL DIFFERENCES IN THE UK'S COMPUTING CURRICULUM.,"Everett, Cath"
15391523,48,10.1080/15391523.2016.1146563,2,Taylor & Francis Ltd,"This article presents a systematic review of research related to the use of robotics construction kits (RCKs) in P–12 learning in the STEM disciplines for typically developing children. The purpose of this review is to configure primarily qualitative and mixed methods findings from studies meeting our selection and quality criterion to answer the review question: How do robotic construction kits function as computational manipulatives in P–12 STEM education? Our synthesis of the literature has resulted in four key insights that are new to the field. First, RCKs have a unique double application: They may be used for direct instruction in robotics (first-order uses) or as analogical tools for learning in other domains (second-order uses). Second, RCKs make possible additional routes to learning through the provision of immediate feedback and the dual modes of representation unique to RCKs. Third, RCKs support a computational thinking learning progression beginning with a lower anchor of sequencing and finishing with a high anchor of systems thinking. And fourth, RCKs support evolving problem-solving abilities along a continuum, ranging from trial and error to heuristic methods associated with robotics study. Furthermore, our synthesis provides insight into the second-order (analogical) uses of RCKs as computational manipulatives in the disciplines of physics and biology. Implications for practice and directions for future research are discussed. (Keywords: computational manipulatives, constructionism, computational thinking, problem solving, robotics, STEM) [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Robotic Construction Kits as Computational Manipulatives for Learning in the STEM Disciplines.,"Sullivan, Florence R.; Heffernan, John"
15391523,48,10.1080/15391523.2016.1146561,2,Taylor & Francis Ltd,"Current policy efforts that seek to improve learning in science, technology, engineering, and mathematics (STEM) emphasize the importance of helping all students acquire concepts and tools from computer science that help them analyze and develop solutions to everyday problems. These goals have been generally described in the literature under the termcomputational thinking. In this article, we report on the design, implementation, and outcomes of an after-school program on computational thinking. The program was founded through a partnership between university faculty, undergraduates, teachers, and students. Specifically, we examine how equitable pedagogical practices can be applied in the design of computing programs and the ways in which participation in such programs influence middle school students' learning of computer science concepts, computational practices, and attitudes toward computing. Participants included 52 middle school students who voluntarily attended the 9-week after-school program, as well as four undergraduates and one teacher who designed and implemented the program. Data were collected from after-school program observations, undergraduate reflections, computer science content assessments, programming products, and attitude surveys. The results indicate that the program positively influenced student learning of computer science concepts and attitudes toward computing. Findings have implications for the design of effective learning experiences that broaden participation in computing. (Keywords: computational thinking, programming, middle school, mixed methods) [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,"Development, Implementation, and Outcomes of an Equitable Computer Science After-School Program: Findings From Middle-School Students.","Mouza, Chrystalla; Marzocchi, Alison; Pan, Yi-Cheng; Pollock, Lori"
15219615,22,10.1109/MCSE.2020.2994763,4,IEEE,"There is a saying, ""Everything changes, but nothing changes."" We are realizing a rapid technological revolution in the development, deployment, and application of computing technologies within every discipline and every sector of society. Yet, our ability to respond to the well-documented need for a large, diverse, computationally literate workforce remains a challenge. We summarize our 35 years of lessons learned for preparing the workforce that can inform efforts to address this challenge. We have pursued a multiprong approach to reach instructors, researchers, professionals, and students on a national scale. Our efforts in scaling up and sustaining activities range from teaching computational thinking through imparting HPC skills. We have been able to scale up these activities through community efforts to share, cooperate, and collaborate. The potential for providing life-long learning to everyone wishing to expand their computational knowledge and skills is greater than any organization can achieve on its own. [ABSTRACT FROM AUTHOR] Copyright of Computing in Science & Engineering is the property of IEEE and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computing in Science & Engineering,Preparing a Computationally Literate Workforce.,"Lathrop, Scott A.; Cahill, Katharine; Gordon, Steven I.; Houchins, Jennifer; Panoff, Robert M.; Weeden, Aaron"
10943420,34,10.1177/1094342017738352,2,"Sage Publications, Ltd.","The ever-increasing computational requirements of HPC and service provider applications are becoming a great challenge for hardware and software designers. These requirements are reaching levels where the isolated development on either computational field is not enough to deal with such challenge. A holistic view of the computational thinking is therefore the only way to success in real scenarios. However, this is not a trivial task as it requires, among others, of hardware–software codesign. In the hardware side, most high-throughput computers are designed aiming for heterogeneity, where accelerators (e.g. Graphics Processing Units (GPUs), Field-Programmable Gate Arrays (FPGAs), etc.) are connected through high-bandwidth bus, such as PCI-Express, to the host CPUs. Applications, either via programmers, compilers, or runtime, should orchestrate data movement, synchronization, and so on among devices with different compute and memory capabilities. This increases the programming complexity and it may reduce the overall application performance. This article evaluates different offloading strategies to leverage heterogeneous systems, based on several cards with the first-generation Xeon Phi coprocessors (Knights Corner). We use a 11-point 3-D Stencil kernel that models heat dissipation as a case study. Our results reveal substantial performance improvements when using several accelerator cards. Additionally, we show that computing of an approximate result by reducing the communication overhead can yield 23% performance gains for double-precision data sets. [ABSTRACT FROM AUTHOR] Copyright of International Journal of High Performance Computing Applications is the property of Sage Publications, Ltd. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of High Performance Computing Applications,Offloading strategies for Stencil kernels on the KNC Xeon Phi architecture: Accuracy versus performance.,"Wang, Jue; He, XinFu; Hernández, Mario; Cebrián, Juan M; Cecilia, José M; García, José M"
14626268,30,10.1080/14626268.2019.1684322,4,Taylor & Francis Ltd,"In this paper, we explore how artistic research and its methodologies can create new modes of thinking and research on computational issues. We draw on experiences with the research project 'Reconfiguring Computing Through Cyberfeminism and New Materialism' (CF+), during which we collaboratively investigated modes and methods of knowledge production in computing. Cyberfeminist legacies and new materialism provided a historically informed and theoretically rigorous set of concerns around which artistic research and computing were brought together. We discuss collaborative experiments and three hybrid methodologies – creating situations for intra-action, diffractive reading/making and material speculation – that we employed and suggest that what emerged is a kind of 'doing thinking' as a material-speculative practice that re-positions research as a critical open-ended space for non-standard ways of knowing. The paper explores implications of this for ethics and responsibility in computing, materiality of knowledge production and modes of interdisciplinary collaborations. [ABSTRACT FROM AUTHOR] Copyright of Digital Creativity is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Digital Creativity,Doing thinking: revisiting computing with artistic research and technofeminism.,"Britton, Loren; Klumbyte, Goda; Draude, Claude"
07475632,99,10.1016/j.chb.2019.01.008,,Elsevier B.V.,"Over the last few years, the integration of coding activities for children in K-12 education has flourished. In addition, novel technological tools and programming environments have offered new opportunities and increased the need to design effective learning experiences. This paper presents a design-based research (DBR) approach conducted over two years, based on constructionism-based coding experiences for children, following the four stages of DBR. Three iterations (cycles) were designed and examined in total, with participants aged 8–17 years old, using mixed methods. Over the two years, we conducted workshops in which students used a block-based programming environment (i.e., Scratch) and collaboratively created a socially meaningful artifact (i.e., a game). The study identifies nine design principles that can help us to achieve higher engagement during the coding activity. Moreover, positive attitudes and high motivation were found to result in the better management of cognitive load. Our contribution lies in the theoretical grounding of the results in constructionism and the emerging design principles. In this way, we provide both theoretical and practical evidence of the value of constructionism-based coding activities. • Design-based research approach to investigate constructionism-based coding activities for children. • Identify elements of children's engagement in constructionism-based coding activities. • Theoretical grounding of the findings on constructionism theory. • Instructional design principles to facilitate constructionism-based coding activities for children. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Exploring children's learning experience in constructionism-based coding activities through design-based research.,"Papavlasopoulou, Sofia; Giannakos, Michail N.; Jaccheri, Letizia"
09246495,21,10.1007/s11023-011-9235-1,2,Springer Nature,"The increased interactivity and connectivity of computational devices along with the spreading of computational tools and computational thinking across the fields, has changed our understanding of the nature of computing. In the course of this development computing models have been extended from the initial abstract symbol manipulating mechanisms of stand-alone, discrete sequential machines, to the models of natural computing in the physical world, generally concurrent asynchronous processes capable of modelling living systems, their informational structures and dynamics on both symbolic and sub-symbolic information processing levels. Present account of models of computation highlights several topics of importance for the development of new understanding of computing and its role: natural computation and the relationship between the model and physical implementation, interactivity as fundamental for computational modelling of concurrent information processing systems such as living organisms and their networks, and the new developments in logic needed to support this generalized framework. Computing understood as information processing is closely related to natural sciences; it helps us recognize connections between sciences, and provides a unified approach for modeling and simulating of both living and non-living systems. [ABSTRACT FROM AUTHOR] Copyright of Minds & Machines is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Minds & Machines,"Significance of Models of Computation, from Turing Model to Natural Computation.","Dodig-Crnkovic, Gordana"
15475840,7,10.28945/1215,,Informing Science,"Computer science (CS) curricula are composed of various study modules, each of which focuses on particular contents, concepts, principles, and associated problem-solving methods. Developers of CS curricula recommend that students become acquainted with different programming paradigms in order to acquire alternative ways of computational thinking and various approaches for problem solving. In this paper, we illuminate two different though related paradigms: object-oriented programming and logic programming. We present and discuss the findings of a comparative study aimed at revealing similarities and dissimilarities between object oriented programming and logic programming in the context of problem-solving approaches and conclude with guidelines for instructional design of a study track that combines both paradigms. [ABSTRACT FROM AUTHOR] Copyright of Issues in Informing Science & Information Technology is the property of Informing Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Issues in Informing Science & Information Technology,So Different Though So Similar? -- Or Vice Versa? Exploration of the Logic Programming and the Object-Oriented Programming Paradigms.,"Haberman, Bruria; Ragonis, Noa"
14780771,7,10.1260/1478-0771.7.4.565,4,Sage Publications Inc.,"In-Between Architecture Computation describes the evolution of the Computational Design approach at the AedasR&D Computational Design and Research group founded in 2004 at Aedas architects in London. The approach has transformed itself from an academic inspired thinking about computing media to a more flexible model of design heuristics and search algorithms that finally start to produce new hybrid design workflows in the industry while also swimming against the industry trend of super-integration software. Only if computing is not exclusively defined through architectural design intent or purely computing logic, does computational design explore new design thinking. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Architectural Computing is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Architectural Computing,In-Between Architecture Computation.,"Derix, Christian"
15369323,10,,3,Association for Information Systems,"We provide a background discussion of group support systems (GSS) research into aiding strategic management processes. GSS support for strategic management has been primarily focused on qualitative analysis and the communication processes surrounding strategic planning. While fully developed in common decision-support systems, powerful simulation modeling and quantitative analytical tools have been difficult to integrate into GSS system configurations because they require increased cognitive load and expert modeling support, a central problem now addressed by collaboration engineering. A conceptual and functional bridge is needed to integrate the qualitative and quantitative approaches, reduce cognitive load, and provide modeling support that does not require experts. Acar's analytical causal mapping is introduced as a structured method for situational formulation and analysis of unstructured strategic problems. This form of causal mapping includes specific processes and analytical approaches offering cognitive modeling support for problem formulation. Its computational capabilities provide support for Systems Thinking approaches in a system easy to learn and use. Using the methodological template of the design science paradigm, we contribute a prototype system for the development and simulation of causal maps that uses RePast 2.0, a Java agent-based modeling (ABM) and simulation library. [ABSTRACT FROM AUTHOR] Copyright of Journal of the Association for Information Systems is the property of Association for Information Systems and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of the Association for Information Systems,An Agent-Based Collaborative Approach to Graphing Causal Maps for Situation Formulation.,"Druckenmiller, Douglas A.; Acar, William"
24144088,5,10.3390/mti5120072,12,MDPI,"Despite the prevalence of game-based learning (GBL), most applications of GBL focus on teaching routine skills that are easily teachable, drill-able, and testable. Much less work has examined complex cognitive skills such as computational thinking, and even fewer are projects that have demonstrated commercial or critical success with complex learning in game contexts. Yet, recent successes in the games industry have provided examples of success in game-based complex learning. This article represents a series of case studies on those successes. We interviewed game designers Zach Gage and Jack Schlesinger, creators of Good Sudoku, and Zach Barth, creator of Zachtronics games, using reflexive thematic analysis to thematize findings. We additionally conducted a close play of Duolingo following Bizzocchi and Tanenbaum's adaptation of close reading. Several insights result from these case studies, including the practice of game design as instructional design, the use of constructionist environments, the tensions between formal education and informal learning, and the importance of entrepreneurialism. Specific recommendations for GBL designers are provided. [ABSTRACT FROM AUTHOR] Copyright of Multimodal Technologies & Interaction is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Multimodal Technologies & Interaction,Case Studies in Game-Based Complex Learning.,"Miller, Josh Aaron; Cooper, Seth"
02663821,39,10.1177/02663821221110042,4,Sage Publications Inc.,"Libraries as social spaces are bound to evolve based on a society's level of civilisation and information media. This paper argues that the emergence of smart libraries have changed the paradigms of library by acknowledging the potential benefits and transformation smart library brings to library operations and services. It notes that analytical and computational thinking, data literacy, information literacy, social intelligence, programs and project management, cross-cultural competency, transliteracy, transdisciplinary, design thinking and mindset, virtual collaboration and cognitive load management are skills to be possessed by smart librarians. It highlights cloud computing, big data, 3D printing, IoT, Artificial Intelligence, RFID, drones etc., as the emerging technologies used for smart libraries and further discusses smart services, smart people, smart places and smart governance as the dimensions of smart library. Revelations are further made that smart libraries aid space saving, expansion of library working hours and services and promotes access to information, while remarks are made that lack of technological know-how, technophobia, data privacy and security, etc., are the challenges of smart library. It concludes that the emergence of smart library have facilitated the redefinition of library services and operations and recommends amongst others that librarians should continuously update their skills so that they can meet up with competitions that may arise from the challenges of globalisation of the information landscape. [ABSTRACT FROM AUTHOR] Copyright of Business Information Review is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Business Information Review,Smart libraries: Changing the paradigms of library services.,"Igwe, Kingsley N; Sulyman, Abdulakeem S"
25781863,2,10.1002/hbe2.220,4,Hindawi Limited,"The role of technology in STEM education remains unclear and needs stronger operational definition. In this paper, we explore the theoretical connection between STEM and emergent technologies, with a focus on learner behaviors and the potential of technology‐mediated experiences with computational participation (CP) in shaping STEM learning. In particular, by de‐emphasizing what technology is used and bringing renewed focus to how the technology is used, we make a case for CP as an epistemological and pedagogical approach that promotes collaborative STEM practices. Utilizing Ihde's work as a conceptual framework, we explore how technology‐mediated relations shape STEM learner experiences and behaviors by empowering learners to develop scientific knowledge through collaborative participation and interactive relationships with technology. In particular, we focus on technology mediated game‐based learning and citizen science, and examine how CP creates opportunities for STEM learners to leverage learning with technology in innovative ways. We argue that through computational and collaborative learning experiences, learners participate as members of STEM learning communities in ways that mirror how STEM professionals collaborate, applying interdisciplinary and transdisciplinary approaches to complex real‐world problems. Computational participation consequently creates opportunities for learner‐technology pairings to (re)shape STEM learning behaviors, empowering learners to engage collaboratively as members of a STEM community of practice. [ABSTRACT FROM AUTHOR] Copyright of Human Behavior & Emerging Technologies is the property of Hindawi Limited and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Human Behavior & Emerging Technologies,Computational participation and the learner‐technology pairing in K‐12 STEM education.,"Sivaraj, Ramya; Ellis, Joshua A.; Wieselmann, Jeanna R.; Roehrig, Gillian H."
03601315,179,10.1016/j.compedu.2021.104424,,Elsevier B.V.,"Providing high-quality instruction with technology has become more important than ever before. However, the instructional practices and the degree to which key skills, such as digital literacy and computational thinking, are emphasized in classrooms vary considerably between teachers, schools, and countries. The present study was aimed at explaining this variation in the frequency of teaching practices with technology and teachers' emphasis on developing students' computer and information literacy and computational thinking by key aspects of teacher motivation and expertise, school conditions and priorities, and countries' economy and innovation. Utilizing large-scale, representative data from the International Computer and Information Literacy Study (ICILS) 2018 (15,015 teachers in 1195 schools in eight countries), we performed multilevel structural equation modeling and regression trees and found that teacher motivation and collaboration were positively and consistently linked to teaching practices across countries. Besides, principals' expectations concerning the teaching with technology explained variation in Finnish and German schools. In three countries, teachers' professional development was related to their teaching practices. Finally, countries' economic development and innovation explained variation in the teacher-level effects. Our study sheds new light on the possible factors related to teaching with technology and advances the field by taking a multilevel and international perspective on these factors. • Emphasizing digital literacy and computational thinking is key to teaching with ICT. • Teacher motivation and collaboration were linked to ICT teaching across countries. • Principals' expectations explained ICT teaching in Finnish and German schools. • Regression trees supported the importance of motivation, expertise, collaboration. • Countries' GDP and innovation explained variation in the teacher-level effects. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,"Teaching with technology: A large-scale, international, and multilevel study of the roles of teacher and school characteristics.","Konstantinidou, Evi; Scherer, Ronny"
22111662,24,10.1007/s10758-018-9397-5,2,Springer Nature,"It has been quite a long time since S. Papert introduced the idea that children should be involved in the use of computers in the learning process to support the development of computational thinking. Nowadays, educational robotics is introduced in different dimensions of education, but mostly it is used as part of a compulsory educational process in nonformal educational activities, in activities to reduce the risks of early school leaving, and in initiatives introduced by some projects where different aspects of educational robotics are tested in activities with students who have diverse special needs. But till now robotics has mostly been associated with the field of Science, Technology, Engineering, and Mathematics, and outcomes of educational robotics are measured through the prism of improved knowledge in STEM subjects. In this special issue, journal researchers provide results on ER in the context of inclusive education. [ABSTRACT FROM AUTHOR] Copyright of Technology, Knowledge & Learning is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)","Technology, Knowledge & Learning",Educational Robotics for Inclusive Education.,"Daniela, Linda; Lytras, Miltiadis D."
03601315,128,10.1016/j.compedu.2018.09.006,,Elsevier B.V.,"Abstract Despite the growing number of digital apps designed to teach coding skills to young children, we know little about their effectiveness. To formally explore this question, we conducted a naturalistic observation of a one-week program designed to teach foundational coding skills (i.e., sequencing, conditions, loops) to young children (N = 28, M age = 5.15 years) using two tablet applications: Daisy the Dinosaur and Kodable. Pre- and post-assessments measured familiarity with technology, appeal of coding apps, knowledge of Daisy commands, ability to play Kodable, and conceptual understanding of coding. Participants improved in their knowledge of Daisy commands (i.e., move , grow , jump) and Kodable gameplay (i.e., placing arrows in the correct sequence to move a character through a maze), but did not improve in their ability to verbally explain what coding is. Appeal of the games was significantly related to children's learning of Daisy commands, but child gender was not related to either Daisy or Kodable learning outcomes. Results suggest that young children can learn foundational coding skills via apps, especially when the apps are appealing to children. Highlights • Children's learning of foundational coding skills via tablet apps was tested. • After one week, children demonstrated learning of game-specific coding skills. • Child gender was not related to learning outcomes. • App appeal was positively related to learning outcomes. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Learning to code via tablet applications: An evaluation of Daisy the Dinosaur and Kodable as learning tools for young children.,"Pila, Sarah; Aladé, Fashina; Sheehan, Kelly J.; Lauricella, Alexis R.; Wartella, Ellen A."
07356331,56,10.1177/0735633117746747,8,Sage Publications Inc.,"Computer programming has been gradually emphasized in recent computer literacy education and regarded as a requirement for all middle school students in some countries. To understand young students' perceptions about their own learning in computer programming, this study aimed to develop an instrument, Computer Programming Self-Efficacy Scale (CPSES), for all students above middle school levels. Based on Berland and Lee's computational thinking framework, this study developed the CPSES items at a literacy level and finally the instrument included the five subscales: Logical Thinking, Algorithm, Debug, Control, and Cooperation. An exploratory factor analysis and reliability tests were conducted in this study. The reliability alpha was .96 for the overall scale, and ranged from .84 to .96 for the subscales. This study also confirmed the positive correlation between computer programming experience and computer programming self-efficacy. In addition, for low- and middle-experienced learners, significant gender differences were found in two subscales: Algorithm and Debug. The CPSES can be applied as an evaluation tool in computer education, robotics education, as well as integrated STEM or STEAM education in which computer programming was regarded as a part of computer literacy. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Developing the Computer Programming Self-Efficacy Scale for Computer Literacy Education.,"Tsai, Meng-Jung; Wang, Ching-Yeh; Hsu, Po-Fen"
15391523,51,10.1080/15391523.2018.1553024,1,Taylor & Francis Ltd,"This study, which took place during a 7-week middle school computing course, used structural equation modeling to examine the overall cumulative relationship between self-efficacy, interest, and prior computing experience and students' computer science learning outcomes. The findings indicated that 52% of the variance of student success, measured by a computational thinking quiz and rubric-based evaluations of participants' computing artifacts, was related to the aforementioned learner characteristics. These findings have implications for theory and practice and suggest that future research and instructional design practice in K–12 computing education should take these learner characteristics into account. [ABSTRACT FROM AUTHOR] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,The Relationship Between Learner Characteristics and Student Outcomes in a Middle School Computing Course: An Exploratory Analysis Using Structural Equation Modeling.,"Ketenci, Tuba; Calandra, Brendan; Margulieux, Lauren; Cohen, Jonathan"
02664909,34,10.1111/jcal.12266,5,Wiley-Blackwell,"Abstract: The long‐standing debate into the potential benefit of developing mathematical thinking skills through learning to program has been reignited with the widespread introduction of programming in schools across many countries, including England where it is a statutory requirement for all pupils to be taught programming from 5 years old. Algorithm is introduced early in the English computing curriculum, yet there is limited knowledge of how young pupils view this concept. This paper explores pupils' (aged 10–11) understandings of algorithm following their engagement with 1 year of ScratchMaths, a curriculum designed to develop computational and mathematical thinking skills through learning to program. A total of 181 pupils from 6 schools undertook a set of written tasks to assess their interpretations and evaluations of different algorithms that solve the same problem, with a subset of these pupils subsequently interviewed to probe their understandings in greater depth. We discuss the different approaches identified, the evaluation criteria they used, and the aspects of the concept that pupils found intuitive or challenging, such as simplification and abstraction. The paper ends with some reflections on the implications of the research, concluding with a set of recommendations for pedagogy in developing primary pupils' algorithmic thinking. [ABSTRACT FROM AUTHOR] Copyright of Journal of Computer Assisted Learning is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Computer Assisted Learning,Beyond jam sandwiches and cups of tea: An exploration of primary pupils' algorithm‐evaluation strategies.,"Benton, L.; Kalas, I.; Saunders, P.; Hoyles, C.; Noss, R."
08848173,12,10.1002/(SICI)1098-111X(199702)12:2<105::AID-INT1>3.0.CO;2-U,2,Hindawi Limited,"The Knowledge Level (KL) is an abstract level of description, prior to the symbol or software level, which aims at discovering the components of expertise without thinking of computational aspects. The KL analysis emphasizes the regularities in knowledge use for knowledge engineering. We consider the knowledge level analysis the AI counterpart of the specification of programs. Then, it must be possible to define formal ways of putting in relation the KL analysis with computational elements that implement it. The ultimate goal of the research presented in this article is to contribute in the filling of the gap between specification at the KL and implementation. To do so we propose (i) a particular interpretation of the three main concepts involved in the knowledge level theories, i.e., tasks, methods, and domain models, and (ii) a mapping between these notions and computational elements of <BI>Milord II</BI>, a shell developed at the IIIA Institute and used as the target programming environment of an example in biological identification. © 1997 John Wiley & Sons, Inc. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Intelligent Systems is the property of Hindawi Limited and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Intelligent Systems,A knowledge level analysis of taxonomic domains.,"Domingo, Marta; Sierra, Carles"
00043702,199-200,10.1016/j.artint.2013.05.005,,Elsevier B.V.,,Artificial Intelligence,Computational Logic and Human Thinking: How to Be Artificially Intelligent.,"Bundy, Alan"
00043702,191-192,10.1016/j.artint.2012.05.006,,Elsevier B.V.,,Artificial Intelligence,Book review: Computational Logic and Human Thinking: How to Be Artificially Intelligent,"Bundy, Alan"
20798954,8,10.3390/systems8040048,4,MDPI,"Previous research has established that embodied modeling (role-playing agents in a system) can support learning about complexity. Separately, research has demonstrated that increasing the multimodal resources available to students can support sensemaking, particularly for students classified as English Learners. This study bridges these two bodies of research to consider how embodied models can strengthen an interconnected system of multimodal models created by a classroom. We explore how iteratively refining embodied modeling activities strengthened connections to other models, real-world phenomena, and multimodal representations. Through design-based research in a sixth grade classroom studying ecosystems, we refined embodied modeling activities initially conceived as supports for computational thinking and modeling. Across three iterative cycles, we illustrate how the conceptual and epistemic relationship between the computational and embodied model shifted, and we analyze how these shifts shaped opportunities for learning and participation by: (1) recognizing each student's perspectives as critical for making sense of the model, (2) encouraging students to question and modify the ""code"" for the model, and (3) leveraging multimodal resources, including graphs, gestures, and student-generated language, for meaning-making. Through these shifts, the embodied model became a full-fledged component of the classroom's model system and created more equitable opportunities for learning and participation. [ABSTRACT FROM AUTHOR] Copyright of Systems is the property of MDPI and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Systems,"Expanding Opportunities for Systems Thinking, Conceptual Learning, and Participation through Embodied and Computational Modeling.","Pierson, Ashlyn E.; Brady, Corey E."
00104620,55,10.1093/comjnl/bxs064,7,Oxford University Press / USA,"ACM Ubiquity hosted a symposium in 2010–2011 on Turing's question, ‘What is computation?’ The editor reflects on how the symposium was organized and what conclusions it reached. The authors showed strong consensus around the propositions that computation is a process, computational model matters, many computations are natural, many important computations are continuous, many important computations are nonterminating and computational thinking has emerged as a core practice of computing. They left open the questions of whether the Turing model is the best reference model, is computational necessarily a physical process, what is information and what is an algorithm. [ABSTRACT FROM PUBLISHER] Copyright of Computer Journal is the property of Oxford University Press / USA and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Journal,Reflections on a Symposium on Computation.,"Denning, Peter J."
07475632,100,10.1016/j.chb.2019.07.020,,Elsevier B.V.,"Technology-enhanced learning environments provide ample opportunities for learners to self-regulate their learning processes and activities for achieving the intended learning outcomes in various disciplines from soft to hard sciences and from humanities to the natural and social sciences. This special issue discusses the emerging technological advancements and cutting-edge research on self-regulated learning dealing with different cognitive, motivational, emotional, and social processes of learning both at the individual and group levels. Specifically, it discusses how to optimally use advanced technologies to facilitate learners' self-regulated learning for achieving their own individual learning needs and goals. In this special issue, seven researchers/research teams from the fields of collaborative learning, computational thinking, educational psychology, and learning analytics presented contributions to self-regulated learning with the goal of stimulating cross-border discussion in the field. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,Introduction paper special issue computers in human behavior multidisciplinary innovations and technologies for facilitation of self-regulated learning.,"Järvelä, Sanna; Kirschner, Paul A.; Noroozi, Omid"
00010782,53,10.1145/1721654.1721678,4,Association for Computing Machinery,"An introduction to a paper by Yehuda Koren, a senior research scientist at Yahoo! Research, is presented. Featured at the ACM SIGKDD Conference in Paris, France, in June 2009, the paper proposes the use of exploratory data analysis and visualization to uncover otherwise concealed information, specifically, to discover that the ratings data is non-stationary over time. In addition, the paper demonstrates clearly how to combine statistical thinking with computational methods to construct sophisticated models on very large data sets.",Communications of the ACM,Creativity Helps Influence Prediction Precision.,"Smyth, Padhraic; Elkan, Charles"
17465702,59,,4,Oxford University Press / USA,"An interview with author and education consultant Beverly Clarke is presented. Clarke discusses her book ""Computer Science Teacher"" and her career as teacher. She outlines her career highlights such as delivering excellent results year on year and being involved with developing videos for computational thinking videos BBC Bitesize. She elaborates the importance of teaching computing in schools for the future of computing in Great Britain.",ITNOW,TEACH COMPUTING.,"Clarke, Beverly"
08993408,27,10.1080/08993408.2018.1429062,03-abr,Taylor & Francis Ltd,"Enrolling the cultural capital of underrepresented communities in PK-12 technology and curriculum design has been a primary strategy for broadening the participation of students of color in U.S. computer science (CS) fields. This article examines two ways that African-American cultural capital and computing can be bridged in CS education. The first is <italic>community representation,</italic> using cultural capital to highlight students’ social identities and networks through computational thinking. The second, <italic>computational integration,</italic> locates computation in cultural capital itself. I survey two risks - the appearance of shallow computing and the reproduction of assimilationist logics - that may arise when constructing one bridge without the other. To avoid these risks, I introduce the concept of <italic>computational communities</italic> by exploring areas in CS education that employ both strategies. This concept is then grounded in qualitative data from an after school program that connected CS to African-American cosmetology. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Computational communities: African-American cultural capital in computer science education.,"Lachney, Michael"
19462166,8,10.3233/AAC-170015,1,IOS Press,"Argumentation is a mechanism to support different forms of reasoning such as decision making and persuasion and always cast under the light of critical thinking. In the latest years, several computational approaches to argumentation have been proposed to detect conflicting information, take the best decision with respect to the available knowledge, and update our own beliefs when new information arrives. The common point of all these approaches is that they assume a purely rational behavior of the involved actors, be them humans or artificial agents. However, this is not the case as humans are proved to behave differently, mixing rational and emotional attitudes to guide their actions. Some works have claimed that there exists a strong connection between the argumentation process and the emotions felt by people involved in such process. We advocate a complementary, descriptive and experimental method, based on the collection of emotional data about the way human reasoners handle emotions during debate interactions. Across different debates, people's argumentation in plain English is correlated with the emotions automatically detected from the participants, their engagement in the debate, and the mental workload required to debate. Results show several correlations among emotions, engagement and mental workload with respect to the argumentation elements. For instance, when two opposite opinions are conflicting, this is reflected in a negative way on the debaters' emotions. Beside their theoretical value for validating and inspiring computational argumentation theory, these results have applied value for developing artificial agents meant to argue with human users or to assist users in the management of debates. [ABSTRACT FROM AUTHOR] Copyright of Argument & Computation is the property of IOS Press and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Argument & Computation,Emotions and personality traits in argumentation: An empirical evaluation.,"Villata, Serena; Cabrio, Elena; Jraidi, Imène; Benlamine, Sahbi; Chaouachi, Maher; Frasson, Claude; Gandon, Fabien"
03064190,45,10.1177/0306419016674133,1,"Sage Publications, Ltd.","This paper reports the recent development and implementation of three teaching modules in order to teach and enhance the students' critical thinking skills in a level IV undergraduate/postgraduate course 'Computational Fluid Dynamics (CFD) for Engineering Applications'. These teaching modules include a lecture module, an online test module and a CFD project module. The lecture module introduces the importance of critical thinking skills by an example case, critical thinking definition and processes, and the application of critical thinking skills in formulation of CFD problems. In the online test module, seven online tests have been developed to enhance the students' understanding of the contents of lectures and practical sessions. Meanwhile, students apply their critical thinking skills to work out some of the tests. In the project module, a student-driven CFD project is designed to help students to apply CFD techniques and critical thinking skills in engineering problems. In the project, students choose their own project topic and problems. They use CFD skills learned in the course and critical thinking skills to critically analyse their problems, identify the important parameters and review results. They apply the critical writing skills to finalise a project report. To the best knowledge of the author, this systematical integration of teaching and enhancement of critical thinking skills in computational fluid dynamics course is innovative. Feedback from students is quite positive shown by an anonymous survey in 2014. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Mechanical Engineering Education is the property of Sage Publications, Ltd. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Mechanical Engineering Education,Teaching and enhancement of critical thinking skills for undergraduate students in a computational fluid dynamics course.,"Tian, Zhao F."
09333657,135,10.1016/j.artmed.2022.102458,,Elsevier B.V.,"Artificial intelligence (AI) has only partially (or not at all) been integrated into medical education, leading to growing concerns regarding how to train healthcare practitioners to handle the changes brought about by the introduction of AI. Programming lessons and other technical information into healthcare curricula has been proposed as a solution to support healthcare personnel in using AI or other future technology. However, integrating these core elements of computer science knowledge might not meet the observed need that students will benefit from gaining practical experience with AI in the direct application area. Therefore, this paper proposes a dynamic approach to case-based learning that utilizes the scenarios where AI is currently used in clinical practice as examples. This approach will support students' understanding of technical aspects. Case-based learning with AI as an example provides additional benefits: (1) it allows doctors to compare their thought processes to the AI suggestions and critically reflect on the assumptions and biases of AI and clinical practice; (2) it incentivizes doctors to discuss and address ethical issues inherent to technology and those already existing in current clinical practice; (3) it serves as a foundation for fostering interdisciplinary collaboration via discussion of different views between technologists, multidisciplinary experts, and healthcare professionals. The proposed knowledge shift from AI as a technical focus to AI as an example for case-based learning aims to encourage a different perspective on educational needs. Technical education does not need to compete with other essential clinical skills as it could serve as a basis for supporting them, which leads to better medical education and practice, ultimately benefiting patients. • Technical education in the form of Computational thinking goes beyond teaching programming languages, as it focus on the underlying assumptions and limitations that construct technology. • For medical students, teaching students about artificial intelligence (AI) directly in clinical applications is a helpful approach to support their understanding on AI. • To meet the needs of exposing students to AI, there is an opportunity to use scenarios and applications of artificial intelligence as examples for case-based learning. • Case-based learning methodology supports the analysis of practical issues while connecting technical and clinical concepts. • Using case-based learning with examples from scenarios where AI is currently implemented could also train reflective, ethical, and interdisciplinary skills. [ABSTRACT FROM AUTHOR] Copyright of Artificial Intelligence in Medicine is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Artificial Intelligence in Medicine,A smarter perspective: Learning with and from AI-cases.,"Ossa, Laura Arbelaez; Rost, Michael; Lorenzini, Giorgia; Shaw, David M.; Elger, Bernice Simone"
07475632,64,10.1016/j.chb.2016.07.017,,Elsevier B.V.,"Pair programming (PP) is a usefulness approach to fostering computational thinking (CT) for young students. However, there are many factors to impact the effectiveness of PP. Among all factors, the social factors are often ignored by researchers. Therefore, this study aimed to explore the impact of two social factors (gender and partnership) on PP in a primary school setting. To that end, we conducted PP experiments in four classes from the sixth grade in a Chinese primary school. The research results indicated: (a) there was no significant difference on compatibility among the gender pairs, but a significant difference among partnership pairs; (b) there was no significant difference on programming achievement and confidence among different pairs, and girls became more productive and confidence in PP; and (c) PP tightened up the partnership within pairs. These findings suggest that teachers should take partnership into account as an important factor in PP or other collaborative learning, and adopt PP as an effective approach to decrease the gender gap in programming courses, and make students socialize. [ABSTRACT FROM AUTHOR] Copyright of Computers in Human Behavior is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers in Human Behavior,The impact of social factors on pair programming in a primary school.,"Zhong, Baichang; Wang, Qiyun; Chen, Jie"
0192592X,45,,1,"1105 Media, Inc.","The article examines the usefulness of some classroom trends, such as adoption of virtual reality, computational thinking and continuing concerns about the protection of school data, in evolving new ways that will dominate education in the U.S. in 2018. Topics discussed include DefinedSTEM, a repository of resources that lays out the basics through videos, experiments; activities involving Virtual Reality in which the student does design and creation of physical or digital objects; and use of videoconferencing to connect more students with virtual classrooms.",T.H.E. Journal,WHAT'S HOT: ED TECH TRENDS TO WATCH IN 2018.,"SCHAFFHAUSER, DIAN"
00010782,52,,4,Association for Computing Machinery,"The article discusses the findings of researchers that indicate that Great Britain is a top-ranked research power amongst industrialized countries. Computational thinking that drives innovation in the field of computer science is an important factor in solving problems in many disciplines, the article states.",Communications of the ACM,U.K. Funding Fosters Innovation.,
00010782,51,,11,Association for Computing Machinery,"A letter to the editor is presented in response to the article ""Paving the Way for Computational Thinking,"" by Mark Guzdial in the August 2008 issue.",Communications of the ACM,How to Know When Important Details Are Omitted.,"Bates, Rodney M."
03601315,100,10.1016/j.compedu.2016.04.011,,Elsevier B.V.,"As computer programming and computational thinking (CT) become more integrated into K-12 instruction, content teachers and special educators need to understand how to provide instructional supports to a wide range of learners, including students with disabilities. This cross-case analysis study examined the supports that two students with disabilities, who were initially disengaged during computing activities, received during computing instruction. Data revealed that students' support needs during computing activities were not CT-specific. Rather, supports specific to these students' needs that were successful in other educational areas were also successful and sufficient in CT. Although additional studies would need to be conducted to ascertain the transferability of these findings to other contexts and students, our results contribute evidence that students with disabilities can and should participate in CT and be provided with the supports they need, just as in all other areas of the curriculum. We present a framework for evaluating student engagement to identify student-specific supports and, when needed, refine the emerging K-12 CT pedagogy to facilitate full participation of all students. We then offer a list of four implications for practice based on the findings. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Instructional supports for students with disabilities in K-5 computing: Findings from a cross-case analysis.,"Snodgrass, Melinda R.; Israel, Maya; Reese, George C."
22105433,29,10.1007/s13347-014-0184-5,1,Springer Nature,"The algorithm, a building block of computer science, is defined from an intuitive and pragmatic point of view, through a methodological lens of philosophy rather than that of formal computation. The treatment extracts properties of abstraction, control, structure, finiteness, effective mechanism, and imperativity, and intentional aspects of goal and preconditions. The focus on the algorithm as a robust conceptual object obviates issues of correctness and minimality. Neither the articulation of an algorithm nor the dynamic process constitute the algorithm itself. Analysis for implications in computer science and philosophy reveals unexpected results, new questions, and new perspectives on current questions, including the relationship between our informally construed algorithms and Turing machines. Exploration in terms of current computational and philosophical thinking invites further developments. [ABSTRACT FROM AUTHOR] Copyright of Philosophy & Technology is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Philosophy & Technology,What an Algorithm Is.,"Hill, Robin"
15219615,18,10.1109/MCSE.2016.37,2,IEEE,"Game-based learning environments can deliver robust learning gains and have a significant capacity to engage students. Yet, they can unintentionally disadvantage students with less prior game experience. This article presents evidence that a collaborative gameplay approach can effectively address this problem at the middle school level. In an iterative, designed-based research study, the authors first used an experimental pilot study to investigate the nature of collaboration in the Engage game-based learning environment and then deployed Engage in a full classroom study to measure its effectiveness at supporting all students during computer science learning. In early phases of the intervention, male students outpaced female peers in learning gains. However, female students caught up during a multiweek classroom implementation. These findings provide evidence that gender differences could dissipate over time within collaborative game-based learning experiences in computer science. [ABSTRACT FROM PUBLISHER] Copyright of Computing in Science & Engineering is the property of IEEE and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computing in Science & Engineering,Collaboration and Gender Equity in Game-Based Learning for Middle School Computer Science.,"Buffum, Philip Sheridan; Frankosky, Megan; Boyer, Kristy Elizabeth; Wiebe, Eric N.; Mott, Bradford W.; Lester, James C."
00104655,282,10.1016/j.cpc.2022.108546,,Elsevier B.V.,"In this paper we present the Open Software Services for Classrooms and Research (OSSCAR) platform. OSSCAR provides an open collaborative environment to develop and access educational resources in the form of web applications, for which various deployment methods are discussed and compared. To minimize efforts in the creation and use of new educational material, OSSCAR combines software tools that have emerged as standards with custom domain-specific ones. The technical solutions adopted to create and distribute content are described and motivated on the basis of reliability, sustainability, ease of uptake and use. Examples from courses in the domains of physics, chemistry, and materials science are shown to demonstrate the style and level of interactivity of typical applications. The tools presented are easy to use, and create a uniform and open environment exploitable by a large community of teachers, students, and researchers with the goal of facilitating learning and avoiding, when possible, duplication of efforts in creating teaching material. Contributions to expand the educational content of the OSSCAR project are welcome. Program Title: OSSCAR Interactive Notebooks for Quantum Mechanics and Computational Materials Science CPC Library link to program files: https://doi.org/10.17632/26py5zz9f8.1 Developer's repository link: https://github.com/osscar-org/quantum-mechanics Licensing provisions: MIT Programming language: Python Nature of problem: Among others, computational courses (e.g. on quantum mechanics) can benefit from advanced interactive visualizations of the content. However, on the one hand it might be complicated for teachers to develop such interactive content; on the other hand, students need to be able to access very quickly and efficiently the content, reducing the time needed to install libraries and dependencies that might differ between courses. Solution method: Here, we developed interactive web applications to complement teaching and encourage computational thinking for courses in computational physics, chemistry and materials science, using Jupyter notebooks and their rendering as interactive web applications. The latter is powered by a combination of Voila, to hide code and convert notebooks into live web applications, and (existing or custom) Jupyter widgets to enable interactiveness. The code is ready to be deployed via a number of open approaches. [ABSTRACT FROM AUTHOR] Copyright of Computer Physics Communications is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Physics Communications,"OSSCAR, an open platform for collaborative development of computational tools for education in science.","Du, Dou; Baird, Taylor J.; Bonella, Sara; Pizzi, Giovanni"
21580502,77,,4,International Technology & Engineering Educators Association,"An introduction is presented in which the editors discuss various reports within the issue on topics including computational thinking, the substitution of computer science (CS) courses in high schools, and computer programming.",Technology & Engineering Teacher,editorial.,"Loveland, Thomas; de la Paz, Kathleen B."
00104787,,,,"TechTarget, Inc.","The author discusses aspects of British chancellor George Osborne's measures to provide the demand for technology talent in Great Britain. The author is critical on the spending review and autumn statement directed funds for hiring and training teachers in subjects such as science, technology, engineering and mathematics (STEM). Also investigated is the effect of curriculum for computer science launched for ensure computational thinking and computing concepts for children.",Computer Weekly,Osborne earmarks Stem education budget - but is it enough to bridge the skills gap?,"McDonald, Clare"
07356331,51,10.2190/EC.51.2.c,2,Sage Publications Inc.,"Scratch, a visual programming language, was used in many studies in computer science education. Most of them reported positive results by integrating Scratch into K-12 computer courses. However, the object-oriented concept, one of the important computational thinking skills, is not represented well in Scratch. Alice, another visual programming language, seems to have better illustration of the object-oriented concept for programming novices. To demonstrate effects of Alice and Scratch, we compared students' responses to both visual programming languages, especially for students with low performances, in an introductory programming course. The relationships among learning engagement, learning anxiety, and learning playfulness were explored. The results could be referred to by computer science instructors to select proper visual programming language for corrective instruction. [ABSTRACT FROM AUTHOR] Copyright of Journal of Educational Computing Research is the property of Sage Publications Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Educational Computing Research,Effects of Using Alice and Scratch in an Introductory Programming Course for Corrective Instruction.,"Chang, Chih-Kai"
01679236,63,10.1016/j.dss.2013.08.008,,Elsevier B.V.,"Abstract: The era of big data has created new opportunities for researchers to achieve high relevance and impact amid changes and transformations in how we study social science phenomena. With the emergence of new data collection technologies, advanced data mining and analytics support, there seems to be fundamental changes that are occurring with the research questions we can ask, and the research methods we can apply. The contexts include social networks and blogs, political discourse, corporate announcements, digital journalism, mobile telephony, home entertainment, online gaming, financial services, online shopping, social advertising, and social commerce. The changing costs of data collection and the new capabilities that researchers have to conduct research that leverages micro-level, meso-level and macro-level data suggest the possibility of a scientific paradigm shift toward computational social science. The new thinking related to empirical regularities analysis, experimental design, and longitudinal empirical research further suggests that these approaches can be tailored for rapid acquisition of big data sets. This will allow business analysts and researchers to achieve frequent, controlled and meaningful observations of real-world phenomena. We discuss how our philosophy of science should be changing in step with the times, and illustrate our perspective with comparisons between earlier and current research inquiry. We argue against the assertion that theory no longer matters and offer some new research directions. [Copyright &y& Elsevier] Copyright of Decision Support Systems is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Decision Support Systems,Understanding the paradigm shift to computational social science in the presence of big data.,"Chang, Ray M.; Kauffman, Robert J.; Kwon, YoungOk"
08993408,24,10.1080/08993408.2014.952500,02-mar,Taylor & Francis Ltd,"When learning to program, students often mistakenly refer to an element that is structurally related to the element that they intend to reference. For example, they may indicate the attribute of an object when their intention is to reference the whole object. This paper examines these reference-point errors through the context of metonymy. Metonymy is a rhetorical device where the speaker states a referent that is structurally related to the intended referent. For example, the following sentence states an office bureau but actually refers to a person working at the bureau:The tourist asked the travel bureau for directions to the museum.Drawing upon previous studies, I discuss how student reference errors may be consistent with the use of metonymy. In particular, I hypothesize that students are more likely to reference an identifying element even when a structurally related element is intended. I then present two experiments, which produce results consistent with this analysis. In both experiments, students are more likely to produce reference-point errors that involve identifying attributes than descriptive attributes. Given these results, I explore the possibility that students are relying on habits of communication rather than the mechanistic principles needed for successful programming. Finally I discuss teaching interventions using live examples and how metonymy may be presented to non-computing students as pedagogy for computational thinking. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Metonymy and reference-point errors in novice programming.,"Miller, Craig S."
00313203,47,10.1016/j.patcog.2013.09.032,3,Elsevier B.V.,"Abstract: Several automation tools have been developed over the years for forensic document examination (FDE) of handwritten items. Integrating the developed tools into a unified framework is considered and the essential role of the human in the process is discussed. The task framework is developed by considering the approach of computational thinking whose components are abstraction, algorithms, mathematical models and ability to scale. Beginning with the human FDE procedure expressed in algorithmic form, mathematical and software implementations of individual steps of the algorithm are described. Advantages of the framework are discussed, including efficiency (ability to scale to tasks with many handwritten items), reproducibility and validation/improvement of existing manual procedures. It is indicated that as with other expert systems, such as for medical diagnosis, current automation tools are useful only as part of a larger manually intensive procedure. This viewpoint is illustrated with a well-known FDE case, concerning the Lindbergh kidnapping with a new hypothesis – in this case, there are multiple questioned documents, possibility of multiple writers of the same document, determining whether the writing is disguised, known writing is formal while questioned writing is informal, etc. Observations are made for future developments, where human examiners provide handwriting characteristics while computational methods provide the necessary statistical analysis. [Copyright &y& Elsevier] Copyright of Pattern Recognition is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Pattern Recognition,Role of automation in the examination of handwritten items.,"Srihari, Sargur N.; Singer, Kirsten"
15391523,46,10.1080/15391523.2014.888272,3,Taylor & Francis Ltd,"Pair programming is a strategy that grew out of industry and has shown promise for performance and retention in computer programming courses at universities and in industry. In this study, we examine whether pair programming is effective in K–12, what it is effective for, and how partners influence each other. We collected the data from 320 middle school students working alone or with a partner on a game programming task. Compared to working alone, pair programming was advantageous for computational thinking and for building programming knowledge, particularly among less experienced students. Students’ initial computer experience and attitude toward collaboration influenced their partners. Those with more experience relative to their partner achieved greater computer confidence and more positive attitudes toward computing. When students had a more positive attitude toward collaboration (relative to their partner), their programming knowledge decreased. We discuss implications for pairing students and for future research. [ABSTRACT FROM PUBLISHER] Copyright of Journal of Research on Technology in Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Journal of Research on Technology in Education,Pair Programming: Under What Conditions Is It Advantageous for Middle School Students?,"Denner, Jill; Werner, Linda; Campe, Shannon; Ortiz, Eloy"
21698767,,,,IEOM Society International,"The usage of computational Geographic Information System (GIS) has been spread this last two decades, either for achieving organization goals to only personal use. One of the opportunities of GIS implementation is, it can be used as study hub and provide bunch of datasets of certain area for research purpose. The purpose of this paper is to discuss on how to implement a GIS as a study source of Community of Practice. This paper will conduct a Systematic Literature Review on 17 articles and literatures published between 1998 to 2020 with keyword 'GIS', 'Community of Practice', and 'GIS Community of Practice'. This paper is specified but not limited to only discuss the preferred application of GIS for Community of Practice based on reviewed articles and literatures only. However, further research is needed to complement and improve the main goal of this article and also to adapt the system in further human society. [ABSTRACT FROM AUTHOR] Copyright of Proceedings of the International Conference on Industrial Engineering & Operations Management is the property of IEOM Society International and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Proceedings of the International Conference on Industrial Engineering & Operations Management,The Implementation of GIS as a means for Study Source of Community of Practice.,"Dananjaya, Wiku Sidik; Aristyagama, Yusfia Hafid; Budiyanto, Cucuk Wawan"
87556286,36,,4,Information Today Inc.,The article reports that American technology company Google Inc. has partnered with the organization American Library Association (ALA). The partnership involves development of an initiative supporting library staffers who facilitate informal computational thinking opportunities for pre-K to 12th-grade youth. Also emphasized is the development of children's critical literary skill and knowledge.,Information Today,ALA and Google Get Libraries Ready to Code.,"CHRISTOU, CORILEE"
14675463,14,10.1093/bib/bbt005,5,Oxford University Press / USA,"We believe that undergraduate biology students must acquire a foundational background in computing including how to formulate a computational problem; develop an algorithmic solution; implement their solution in software and then test, document and use their code to explore biological phenomena. Moreover, by learning these skills in the first year, students acquire a powerful tool set that they can use and build on throughout their studies.To address this need, we have developed a first-year undergraduate course that teaches students the foundations of computational thinking and programming in the context of problems in biology. This article describes the structure and content of the course and summarizes assessment data on both affective and learning outcomes. [ABSTRACT FROM AUTHOR] Copyright of Briefings in Bioinformatics is the property of Oxford University Press / USA and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Briefings in Bioinformatics,A first course in computing with applications to biology.,"Libeskind-Hadas, Ran; Bush, Eliot"
03640213,35,10.1111/j.1551-6709.2010.01142.x,1,Wiley-Blackwell,"Many kinds of creativity result from combination of mental representations. This paper provides a computational account of how creative thinking can arise from combining neural patterns into ones that are potentially novel and useful. We defend the hypothesis that such combinations arise from mechanisms that bind together neural activity by a process of convolution, a mathematical operation that interweaves structures. We describe computer simulations that show the feasibility of using convolution to produce emergent patterns of neural activity that can support cognitive and emotional processes underlying human creativity. [ABSTRACT FROM AUTHOR] Copyright of Cognitive Science is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Cognitive Science,The AHA! Experience: Creativity Through Emergent Binding in Neural Networks.,"Thagard, Paul; Stewart, Terrence C."
08993408,20,10.1080/08993408.2010.501226,3,Taylor & Francis Ltd,"Reduction is a central ingredient of computational thinking, and an important tool in algorithm design, in computability theory, and in complexity theory. Reduction has been recognized to be a difficult topic for students to learn. Previous studies on teaching reduction have concentrated on its use in special courses on the theory of computing. As a fundamental concept, reduction should be discussed multiple times during a curriculum, starting from first-year studies. In order to support this, we propose intuitive analogies based on the metaphor of traveling that could be used as an aid for illuminating key ideas of reductions on introductory computer science courses. [ABSTRACT FROM AUTHOR] Copyright of Computer Science Education is the property of Routledge and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Science Education,Do all roads lead to Rome? (Or reductions for dummy travelers).,"Kilpelainen, Pekka"
09507051,234,10.1016/j.knosys.2021.107596,,Elsevier B.V.,"A multi-granularity knowledge space is a computational model that simulates human thinking and solves complex problems. However, as the amount of data increases, the multi-granularity knowledge space will have a larger number of layers, which will reduce its problem-solving ability. Therefore, we define a knowledge space distance measurement and propose two algorithms to select k representative layers from the multi-granularity knowledge space, where k is specified by the user according to the needs in problem solving, and k representative layers are approximately equidistant. First, we propose a knowledge space distance to measure the distance between any two layers in a multi-granularity knowledge space with superset-subset relationships, and the rationality of the knowledge space distance is verified by theory and experiment. Second, relying on the knowledge space distance and knowledge space distance variance, we propose two algorithms (i.e., a deterministic algorithm and a heuristic algorithm) to select an approximate equidistant k -layer multi-granularity knowledge space. Third, in addition to verifying the effectiveness of the knowledge space distance, the knowledge space distance variance, the deterministic algorithm and the heuristic algorithm, we verify that the equidistant k -layer multi-granularity knowledge space is more efficient than the original multi-granularity knowledge space. [ABSTRACT FROM AUTHOR] Copyright of Knowledge-Based Systems is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Knowledge-Based Systems,Equidistant [formula omitted]-layer multi-granularity knowledge space.,"Duan, Jiangli; Wang, Guoyin; Hu, Xin"
1385951X,21,10.1007/s10799-020-00315-3,2,Springer Nature,An introduction is presented in which the editor discusses articles in the issue on topics including the knowledge- based dynamic model using Convolutional Neural Network; computational thinking; and knowledge- based hybrid decision-making model for the nutrition management of individual users.,Information Technology & Management,Knowledge discovery computing for management.,"Manaligod, Hector John T.; Diño, Michael Joseph S.; Jo, Sunmoon; Park, Roy C."
01969722,30,10.1080/019697299125073,6,Taylor & Francis Ltd,"This paper explores the role of the traditional computational metaphor in our thinking as computer scientists, its influence on epistemological styles, and its implications for our understanding of cognition. It proposes to replace the conventional metaphor a sequence of steps with the notion of a community of interacting entities, and examines the ramifications of such a shift on these various ways in which we think. [ABSTRACT FROM AUTHOR] Copyright of Cybernetics & Systems is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Cybernetics & Systems,CHALLENGING THE COMPUTATIONAL METAPHOR: IMPLICATIONS FOR HOW WE THINK.,"Stein, Lynn Andrea"
15219615,11,,2,IEEE,"The article discusses computational thinking, examining the author's views on what exactly computational thinking means. The author compares the definition of computational thinking as provided by the Center for Computational Thinking (CCT) with the concept of computational scientific thinking (CST).",Computing in Science & Engineering,OBSERVATOIRE LANDAU.,"Landau, Rubin"
03601315,153,10.1016/j.compedu.2020.103898,,Elsevier B.V.,"There is an increasing emphasis on teaching young learners to code; yet, there are few tools designed to measure the effect of learning to code on children. The purpose of this study was to develop and validate a tool to assess changes in young learners' attitudes toward coding: the Elementary Student Coding Attitudes Survey (ESCAS). We validated the scale using Confirmatory Factory Analysis and Structural Equation Modeling with responses from over 6000 4th-6th grade students (aged 9–12 years). Survey validation revealed a scale consisting of five constructs that comprise young learners' attitudes toward coding: social value , coding confidence , coding interest , perception of coders , and coding utility. In our analysis, students' grade level, ethnicity, gender, coding frequency, coding experience, and math interest influenced social value , which in turn influenced coding interest , perception of coders , and coding utility. Students' math confidence, coding frequency, coding experience, ethnicity, and coding interest predicted their coding confidence. Among observable variables, coding frequency and math interest had the greatest influence on social value , which substantially influenced all other factors. We discuss how this tool can help those who teach coding to young children to better measure and understand the variables that may influence young learners' attitudes toward coding over time. • The Elementary Student Coding Attitudes Survey assesses children's coding attitudes. • CFA confirmed five factors: social value, confidence, interest, utility, perception of coders. • In SEM, social value was the prime predictor of outcomes. • Also significant: grade level, coding frequency and experience, math interest and confidence. [ABSTRACT FROM AUTHOR] Copyright of Computers & Education is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computers & Education,Development and analysis of the Elementary Student Coding Attitudes Survey.,"Mason, Stacie L.; Rich, Peter J."
00256501,124,,9,American Society of Mechanical Engineers,"Convergent Thinking of Madison, Wisconsin, is using computational fluid dynamics, advanced visualization, and methods based on genetic algorithms to reduce engine emissions and enhance fuel efficiency. This is in response to the tighter vehicle emissions that will come on stream in 2007. The approach is based on a combination of desirable traits identified in different computer models. Current research at Convergent Thinking is focused on developing cleaner and more efficient engines as well as on the accurate modeling of diesel fuel injection processes.",Mechanical Engineering,Diesel Breeding.,
10591028,21,,10,Conde Nast Publications,"The article discusses the early exposure of children to computer coding or computer programming. Study has shown that it is ideal to introduce children to foreign tongues very early because young brains are adept at picking up languages. It is said that programming languages are best absorbed by students primed to form procedural memories. The concept of ""computational thinking"" is discussed.",Wired,"Readin', Writin' & Ruby On Rails.",
15476693,23,,6,"CyberRisk Alliance, LLC","The article focuses on the study conducted by the Apollo Research Institute on the influence of big data in reshaping new skills in the computerized world. It says that the study identifies several qualities of workers including computational thinking, design mindset, and cognitive load management. It mentions that information technology (IT) workers and companies can meet the challenge of an increasing data-driven world through the said qualities.",SC Magazine: For IT Security Professionals (15476693),Big Data requires new skills.,"Wilen-Daugenti, Tracey"
07384602,19,,2,AAAI,"The writers give a brief account of the life and work of the eccentric 13th century Spanish genius Ramón Lull, who presented fundamental ideas in artificial intelligence. Lull maintained that thinking is a computational process, that this process involves combining symbols, that it can be made mechanical, and that the mathematics of computation involves combinatorics.",AI Magazine,Ramón Lull and the infidels.,"Glymour, Clark; Ford, Kenneth M.; Hayes, Patrick J."
0192592X,44,,5,"1105 Media, Inc.","The article discusses the future of education technology. Topics discussed include latest developments in technology that will likely impact teaching, learning and creative inquiry in K-12 education; important developments in education technology that give school leaders, policymakers, teachers and technologists a valuable guide for shaping the future of student learning; teaching computational thinking, sustaining innovation through leadership changes, increase in learning and analytics technologies by science, technology, engineering, the arts and mathematics (STEAM) and critical steps of aligning trends to specific community needs to help every educational leader.",T.H.E. Journal,Ed Tech Forecast: The NMC/CoSN Horizon Report and Toolkit.,"Krueger, Keith"
0192592X,21,,9,"1105 Media, Inc.","Reports on the use of Grade Level Evaluation software by Parkview Elementary in Chula Vista, California. Ability to score tests instantly; Computational and critical-thinking skills; Provision of feedback; in-depth analysis; Features of the software.",T.H.E. Journal,Assessment tests provide feedback for elementary teachers and parents.,
10536728,38,,3,Future Publishing Ltd.,"The article discusses several technology trends that are supposed to significant for educators, as of October 2017, including teaching problem-solving skills by infusing coding and computational thinking; real-time learning feedback; and role of media literacy in dealing with fake news.",Tech & Learning,5 TECH TRENDS TO WATCH THIS SCHOOL YEAR.,
2673818X,,10.3389/fviro.2024.1379217,,Frontiers Media S.A.,"HIV-1 group M (HIV-1M) lineages downregulate HLA-I and CD4 expression via their Nef proteins. We hypothesized that these Nef functions may be partially responsible for the differences in prevalence of viruses from different lineages that co-circulate within an epidemic. Here, we characterized these two Nef activities in HIV-1M isolates from Cameroon, where multiple variants have been circulating since the pandemic's origin. Single HIV-1 Nef clones from 234 HIV-1- ART naïve individuals living in remote villages and two cosmopolitan cities of Cameroon, sampled between 2000 and 2013, were isolated from plasma HIV RNA and analyzed for their capacity to downregulate HLA-I and CD4 molecules. We found that, despite a large degree of within- and inter- lineage variation, the ability of Nef to downregulate HLA-I was similar across these different viruses. Moreover, Nef-mediated CD4 downregulation activity was also well conserved across the different lineages found in Cameroon. In addition, we observed a trend towards higher HLA-I downregulation activity of viruses circulating in the cosmopolitan cities versus the remote villages, whereas the CD4 downregulation activities were similar across the two settings. Furthermore, we noted a significant decline of HLA-I downregulation activity from 2000 to 2013, providing additional evidence supporting the attenuation of the global HIV-1M population over time. Finally, we identified 18 amino acids associated with differential HLA-I downregulation and 13 amino acids associated with differential CD4 downregulation within the dominant CRF02&lowbar;AG lineage. Our lack of observation of HIV lineage-related differences in Nef-mediated HLA-I and CD4 downregulation function suggests that these activities do not substantively influence the prevalence of different HIV-1M lineages in Cameroon. [ABSTRACT FROM AUTHOR] Copyright of Frontiers in Virology is the property of Frontiers Media S.A. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Frontiers in Virology,"No detectable differences in Nef-mediated downregulation of HLA-I and CD4 molecules among HIV-1 group M lineages circulating in Cameroon, where the pandemic originated.","Sonela, Nelson; Mann, Jaclyn; Godwe, Celestin; Goni, Oumarou H.; Tchakoute, Mérime; Nkoue, Nathalie; de Oliveira, Tulio; Brockman, Mark A.; Brumme, Zabrina L.; Ndung'u, Thumbi; Tongo, Marcel"
10536728,33,,7,Future Publishing Ltd.,The article offers information on how to implement a game design program in the school since it can be a powerful motivator. One can go to AMD Foundation's site (amd.com) which contains information for using game design in schools. Diana Laufenberg's blog (http://laufenberg.wordpress.com/) includes helpful resources for building an architecture for participatory media. ISTE's Web site too contains many resources for explaining computational thinking.,Tech & Learning,HOW TO IMPLEMENT A GAME-DESIGN PROGRAM IN YOUR SCHOOL.,"Minnigerode, Laura"
21960763,11,10.1140/epjqt/s40507-024-00224-2,1,Springer Nature,"Quantum algorithms for simulating quantum systems provide a clear and provable advantage over classical algorithms in fault-tolerant settings. There is also interest in quantum algorithms and their implementation in Noisy Intermediate Scale Quantum (NISQ) settings. In these settings, various noise sources and errors must be accounted for when executing any experiments. Recently, NISQ devices have been verified as versatile testbeds for simulating open quantum systems and have been used to simulate simple quantum channels. Our goal is to solve the more complicated problem of simulating convex mixtures of single qubit Pauli channels on NISQ devices. We consider two specific cases: mixtures of Markovian channels that result in a non-Markovian channel (M + M = nM) and mixtures of non-Markovian channels that result in a Markovian channel (nM + nM = M). For the first case, we consider mixtures of Markovian single qubit Pauli channels; for the second case, we consider mixtures of Non-Markovian single qubit depolarising channels, which is a special case of the single qubit Pauli channel. We show that efficient circuits, which account for the topology of currently available devices and current levels of decoherence, can be constructed by heuristic approaches that reduce the number of CNOT gates used in our circuit. We also present a strategy for regularising the process matrix so that the process tomography yields a completely positive and trace-preserving (CPTP) channel. Key points This work simulates the convex mixtures of single qubit Markovian and non-Markovian quantum channels on NISQ devices provided by the IMBQE. The circuits used to implement the channels take into account the topolgy of the quantum device used as well as the number of CNOT gates used. We present a strategy for regularising the process matrix to ensure the quantum process tomography yields a CPTP channel. Something that is not correctly implemented in Qiskit. A method is outlined for finding mixtures of non-Markovian depolarising channels that yield a Markovian depolarising channel. It is also shown that, one cannot convexly mix two Markovian depolarising channels that leads to a non-Markovian depolarising channel. [ABSTRACT FROM AUTHOR] Copyright of EPJ Quantum Technology is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",EPJ Quantum Technology,Digital simulation of convex mixtures of Markovian and non-Markovian single qubit Pauli channels on NISQ devices.,"David, I. J.; Sinayskiy, I.; Petruccione, F."
22967745,,10.3389/fmars.2023.1327719,,Frontiers Media S.A.,"International agreements recognize the importance of cooperative scientific research to conserve and promote sustainable development of a shared Atlantic Ocean. In 2022, the All-Atlantic Ocean Research and Innovation Alliance Declaration was signed. The All-Atlantic Declaration continues and extends relationships forged by the Galway Statement on Atlantic Ocean Cooperation and the Bele'm Statement on Atlantic Ocean Research and Innovation Cooperation. These efforts are consistent with programs, actions, and aims of the United Nations Decade of Ocean Science for Sustainable Development. In preparation for implementation of the All-Atlantic Declaration, members of the Marine Microbiome Working Group and the Marine Biotechnology Initiative for the Atlantic under the Galway and Bele'm Statements respectively, joined forces to call for cooperation across the Atlantic to increase marine microbiome and biotechnology research to promote ocean health and a sustainable bioeconomy. This article reviews the goals of the marine microbiome and biotechnology initiatives under the Galway and Bele'm Statements and outlines an approach to implement those goals under the All-Atlantic Declaration through a Blue Biotech and Marine Microbiome (BBAMM) collaboration. [ABSTRACT FROM AUTHOR] Copyright of Frontiers in Marine Science is the property of Frontiers Media S.A. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Frontiers in Marine Science,Catalyzing progress in the blue economy through joint marine microbiome research across the Atlantic.,"Ortmann, Alice C.; Goodwin, Kelly D.; Bolhuis, Henk; Groben, René; Makhalanyane, Thulani; Bowman, Jeff; Robinson, Shawn; Thompson, Fabiano"
12301612,30,10.1142/S1230161223500117,3,World Scientific Publishing Company,,Open Systems & Information Dynamics (OSID),Initial Correlations and Complete Positivity of Dynamical Maps.,"Jagadish, Vinayak; Srikanth, R.; Petruccione, Francesco"
20566387,9,10.1038/s41534-023-00747-z,1,Springer Nature,"Quantum circuit algorithms often require architectural design choices analogous to those made in constructing neural and tensor networks. These tend to be hierarchical, modular and exhibit repeating patterns. Neural Architecture Search (NAS) attempts to automate neural network design through learning network architecture and achieves state-of-the-art performance. We propose a framework for representing quantum circuit architectures using techniques from NAS, which enables search space design and architecture search. We use this framework to justify the importance of circuit architecture in quantum machine learning by generating a family of Quantum Convolutional Neural Networks (QCNNs) and evaluating them on a music genre classification dataset, GTZAN. Furthermore, we employ a genetic algorithm to perform Quantum Phase Recognition (QPR) as an example of architecture search with our representation. Finally, we implement the framework as an open-source Python package to enable dynamic circuit creation and facilitate circuit search space design for NAS. [ABSTRACT FROM AUTHOR] Copyright of NPJ Quantum Information is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",NPJ Quantum Information,Hierarchical quantum circuit representations for neural architecture search.,"Lourens, Matt; Sinayskiy, Ilya; Park, Daniel K.; Blank, Carsten; Petruccione, Francesco"
18645631,17,10.1002/cssc.202301594,14,Wiley-Blackwell,"The photocatalytic conversion in aqueous media of phenol and guaiacol as a lignin model compound using Nb2O5 with different crystal phases was studied. Nb2O5 particles were synthesized using hydrothermal methods, where it was observed that changes in the solvent control their morphology and crystal phase. Different photocatalytic behavior of Nb2O5 was observed with the selected model compounds, indicating that its selection directly impacts the resulting conversion and selectivity rates as well as the reaction pathway, highlighting the relevance of model molecule selection. Photocatalytic conversion of phenol showed conversion rate (C%) up to 25 % after 2 h irradiation and high selectivity (S%) to pyrogallol (up to 50 %). Orthorhombic Nb2O5 spheres favored conversion through free hydroxyl radicals while monoclinic rods did not convert phenol. Guaiacol photocatalytic oxidation showed high conversion rate but lower selectivity. Orthorhombic and monoclinic Nb2O5 favored the formation of resorcinol with S % ~0.43 % (C % ~33 %) and ~13 % (C % ~27 %) respectively. The mixture of both phases enhanced the guaiacol conversion rate to ~55 % with ~17 % of selectivity to salicylaldehyde. The use of radical scavengers provided information to elucidate the reaction pathway for these model compounds, showing that different reaction pathways may be obtained for the same photocatalyst if the model compound is changed. [ABSTRACT FROM AUTHOR] Copyright of ChemSusChem is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ChemSusChem,Role of Nb2O5 Crystal Phases on the Photocatalytic Conversion of Lignin Model Molecules and Selectivity for Value‐Added Products.,"Rojas, Susana D.; Rafaela, Gabriela; Espinoza‐Villalobos, Nicole; Diaz‐Droguett, Donovan E.; Salazar‐González, Ricardo; Caceres‐Jensen, Lizethly; Escalona, Néstor; Barrientos, Lorena"
10730516,30,10.1145/3569897,3,Association for Computing Machinery,"This systematic mapping review sheds light on how emerging technologies have been introduced and taught in various K–12 learning settings, particularly with regard to artificial intelligence (AI), machine learning (ML), the internet of things (IoT), augmented reality (AR), and virtual reality (VR). These technologies are rapidly being integrated into children’s everyday lives, but their functions and implications are rarely understood due to their complex and distributed nature. The review provides a rigorous overview of the state of the art based on 107 records published across the fields of human-computer interaction, learning sciences, computing education, and child–computer interaction between 2010 and 2020. The findings show the urgent need on a global scale for inter- and transdisciplinary research that can integrate these dispersed contributions into a more coherent field of research and practice. The article presents nine discussion points for developing a shared agenda to mature the field. Based on the HCI community’s expertise in human-centred approaches to technology and aspects of learning, we argue that the community is ideally positioned to take a leading role in the realisation of this future research agenda. [ABSTRACT FROM AUTHOR] Copyright of ACM Transactions on Computer-Human Interaction (TOCHI) is the property of Association for Computing Machinery and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ACM Transactions on Computer-Human Interaction (TOCHI),Emerging Technologies in K–12 Education: A Future HCI Research Agenda.,"MECHELEN, MAARTEN VAN; SMITH, RACHEL CHARLOTTE; SCHAPER, MARIE-MONIQUE; TAMASHIRO, MARIANA; BILSTRUP, KARL-EMIL; LUNDING, MILLE; PETERSEN, MARIANNE GRAVES; IVERSEN, OLE SEJER"
18605974,19,10.46298/LMCS-19(2:16)2023,2,Logical Methods in Computer Science,"Correctness-by-Construction (CbC) is an incremental program construction process to construct functionally correct programs. The programs are constructed stepwise along with a specification that is inherently guaranteed to be satisfied. CbC is complex to use without specialized tool support, since it needs a set of predefined refinement rules of fixed granularity which are additional rules on top of the programming language. Each refinement rule introduces a specific programming statement and developers cannot depart from these rules to construct programs. CbC allows to develop software in a structured and incremental way to ensure correctness, but the limited flexibility is a disadvantage of CbC. In this work, we compare classic CbC with CbC-Block and TraitCbC. Both approaches CbC-Block and TraitCbC, are related to CbC, but they have new language constructs that enable a more flexible software construction approach. We provide for both approaches a programming guideline, which similar to CbC, leads to well-structured programs. CbC-Block extends CbC by adding a refinement rule to insert any block of statements. Therefore, we introduce CbC-Block as an extension of CbC. TraitCbC implements correctness-by-construction on the basis of traits with specified methods. We formally introduce TraitCbC and prove soundness of the construction strategy. All three development approaches are qualitatively compared regarding their programming constructs, tool support, and usability to assess which is best suited for certain tasks and developers. [ABSTRACT FROM AUTHOR] Copyright of Logical Methods in Computer Science (LMCS) is the property of Logical Methods in Computer Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Logical Methods in Computer Science (LMCS),FLEXIBLE CORRECT-BY-CONSTRUCTION PROGRAMMING.,"RUNGE, TOBIAS; BORDIS, TABEA; POTANIN, ALEX; THÜM, THOMAS; SCHAEFER, INA"
13147374,12,10.12743/quanta.v12i1.226,1,Quanta,"One of the first proposals for the use of quantum computers was the simulation of quantum systems. Over the past three decades, great strides have been made in the development of algorithms for simulating closed quantum systems and the more complex open quantum systems. In this tutorial, we introduce the methods used in the simulation of single qubit Markovian open quantum systems. It combines various existing notations into a common framework that can be extended to more complex open system simulation problems. The only currently available algorithm for the digital simulation of single qubit open quantum systems is discussed in detail. A modification to the implementation of the simpler channels is made that removes the need for classical random sampling, thus making the modified algorithm a strictly quantum algorithm. The modified algorithm makes use of quantum forking to implement the simpler channels that approximate the total channel. This circumvents the need for quantum circuits with a large number of CNOT gates. [ABSTRACT FROM AUTHOR] Copyright of Quanta is the property of Quanta and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Quanta,Digital Simulation of Single Qubit Markovian Open Quantum Systems: A Tutorial.,"David, Ian Joel; Sinayskiy, Ilya; Petruccione, Francesco"
01677799,42,10.1016/j.tibtech.2023.12.011,8,Elsevier B.V.,"Despite the lack of research, development, and innovation funds, especially in South Atlantic countries, the Atlantic is suited to supporting a sustainable marine bioeconomy. Novel low-carbon mariculture systems can provide food security, new drugs, and climate mitigation. We suggest how to develop this sustainable marine bioeconomy across the entire Atlantic. [ABSTRACT FROM AUTHOR] Copyright of Trends in Biotechnology is the property of Pergamon Press - An Imprint of Elsevier Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Trends in Biotechnology,Leveraging marine biotechnology for an All-Atlantic sustainable blue economy.,"Thompson, Cristiane; Ortmann, Alice C.; Makhalanyane, Thulani; Thompson, Fabiano"
2673818X,,10.3389/fviro.2022.935131,,Frontiers Media S.A.,"Since the COVID-19 outbreak emerged, SARS-CoV-2 has continuously evolved into variants with underlying mutations associated with increased transmissibility, potential escape from neutralizing antibodies, and disease severity. The SARS-CoV-2 pandemic in South Africa has been characterized by periods of infections with four major epidemic waves. To determine whether the variants driving the epidemic waves at the national level were also driving the epidemic waves at the local level, we performed analysis of a total of 1287 samples from qPCR confirmed SARS-CoV-2 positive individuals. The samples were subjected to viral RNA extraction, genomic amplification, and sequencing. Variant assignment of the viral sequences and mutation identification were conducted using PANGOLIN and SARS-CoV-2 genome annotator, respectively. Our analysis revealed that during the initial part of the first wave, B.1, B.1.1, B.1.1.53, B.1.1.448 and B.1.237 circulated in the Free State province, followed by Beta variant, B.1.351 later in the wave. Although most of the initially detected variants disappeared during the second wave, the Beta variant, B.1.351, persisted. Early in the third wave, the Beta variant, B.1.351, predominated but was replaced by the Delta sub-lineage, AY.45. The fourth wave was characterized by unique emergence of the Omicron sub-variant, BA.1. The data further indicates that SARS-CoV-2 variants driving the epidemic waves in the Free State at the local level correlated with the ones driving the epidemic waves at the national level. Findings from this study highlight the importance of continued genomic surveillance and monitoring of the circulating SARS-CoV-2 variants to inform public health efforts and ensure adequate control of the ongoing pandemic. [ABSTRACT FROM AUTHOR] Copyright of Frontiers in Virology is the property of Frontiers Media S.A. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Frontiers in Virology,"SARS-CoV-2 variants from COVID-19 positive cases in the Free State province, South Africa from July 2020 to December 2021.","Mwangi, Peter; Okendo, Javan; Mogotsi, Milton; Ogunbayo, Ayodeji; Adelabu, Olusesan; Sondlane, Hlengiwe; Maotoana, Makgotso; Mahomed, Lutfiyya; Morobadi, Molefi Daniel; Vawda, Sabeehah; von Gottberg, Anne; Bhiman, Jinal; Tegally, Houriiyah; Wilkinson, Eduan; Giandhari, Jennifer; Pillay, Sureshnee; Naidoo, Yeshnee; Ramphal, Upasana; de Oliveira, Tulio; Bester, Armand"
,,,,Association for Computing Machinery,"The need for critically reflecting on the deceptive nature of advanced technologies, such as social robots, is urging academia and civil society to rethink education and the skills needed by future generations. The promotion of critical thinking, however, remains largely unaddressed within the field of educational robotics. To address this gap and question if and how robots can be used to promote critical thinking in young children's education, we conducted an explorative design study named Bringing Shybo Home. Through this study, in which a robot was used as a springboard for debate with twenty 8-to 9-year-old children at school, we exemplify how the deceptive nature of robots, if embraced and magnified in order for it to become explicitly controversial, can be used to nurture children's critical mindset. [ABSTRACT FROM AUTHOR] Copyright of ACM/IEEE International Conference on Human-Robot Interaction is the property of Association for Computing Machinery and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",ACM/IEEE International Conference on Human-Robot Interaction,Promoting Children's Critical Thinking Towards Robotics through Robot Deception.,"Lupetti, Maria Luce; van Mechelen, Maarten"
23311916,11,10.1080/23311916.2024.2322814,1,Taylor & Francis Ltd,"A drastic decline in the number of students that are enrolled for Engineering is now being experienced in developed as well as developing countries. Learning is becoming boring as a generation brought up on technology is losing the ability to pay attention in traditional classes for a long stretch of time. This has led to the idea that other teaching methods do exist and can be applied in teaching/learning. This work leveraged the use of Digital Game-Based Learning (DGBL) in Engineering classrooms to develop a serious game named LogicHouse Version 1 (LogicHouse-V1 or LogicHouse for short). The game, is a web-based serious game prototype that targets selected topics in Digital Electronics course. This course is a core component of undergraduate curriculum in Electrical & Electronics Engineering, Computer Engineering, Information Technology, Communication Engineering, Computer Science and other related Science Technology Engineering and Mathematics (STEM) courses. LogicHouse involves a virtual broken house where the player has to play the various levels to fix the house and gain points along the way. This game was designed based on the Learning Mechanics-Game Mechanics (LM-GM) model and the Unified Modeling Language (UML). Furthermore, the design was implemented using Adobe Illustrator, Procreate, Unity Engine, C#, Microsoft Azure Playfab and deployed on itch.io. Preliminary evaluation results indicate that students are interested in the game and its application. Based on this, there is a prospect of improved performance in any course in which the game is implemented. [ABSTRACT FROM AUTHOR] Copyright of Cogent Engineering is the property of Taylor & Francis Ltd and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Cogent Engineering,LogicHouse-v1: a digital game-based learning tool for enhanced teaching of digital electronics in higher education institutions.,"Ajayi, Joy; Adetiba, Emmanuel; Ifijeh, Ayodele H.; Abayomi, Abdultaofeek; Wejin, John; Thakur, Surendra; Sibusiso Moyo"
25119044,7,10.1002/qute.202300249,1,Wiley-Blackwell,"Multi‐class classification problems are fundamental in many varied domains in research and industry. A popular strategy for solving multi‐class classification problems involves first transforming the problem into many binary classification problems. However, this requires the number of binary classification models that need to be developed to grow with the number of classes. Recent work in quantum machine learning has seen the development of multi‐class quantum classifiers that circumvent this growth by learning a mapping between the data and a set of label states. This work presents the first multi‐class SWAP‐Test classifier inspired by its binary predecessor and the use of label states in recent work. With this classifier, the cost of developing multiple models is avoided. In contrast to previous work, the number of qubits required, the measurement strategy, and the topology of the circuits used is invariant to the number of classes. In addition, unlike other architectures for multi‐class quantum classifiers, the state reconstruction of a single qubit yields sufficient information for multi‐class classification tasks. Both analytical results and numerical simulations show that this classifier is not only effective when applied to diverse classification problems but also robust to certain conditions of noise. [ABSTRACT FROM AUTHOR] Copyright of Advanced Quantum Technologies is the property of Wiley-Blackwell and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Advanced Quantum Technologies,A Multi‐Class Quantum Kernel‐Based Classifier.,"Pillay, Shivani Mahashakti; Sinayskiy, Ilya; Jembere, Edgar; Petruccione, Francesco"
09515666,38,10.1007/s00146-021-01314-w,4,Springer Nature,"Children continue to be overlooked as a topic of concern in discussions around the ethical use of people's data and information. Where children are the subject of such discussions, the focus is often primarily on privacy concerns and consent relating to the use of their data. This paper highlights the unique challenges children face when it comes to online interferences with their decision-making, primarily due to their vulnerability, impressionability, the increased likelihood of disclosing personal information online, and their developmental capacities. These traits allow for practices such as hypernudging to be executed on them more accurately and with more serious consequences, specifically by potentially undermining their autonomy. We argue that children are autonomous agents in the making and thus require additional special protections to ensure that the development of their autonomy is safeguarded. This means that measures should be taken to prohibit most forms of hypernudging children and thus ensure that they are protected from this powerful technique of digital manipulation. [ABSTRACT FROM AUTHOR] Copyright of AI & Society is the property of Springer Nature and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",AI & Society,"Hey, Google, leave those kids alone: Against hypernudging children in the age of big data.","Smith, James; de Villiers-Botha, Tanya"
00368075,381,10.1126/science.adg6605,6655,American Association for the Advancement of Science,"Severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) variants of concern (VOCs) now arise in the context of heterogeneous human connectivity and population immunity. Through a large-scale phylodynamic analysis of 115,622 Omicron BA.1 genomes, we identified >6,000 introductions of the antigenically distinct VOC into England and analyzed their local transmission and dispersal history. We find that six of the eight largest English Omicron lineages were already transmitting when Omicron was first reported in southern Africa (22 November 2021). Multiple datasets show that importation of Omicron continued despite subsequent restrictions on travel from southern Africa as a result of export from well-connected secondary locations. Initiation and dispersal of Omicron transmission lineages in England was a two-stage process that can be explained by models of the countryÕs human geography and hierarchical travel network. Our results enable a comparison of the processes that drive the invasion of Omicron and other VOCs across multiple spatial scales. [ABSTRACT FROM AUTHOR] Copyright of Science is the property of American Association for the Advancement of Science and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Science,Genomic assessment of invasion dynamics of SARS-CoV-2 Omicron BA.1.,"Tsui, Joseph L.-H.; McCrone, John T.; Lambert, Ben; Bajaj, Sumali; Inward, Rhys P. D.; Bosetti, Paolo; Evans Pena, Rosario; Tegally, Houriiyah; Hill, Verity; Zarebski, Alexander E.; Peacock, Thomas P.; Luyang Liu; Neo Wu; Davis, Megan; Bogoch, Isaac I.; Khan, Kamran; Kall, Meaghan; Abdul Aziz, Nurin Iwani Binti; Colquhoun, Rachel; O’Toole, Áine"
01403664,199,10.1016/j.comcom.2022.12.010,,Elsevier B.V.,"In recent years, the spike in the amount of information transmitted through communication infrastructures has increased due to the advances in technologies such as cloud computing, vehicular networks systems, the Internet of Things (IoT), etc. As a result, attackers have multiplied their efforts for the purpose of rendering network systems vulnerable. Therefore, it is of utmost importance to improve the security of those network systems. In this study, an IDS framework using Machine Learning (ML) techniques is implemented. This framework uses different types of Recurrent Neural Networks (RNNs), namely, Long-Short Term Memory (LSTM), Gated Recurrent Unit (GRU) and Simple RNN. To assess the performance of the proposed IDS framework, the NSL-KDD and the UNSW-NB15 benchmark datasets are considered. Moreover, existing IDSs suffer from low test accuracy scores in detecting new attacks as the feature dimension grows. In this study, an XGBoost-based feature selection algorithm was implemented to reduce the feature space of each dataset. Following that process, 17 and 22 relevant attributes were picked from the UNSW-NB15 and NSL-KDD, respectively. The accuracy obtained through the test subsets was used as the main performance metric in conjunction with the F1-Score, the validation accuracy, and the training time (in seconds). The results showed that for the binary classification tasks using the NSL-KDD, the XGBoost-LSTM achieved the best performance with a test accuracy (TAC) of 88.13%, a validation accuracy (VAC) of 99.49% and a training time of 225.46 s. For the UNSW-NB15, the XGBoost-Simple-RNN was the most efficient model with a TAC of 87.07%. For the multiclass classification scheme, the XGBoost-LSTM achieved a TAC of 86.93% over the NSL-KDD and the XGBoost-GRU obtained a TAC of 78.40% over the UNSW-NB15 dataset. These results demonstrated that our proposed IDS framework performed optimally in comparison to existing methods. [ABSTRACT FROM AUTHOR] Copyright of Computer Communications is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Computer Communications,A deep learning technique for intrusion detection system using a Recurrent Neural Networks based framework.,"Kasongo, Sydney Mambwe"
09507051,296,10.1016/j.knosys.2024.111880,,Elsevier B.V.,"In this paper, a novel metaheuristic called 'The Hiking Optimization Algorithm' (HOA) is proposed. HOA is inspired by hiking, a popular recreational activity, in recognition of the similarity between the search landscapes of optimization problems and the mountainous terrains traversed by hikers. HOA's mathematical model is premised on Tobler's Hiking Function (THF), which determines the walking velocity of hikers (i.e. agents) by considering the elevation of the terrain and the distance covered. THF is employed in determining hikers' positions in the course of solving an optimization problem. HOA's performance is demonstrated by benchmarking with 29 well-known test functions (including unimodal, multimodal, fixed-dimension multimodal, and composite functions), three engineering design problems (EDPs), (including I-beam, tension/compression spring, and gear train problems) and two N-P Hard problems (i.e. Traveling Salesman's and Knapsack Problems). Moreover, HOA's results are verified by comparison to 14 other metaheuristics, including Teaching Learning Based Optimization (TLBO), Genetic Algorithm (GA), Differential Evolution (DE), Particle Swarm Optimization, Grey Wolf Optimizer (GWO) as well as newly introduced algorithms such as Komodo Mlipir Algorithm (KMA), Quadratic Interpolation Optimization (QIO), and Coronavirus Optimization Algorithm (COVIDOA). In this study, we employ statistical tests such as the Wilcoxon rank sum, Friedman test, and Dunn's post hoc test for the performance evaluation. HOA's results are competitive and, in many instances, outperform the aforementioned well-known metaheuristics. The source codes of HOA and related metaheuristics can be accessed publicly via this link: https://github.com/DayoSun/The-Hiking-Optimization-Algorithm. [ABSTRACT FROM AUTHOR] Copyright of Knowledge-Based Systems is the property of Elsevier B.V. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Knowledge-Based Systems,The Hiking Optimization Algorithm: A novel human-based metaheuristic approach.,"Oladejo, Sunday O.; Ekwe, Stephen O.; Mirjalili, Seyedali"
22512195,,10.5176/2251-2195_CSEIT16.35,,Global Science & Technology Forum,"The paper explores the notion of ""To Program is To Model"" in the realm of an introductory programming course. We present a number of intended learning outcomes and didactical design principles for the course, and we then describe the course content in terms of the system to be developed as well as the project to be undertaken. Based on this, we illustrate the many different ways software development can be understood, as ""To Program is To Model"". These reflections utilize a conceptual model in terms of domains and models useful when understanding and discussing software development. Finally we present a set of requirements for students to learn programming as modeling. [ABSTRACT FROM AUTHOR] Copyright of Annual International Conference on Computer Science Education: Innovation & Technology is the property of Global Science & Technology Forum and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",Annual International Conference on Computer Science Education: Innovation & Technology,"""To Program is To Model"": Software Development is Stepwise Improvement of Models.","Kristensen, Bent Bruun; Nowack, Palle; Caspersen, Michael"
10715819,130,10.1016/j.ijhcs.2019.06.013,,Academic Press Inc.,"• This paper presents the CoDeT (Collaborative design thinking) approach, developed for co-design settings characterized by a high child-to-adult ratio (ca. 1 adult for 15 to 20 children) such as schools, libraries and maker spaces. • Children often lack a basic understanding of the design process and skills to collaborate productively with peers; CoDeT addresses these challenges by scaffolding collaboration and design thinking. • To scaffold collaboration and design thinking, CoDeT relies on a framework that integrates social interdependence theory and design Thinking; this framework was validated in a case study with 49 children between 9 and 10 years old in two schools. This paper presents the Collaborative Design Thinking (CoDeT) co-design approach, its theoretical framework, and its application in a case study with 49 children aged 9 to 10 in two schools. CoDeT aims to scaffold children's collaboration and design thinking in co-design settings characterised by a high child-to-adult ratio (ca. 1 adult for 15 to 20 children), such as schools, museums and maker spaces. In these settings, children have to work relatively independent from adults who become guides on the side. This can be challenging due to children's limited understanding of the design process and their lack of skills to collaborate productively towards a shared design goal. CoDeT addresses these challenges by integrating principles of Social Interdependence Theory (SIT) and Design Thinking (DT), which together form the theoretical backbone of the approach. CoDeT was first applied in a case study and yielded promising results in terms of children's collaboration and design thinking skills, yet possible improvements were found. The insights of this case study informed the revised version of CoDeT presented at the end of this article, in a what-why-how structure, allowing researchers and practitioners to apply the co-design approach in a wide variety of contexts characterised by high child-to-adult ratios. [ABSTRACT FROM AUTHOR] Copyright of International Journal of Human-Computer Studies is the property of Academic Press Inc. and its content may not be copied or emailed to multiple sites or posted to a listserv without the copyright holder's express written permission. However, users may print, download, or email articles for individual use. This abstract may be abridged. No warranty is given about the accuracy of the copy. Users should refer to the original published version of the material for the full abstract. (Copyright applies to all Abstracts.)",International Journal of Human-Computer Studies,Collaborative Design Thinking (CoDeT): A co-design approach for high child-to-adult ratios.,"Van Mechelen, Maarten; Laenen, Ann; Zaman, Bieke; Willems, Bert; Abeele, Vero Vanden"
09217126,25,10.3233/aic-2012-0515,4,IOS Press,,AI Communications,Book Review.,"Pereira, Luís Moniz"
